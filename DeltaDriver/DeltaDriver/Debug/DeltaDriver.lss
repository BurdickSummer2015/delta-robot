
DeltaDriver.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000036e  00800200  0000514c  000051e0  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000514c  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000028c  0080056e  0080056e  0000554e  2**0
                  ALLOC
  3 .debug_aranges 000000e0  00000000  00000000  0000554e  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_pubnames 000005da  00000000  00000000  0000562e  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   000016e6  00000000  00000000  00005c08  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 0000082c  00000000  00000000  000072ee  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   0000165a  00000000  00000000  00007b1a  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  000003a0  00000000  00000000  00009174  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00000766  00000000  00000000  00009514  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000e63  00000000  00000000  00009c7a  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000078  00000000  00000000  0000aadd  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
	}
}

// Print error bit of status packet
void PrintErrorCode()
{
       0:	4a c1       	rjmp	.+660    	; 0x296 <__ctors_end>
       2:	00 00       	nop
       4:	69 c1       	rjmp	.+722    	; 0x2d8 <__bad_interrupt>
       6:	00 00       	nop
       8:	67 c1       	rjmp	.+718    	; 0x2d8 <__bad_interrupt>
       a:	00 00       	nop
       c:	65 c1       	rjmp	.+714    	; 0x2d8 <__bad_interrupt>
       e:	00 00       	nop
      10:	63 c1       	rjmp	.+710    	; 0x2d8 <__bad_interrupt>
      12:	00 00       	nop
      14:	61 c1       	rjmp	.+706    	; 0x2d8 <__bad_interrupt>
      16:	00 00       	nop
      18:	5f c1       	rjmp	.+702    	; 0x2d8 <__bad_interrupt>
      1a:	00 00       	nop
      1c:	5d c1       	rjmp	.+698    	; 0x2d8 <__bad_interrupt>
      1e:	00 00       	nop
      20:	5b c1       	rjmp	.+694    	; 0x2d8 <__bad_interrupt>
      22:	00 00       	nop
      24:	59 c1       	rjmp	.+690    	; 0x2d8 <__bad_interrupt>
      26:	00 00       	nop
      28:	57 c1       	rjmp	.+686    	; 0x2d8 <__bad_interrupt>
      2a:	00 00       	nop
      2c:	55 c1       	rjmp	.+682    	; 0x2d8 <__bad_interrupt>
      2e:	00 00       	nop
      30:	53 c1       	rjmp	.+678    	; 0x2d8 <__bad_interrupt>
      32:	00 00       	nop
      34:	51 c1       	rjmp	.+674    	; 0x2d8 <__bad_interrupt>
      36:	00 00       	nop
      38:	4f c1       	rjmp	.+670    	; 0x2d8 <__bad_interrupt>
      3a:	00 00       	nop
      3c:	4d c1       	rjmp	.+666    	; 0x2d8 <__bad_interrupt>
      3e:	00 00       	nop
      40:	4b c1       	rjmp	.+662    	; 0x2d8 <__bad_interrupt>
      42:	00 00       	nop
      44:	49 c1       	rjmp	.+658    	; 0x2d8 <__bad_interrupt>
      46:	00 00       	nop
      48:	47 c1       	rjmp	.+654    	; 0x2d8 <__bad_interrupt>
      4a:	00 00       	nop
      4c:	45 c1       	rjmp	.+650    	; 0x2d8 <__bad_interrupt>
      4e:	00 00       	nop
      50:	43 c1       	rjmp	.+646    	; 0x2d8 <__bad_interrupt>
      52:	00 00       	nop
      54:	41 c1       	rjmp	.+642    	; 0x2d8 <__bad_interrupt>
      56:	00 00       	nop
      58:	3f c1       	rjmp	.+638    	; 0x2d8 <__bad_interrupt>
      5a:	00 00       	nop
      5c:	3d c1       	rjmp	.+634    	; 0x2d8 <__bad_interrupt>
      5e:	00 00       	nop
      60:	3b c1       	rjmp	.+630    	; 0x2d8 <__bad_interrupt>
      62:	00 00       	nop
      64:	05 c5       	rjmp	.+2570   	; 0xa70 <__vector_25>
      66:	00 00       	nop
      68:	37 c1       	rjmp	.+622    	; 0x2d8 <__bad_interrupt>
      6a:	00 00       	nop
      6c:	35 c1       	rjmp	.+618    	; 0x2d8 <__bad_interrupt>
      6e:	00 00       	nop
      70:	33 c1       	rjmp	.+614    	; 0x2d8 <__bad_interrupt>
      72:	00 00       	nop
      74:	31 c1       	rjmp	.+610    	; 0x2d8 <__bad_interrupt>
      76:	00 00       	nop
      78:	2f c1       	rjmp	.+606    	; 0x2d8 <__bad_interrupt>
      7a:	00 00       	nop
      7c:	2d c1       	rjmp	.+602    	; 0x2d8 <__bad_interrupt>
      7e:	00 00       	nop
      80:	2b c1       	rjmp	.+598    	; 0x2d8 <__bad_interrupt>
      82:	00 00       	nop
      84:	29 c1       	rjmp	.+594    	; 0x2d8 <__bad_interrupt>
      86:	00 00       	nop
      88:	27 c1       	rjmp	.+590    	; 0x2d8 <__bad_interrupt>
      8a:	00 00       	nop
      8c:	25 c1       	rjmp	.+586    	; 0x2d8 <__bad_interrupt>
      8e:	00 00       	nop
      90:	f4 c5       	rjmp	.+3048   	; 0xc7a <__vector_36>
      92:	00 00       	nop
      94:	21 c1       	rjmp	.+578    	; 0x2d8 <__bad_interrupt>
      96:	00 00       	nop
      98:	1f c1       	rjmp	.+574    	; 0x2d8 <__bad_interrupt>
      9a:	00 00       	nop
      9c:	1d c1       	rjmp	.+570    	; 0x2d8 <__bad_interrupt>
      9e:	00 00       	nop
      a0:	1b c1       	rjmp	.+566    	; 0x2d8 <__bad_interrupt>
      a2:	00 00       	nop
      a4:	19 c1       	rjmp	.+562    	; 0x2d8 <__bad_interrupt>
      a6:	00 00       	nop
      a8:	17 c1       	rjmp	.+558    	; 0x2d8 <__bad_interrupt>
      aa:	00 00       	nop
      ac:	15 c1       	rjmp	.+554    	; 0x2d8 <__bad_interrupt>
      ae:	00 00       	nop
      b0:	13 c1       	rjmp	.+550    	; 0x2d8 <__bad_interrupt>
      b2:	00 00       	nop
      b4:	11 c1       	rjmp	.+546    	; 0x2d8 <__bad_interrupt>
      b6:	00 00       	nop
      b8:	0f c1       	rjmp	.+542    	; 0x2d8 <__bad_interrupt>
      ba:	00 00       	nop
      bc:	0d c1       	rjmp	.+538    	; 0x2d8 <__bad_interrupt>
      be:	00 00       	nop
      c0:	0b c1       	rjmp	.+534    	; 0x2d8 <__bad_interrupt>
      c2:	00 00       	nop
      c4:	09 c1       	rjmp	.+530    	; 0x2d8 <__bad_interrupt>
      c6:	00 00       	nop
      c8:	07 c1       	rjmp	.+526    	; 0x2d8 <__bad_interrupt>
      ca:	00 00       	nop
      cc:	07 2c       	mov	r0, r7
      ce:	7a a5       	ldd	r23, Y+42	; 0x2a
      d0:	ba 6c       	ori	r27, 0xCA	; 202
      d2:	c5 90       	lpm	r12, Z+
      d4:	da 3b       	cpi	r29, 0xBA	; 186
      d6:	93 65       	ori	r25, 0x53	; 83
      d8:	fc 8b       	std	Y+20, r31	; 0x14
      da:	bc 53       	subi	r27, 0x3C	; 60
      dc:	f8 10       	cpse	r15, r8
      de:	fd 3c       	cpi	r31, 0xCD	; 205
      e0:	56 92       	.word	0x9256	; ????
      e2:	83 4d       	sbci	r24, 0xD3	; 211
      e4:	bd 87       	std	Y+13, r27	; 0x0d
      e6:	9d 3a       	cpi	r25, 0xAD	; 173
      e8:	b6 3d       	cpi	r27, 0xD6	; 214
      ea:	cb c9       	rjmp	.-3178   	; 0xfffff482 <__eeprom_end+0xff7ef482>
      ec:	bf 5b       	subi	r27, 0xBF	; 191
      ee:	be 73       	andi	r27, 0x3E	; 62
      f0:	da 0f       	add	r29, r26
      f2:	c9 3f       	cpi	r28, 0xF9	; 249
      f4:	05 a8       	ldd	r0, Z+53	; 0x35
      f6:	4c cd       	rjmp	.-1384   	; 0xfffffb90 <__eeprom_end+0xff7efb90>
      f8:	b2 d4       	rcall	.+2404   	; 0xa5e <dxl_hal_rx+0x44>
      fa:	4e b9       	out	0x0e, r20	; 14
      fc:	38 36       	cpi	r19, 0x68	; 104
      fe:	a9 02       	muls	r26, r25
     100:	0c 50       	subi	r16, 0x0C	; 12
     102:	b9 91       	ld	r27, Y+
     104:	86 88       	ldd	r8, Z+22	; 0x16
     106:	08 3c       	cpi	r16, 0xC8	; 200
     108:	a6 aa       	std	Z+54, r10	; 0x36
     10a:	aa 2a       	or	r10, r26
     10c:	be 00       	.word	0x00be	; ????
     10e:	00 00       	nop
     110:	80 3f       	cpi	r24, 0xF0	; 240
     112:	07 63       	ori	r16, 0x37	; 55
     114:	42 36       	cpi	r20, 0x62	; 98
     116:	b7 9b       	sbis	0x16, 7	; 22
     118:	d8 a7       	std	Y+40, r29	; 0x28
     11a:	1a 39       	cpi	r17, 0x9A	; 154
     11c:	68 56       	subi	r22, 0x68	; 104
     11e:	18 ae       	std	Y+56, r1	; 0x38
     120:	ba ab       	std	Y+50, r27	; 0x32
     122:	55 8c       	ldd	r5, Z+29	; 0x1d
     124:	1d 3c       	cpi	r17, 0xCD	; 205
     126:	b7 cc       	rjmp	.-1682   	; 0xfffffa96 <__eeprom_end+0xff7efa96>
     128:	57 63       	ori	r21, 0x37	; 55
     12a:	bd 6d       	ori	r27, 0xDD	; 221
     12c:	ed fd       	.word	0xfded	; ????
     12e:	75 3e       	cpi	r23, 0xE5	; 229
     130:	f6 17       	cp	r31, r22
     132:	72 31       	cpi	r23, 0x12	; 18
     134:	bf 00       	.word	0x00bf	; ????
     136:	00 00       	nop
     138:	80 3f       	cpi	r24, 0xF0	; 240
     13a:	08 00       	.word	0x0008	; ????
     13c:	00 00       	nop
     13e:	be 92       	st	-X, r11
     140:	24 49       	sbci	r18, 0x94	; 148
     142:	12 3e       	cpi	r17, 0xE2	; 226
     144:	ab aa       	std	Y+51, r10	; 0x33
     146:	aa 2a       	or	r10, r26
     148:	be cd       	rjmp	.-1156   	; 0xfffffcc6 <__eeprom_end+0xff7efcc6>
     14a:	cc cc       	rjmp	.-1640   	; 0xfffffae4 <__eeprom_end+0xff7efae4>
     14c:	4c 3e       	cpi	r20, 0xEC	; 236
     14e:	00 00       	nop
     150:	00 80       	ld	r0, Z
     152:	be ab       	std	Y+54, r27	; 0x36
     154:	aa aa       	std	Y+50, r10	; 0x32
     156:	aa 3e       	cpi	r26, 0xEA	; 234
     158:	00 00       	nop
     15a:	00 00       	nop
     15c:	bf 00       	.word	0x00bf	; ????
     15e:	00 00       	nop
     160:	80 3f       	cpi	r24, 0xF0	; 240
     162:	00 00       	nop
     164:	00 00       	nop
     166:	00 08       	sbc	r0, r0
     168:	41 78       	andi	r20, 0x81	; 129
     16a:	d3 bb       	out	0x13, r29	; 19
     16c:	43 87       	std	Z+11, r20	; 0x0b
     16e:	d1 13       	cpse	r29, r17
     170:	3d 19       	sub	r19, r13
     172:	0e 3c       	cpi	r16, 0xCE	; 206
     174:	c3 bd       	out	0x23, r28	; 35
     176:	42 82       	std	Z+2, r4	; 0x02
     178:	ad 2b       	or	r26, r29
     17a:	3e 68       	ori	r19, 0x8E	; 142
     17c:	ec 82       	std	Y+4, r14	; 0x04
     17e:	76 be       	out	0x36, r7	; 54
     180:	d9 8f       	std	Y+25, r29	; 0x19
     182:	e1 a9       	ldd	r30, Z+49	; 0x31
     184:	3e 4c       	sbci	r19, 0xCE	; 206
     186:	80 ef       	ldi	r24, 0xF0	; 240
     188:	ff be       	out	0x3f, r15	; 63
     18a:	01 c4       	rjmp	.+2050   	; 0x98e <dxl_hal_get_qstate+0x24>
     18c:	ff 7f       	andi	r31, 0xFF	; 255
     18e:	3f 00       	.word	0x003f	; ????
     190:	00 00       	nop
	...

00000194 <__c.1790>:
     194:	6e 61 6e 00                                         nan.

00000198 <__c.1788>:
     198:	69 6e 66 00 00 40 7a 10 f3 5a 00 a0 72 4e 18 09     inf..@z..Z..rN..
     1a8:	00 10 a5 d4 e8 00 00 e8 76 48 17 00 00 e4 0b 54     ........vH.....T
     1b8:	02 00 00 ca 9a 3b 00 00 00 e1 f5 05 00 00 80 96     .....;..........
     1c8:	98 00 00 00 40 42 0f 00 00 00 a0 86 01 00 00 00     ....@B..........
     1d8:	10 27 00 00 00 00 e8 03 00 00 00 00 64 00 00 00     .'..........d...
     1e8:	00 00 0a 00 00 00 00 00 01 00 00 00 00 00 2c 76     ..............,v
     1f8:	d8 88 dc 67 4f 08 23 df c1 df ae 59 e1 b1 b7 96     ...gO.#....Y....
     208:	e5 e3 e4 53 c6 3a e6 51 99 76 96 e8 e6 c2 84 26     ...S.:.Q.v.....&
     218:	eb 89 8c 9b 62 ed 40 7c 6f fc ef bc 9c 9f 40 f2     ....b.@|o.....@.
     228:	ba a5 6f a5 f4 90 05 5a 2a f7 5c 93 6b 6c f9 67     ..o....Z*.\.kl.g
     238:	6d c1 1b fc e0 e4 0d 47 fe f5 20 e6 b5 00 d0 ed     m......G.. .....
     248:	90 2e 03 00 94 35 77 05 00 80 84 1e 08 00 00 20     .....5w........ 
     258:	4e 0a 00 00 00 c8 0c 33 33 33 33 0f 98 6e 12 83     N......3333..n..
     268:	11 41 ef 8d 21 14 89 3b e6 55 16 cf fe e6 db 18     .A..!..;.U......
     278:	d1 84 4b 38 1b f7 7c 1d 90 1d a4 bb e4 24 20 32     ..K8..|......$ 2
     288:	84 72 5e 22 81 00 c9 f1 24 ec a1 e5 3d 27           .r^"....$...='

00000296 <__ctors_end>:
     296:	11 24       	eor	r1, r1
     298:	1f be       	out	0x3f, r1	; 63
     29a:	cf ef       	ldi	r28, 0xFF	; 255
     29c:	d1 e2       	ldi	r29, 0x21	; 33
     29e:	de bf       	out	0x3e, r29	; 62
     2a0:	cd bf       	out	0x3d, r28	; 61
     2a2:	00 e0       	ldi	r16, 0x00	; 0
     2a4:	0c bf       	out	0x3c, r16	; 60

000002a6 <__do_copy_data>:
     2a6:	15 e0       	ldi	r17, 0x05	; 5
     2a8:	a0 e0       	ldi	r26, 0x00	; 0
     2aa:	b2 e0       	ldi	r27, 0x02	; 2
     2ac:	ec e4       	ldi	r30, 0x4C	; 76
     2ae:	f1 e5       	ldi	r31, 0x51	; 81
     2b0:	00 e0       	ldi	r16, 0x00	; 0
     2b2:	0b bf       	out	0x3b, r16	; 59
     2b4:	02 c0       	rjmp	.+4      	; 0x2ba <__do_copy_data+0x14>
     2b6:	07 90       	elpm	r0, Z+
     2b8:	0d 92       	st	X+, r0
     2ba:	ae 36       	cpi	r26, 0x6E	; 110
     2bc:	b1 07       	cpc	r27, r17
     2be:	d9 f7       	brne	.-10     	; 0x2b6 <__do_copy_data+0x10>

000002c0 <__do_clear_bss>:
     2c0:	17 e0       	ldi	r17, 0x07	; 7
     2c2:	ae e6       	ldi	r26, 0x6E	; 110
     2c4:	b5 e0       	ldi	r27, 0x05	; 5
     2c6:	01 c0       	rjmp	.+2      	; 0x2ca <.do_clear_bss_start>

000002c8 <.do_clear_bss_loop>:
     2c8:	1d 92       	st	X+, r1

000002ca <.do_clear_bss_start>:
     2ca:	aa 3f       	cpi	r26, 0xFA	; 250
     2cc:	b1 07       	cpc	r27, r17
     2ce:	e1 f7       	brne	.-8      	; 0x2c8 <.do_clear_bss_loop>
     2d0:	0e 94 ba 1a 	call	0x3574	; 0x3574 <main>
     2d4:	0c 94 a4 28 	jmp	0x5148	; 0x5148 <_exit>

000002d8 <__bad_interrupt>:
     2d8:	93 ce       	rjmp	.-730    	; 0x0 <__vectors>

000002da <dxl_get_result>:
     2da:	80 91 5b 05 	lds	r24, 0x055B
     2de:	90 91 5c 05 	lds	r25, 0x055C
     2e2:	08 95       	ret

000002e4 <dxl_set_txpacket_id>:
     2e4:	80 93 70 05 	sts	0x0570, r24
     2e8:	08 95       	ret

000002ea <dxl_set_txpacket_instruction>:
     2ea:	80 93 72 05 	sts	0x0572, r24
     2ee:	08 95       	ret

000002f0 <dxl_set_txpacket_parameter>:
     2f0:	fc 01       	movw	r30, r24
     2f2:	e2 59       	subi	r30, 0x92	; 146
     2f4:	fa 4f       	sbci	r31, 0xFA	; 250
     2f6:	65 83       	std	Z+5, r22	; 0x05
     2f8:	08 95       	ret

000002fa <dxl_set_txpacket_length>:
     2fa:	80 93 71 05 	sts	0x0571, r24
     2fe:	08 95       	ret

00000300 <dxl_get_rxpacket_error>:
     300:	20 e0       	ldi	r18, 0x00	; 0
     302:	30 e0       	ldi	r19, 0x00	; 0
     304:	90 91 12 06 	lds	r25, 0x0612
     308:	98 23       	and	r25, r24
     30a:	11 f0       	breq	.+4      	; 0x310 <dxl_get_rxpacket_error+0x10>
     30c:	21 e0       	ldi	r18, 0x01	; 1
     30e:	30 e0       	ldi	r19, 0x00	; 0
     310:	c9 01       	movw	r24, r18
     312:	08 95       	ret

00000314 <dxl_get_rxpacket_length>:
     314:	80 91 11 06 	lds	r24, 0x0611
     318:	90 e0       	ldi	r25, 0x00	; 0
     31a:	08 95       	ret

0000031c <dxl_get_rxpacket_parameter>:
     31c:	fc 01       	movw	r30, r24
     31e:	e2 5f       	subi	r30, 0xF2	; 242
     320:	f9 4f       	sbci	r31, 0xF9	; 249
     322:	85 81       	ldd	r24, Z+5	; 0x05
     324:	90 e0       	ldi	r25, 0x00	; 0
     326:	08 95       	ret

00000328 <dxl_makeword>:
     328:	36 2f       	mov	r19, r22
     32a:	20 e0       	ldi	r18, 0x00	; 0
     32c:	28 0f       	add	r18, r24
     32e:	39 1f       	adc	r19, r25
     330:	c9 01       	movw	r24, r18
     332:	08 95       	ret

00000334 <dxl_get_lowbyte>:
     334:	28 2f       	mov	r18, r24
     336:	30 e0       	ldi	r19, 0x00	; 0
     338:	c9 01       	movw	r24, r18
     33a:	08 95       	ret

0000033c <dxl_get_highbyte>:
     33c:	80 70       	andi	r24, 0x00	; 0
     33e:	89 2f       	mov	r24, r25
     340:	90 e0       	ldi	r25, 0x00	; 0
     342:	08 95       	ret

00000344 <dxl_rx_packet>:
     344:	0f 93       	push	r16
     346:	1f 93       	push	r17
     348:	cf 93       	push	r28
     34a:	df 93       	push	r29
     34c:	80 91 56 06 	lds	r24, 0x0656
     350:	90 91 57 06 	lds	r25, 0x0657
     354:	89 2b       	or	r24, r25
     356:	09 f4       	brne	.+2      	; 0x35a <dxl_rx_packet+0x16>
     358:	b8 c0       	rjmp	.+368    	; 0x4ca <dxl_rx_packet+0x186>
     35a:	80 91 70 05 	lds	r24, 0x0570
     35e:	8e 3f       	cpi	r24, 0xFE	; 254
     360:	09 f4       	brne	.+2      	; 0x364 <dxl_rx_packet+0x20>
     362:	a9 c0       	rjmp	.+338    	; 0x4b6 <dxl_rx_packet+0x172>
     364:	80 91 5b 05 	lds	r24, 0x055B
     368:	90 91 5c 05 	lds	r25, 0x055C
     36c:	89 2b       	or	r24, r25
     36e:	29 f4       	brne	.+10     	; 0x37a <dxl_rx_packet+0x36>
     370:	10 92 55 06 	sts	0x0655, r1
     374:	86 e0       	ldi	r24, 0x06	; 6
     376:	80 93 54 06 	sts	0x0654, r24
     37a:	80 91 55 06 	lds	r24, 0x0655
     37e:	90 e0       	ldi	r25, 0x00	; 0
     380:	60 91 54 06 	lds	r22, 0x0654
     384:	70 e0       	ldi	r23, 0x00	; 0
     386:	68 1b       	sub	r22, r24
     388:	79 0b       	sbc	r23, r25
     38a:	82 5f       	subi	r24, 0xF2	; 242
     38c:	99 4f       	sbci	r25, 0xF9	; 249
     38e:	45 d3       	rcall	.+1674   	; 0xa1a <dxl_hal_rx>
     390:	90 91 55 06 	lds	r25, 0x0655
     394:	98 0f       	add	r25, r24
     396:	90 93 55 06 	sts	0x0655, r25
     39a:	80 91 54 06 	lds	r24, 0x0654
     39e:	98 17       	cp	r25, r24
     3a0:	18 f4       	brcc	.+6      	; 0x3a8 <dxl_rx_packet+0x64>
     3a2:	46 d2       	rcall	.+1164   	; 0x830 <dxl_hal_timeout>
     3a4:	01 97       	sbiw	r24, 0x01	; 1
     3a6:	71 f0       	breq	.+28     	; 0x3c4 <dxl_rx_packet+0x80>
     3a8:	70 91 55 06 	lds	r23, 0x0655
     3ac:	47 2f       	mov	r20, r23
     3ae:	50 e0       	ldi	r21, 0x00	; 0
     3b0:	da 01       	movw	r26, r20
     3b2:	11 97       	sbiw	r26, 0x01	; 1
     3b4:	8a 01       	movw	r16, r20
     3b6:	02 50       	subi	r16, 0x02	; 2
     3b8:	10 40       	sbci	r17, 0x00	; 0
     3ba:	60 e0       	ldi	r22, 0x00	; 0
     3bc:	ed 01       	movw	r28, r26
     3be:	c2 5f       	subi	r28, 0xF2	; 242
     3c0:	d9 4f       	sbci	r29, 0xF9	; 249
     3c2:	18 c0       	rjmp	.+48     	; 0x3f4 <dxl_rx_packet+0xb0>
     3c4:	80 91 55 06 	lds	r24, 0x0655
     3c8:	88 23       	and	r24, r24
     3ca:	09 f0       	breq	.+2      	; 0x3ce <dxl_rx_packet+0x8a>
     3cc:	71 c0       	rjmp	.+226    	; 0x4b0 <dxl_rx_packet+0x16c>
     3ce:	86 e0       	ldi	r24, 0x06	; 6
     3d0:	90 e0       	ldi	r25, 0x00	; 0
     3d2:	73 c0       	rjmp	.+230    	; 0x4ba <dxl_rx_packet+0x176>
     3d4:	f9 01       	movw	r30, r18
     3d6:	e2 5f       	subi	r30, 0xF2	; 242
     3d8:	f9 4f       	sbci	r31, 0xF9	; 249
     3da:	80 81       	ld	r24, Z
     3dc:	8f 3f       	cpi	r24, 0xFF	; 255
     3de:	19 f4       	brne	.+6      	; 0x3e6 <dxl_rx_packet+0xa2>
     3e0:	81 81       	ldd	r24, Z+1	; 0x01
     3e2:	8f 3f       	cpi	r24, 0xFF	; 255
     3e4:	61 f0       	breq	.+24     	; 0x3fe <dxl_rx_packet+0xba>
     3e6:	20 17       	cp	r18, r16
     3e8:	31 07       	cpc	r19, r17
     3ea:	19 f4       	brne	.+6      	; 0x3f2 <dxl_rx_packet+0xae>
     3ec:	88 81       	ld	r24, Y
     3ee:	8f 3f       	cpi	r24, 0xFF	; 255
     3f0:	31 f0       	breq	.+12     	; 0x3fe <dxl_rx_packet+0xba>
     3f2:	6f 5f       	subi	r22, 0xFF	; 255
     3f4:	26 2f       	mov	r18, r22
     3f6:	30 e0       	ldi	r19, 0x00	; 0
     3f8:	2a 17       	cp	r18, r26
     3fa:	3b 07       	cpc	r19, r27
     3fc:	5c f3       	brlt	.-42     	; 0x3d4 <dxl_rx_packet+0x90>
     3fe:	66 23       	and	r22, r22
     400:	a1 f0       	breq	.+40     	; 0x42a <dxl_rx_packet+0xe6>
     402:	90 e0       	ldi	r25, 0x00	; 0
     404:	42 1b       	sub	r20, r18
     406:	53 0b       	sbc	r21, r19
     408:	08 c0       	rjmp	.+16     	; 0x41a <dxl_rx_packet+0xd6>
     40a:	e2 5f       	subi	r30, 0xF2	; 242
     40c:	f9 4f       	sbci	r31, 0xF9	; 249
     40e:	df 01       	movw	r26, r30
     410:	a2 0f       	add	r26, r18
     412:	b3 1f       	adc	r27, r19
     414:	8c 91       	ld	r24, X
     416:	80 83       	st	Z, r24
     418:	9f 5f       	subi	r25, 0xFF	; 255
     41a:	e9 2f       	mov	r30, r25
     41c:	f0 e0       	ldi	r31, 0x00	; 0
     41e:	e4 17       	cp	r30, r20
     420:	f5 07       	cpc	r31, r21
     422:	9c f3       	brlt	.-26     	; 0x40a <dxl_rx_packet+0xc6>
     424:	76 1b       	sub	r23, r22
     426:	70 93 55 06 	sts	0x0655, r23
     42a:	20 91 55 06 	lds	r18, 0x0655
     42e:	80 91 54 06 	lds	r24, 0x0654
     432:	28 17       	cp	r18, r24
     434:	28 f1       	brcs	.+74     	; 0x480 <dxl_rx_packet+0x13c>
     436:	90 91 70 05 	lds	r25, 0x0570
     43a:	80 91 10 06 	lds	r24, 0x0610
     43e:	98 17       	cp	r25, r24
     440:	b9 f5       	brne	.+110    	; 0x4b0 <dxl_rx_packet+0x16c>
     442:	60 91 11 06 	lds	r22, 0x0611
     446:	6c 5f       	subi	r22, 0xFC	; 252
     448:	60 93 54 06 	sts	0x0654, r22
     44c:	26 17       	cp	r18, r22
     44e:	88 f4       	brcc	.+34     	; 0x472 <dxl_rx_packet+0x12e>
     450:	82 2f       	mov	r24, r18
     452:	90 e0       	ldi	r25, 0x00	; 0
     454:	70 e0       	ldi	r23, 0x00	; 0
     456:	68 1b       	sub	r22, r24
     458:	79 0b       	sbc	r23, r25
     45a:	82 5f       	subi	r24, 0xF2	; 242
     45c:	99 4f       	sbci	r25, 0xF9	; 249
     45e:	dd d2       	rcall	.+1466   	; 0xa1a <dxl_hal_rx>
     460:	90 91 55 06 	lds	r25, 0x0655
     464:	98 0f       	add	r25, r24
     466:	90 93 55 06 	sts	0x0655, r25
     46a:	80 91 54 06 	lds	r24, 0x0654
     46e:	98 17       	cp	r25, r24
     470:	38 f0       	brcs	.+14     	; 0x480 <dxl_rx_packet+0x13c>
     472:	80 91 11 06 	lds	r24, 0x0611
     476:	a8 2f       	mov	r26, r24
     478:	b0 e0       	ldi	r27, 0x00	; 0
     47a:	20 e0       	ldi	r18, 0x00	; 0
     47c:	90 e0       	ldi	r25, 0x00	; 0
     47e:	0c c0       	rjmp	.+24     	; 0x498 <dxl_rx_packet+0x154>
     480:	85 e0       	ldi	r24, 0x05	; 5
     482:	90 e0       	ldi	r25, 0x00	; 0
     484:	90 93 5c 05 	sts	0x055C, r25
     488:	80 93 5b 05 	sts	0x055B, r24
     48c:	1e c0       	rjmp	.+60     	; 0x4ca <dxl_rx_packet+0x186>
     48e:	e2 5f       	subi	r30, 0xF2	; 242
     490:	f9 4f       	sbci	r31, 0xF9	; 249
     492:	82 81       	ldd	r24, Z+2	; 0x02
     494:	98 0f       	add	r25, r24
     496:	2f 5f       	subi	r18, 0xFF	; 255
     498:	e2 2f       	mov	r30, r18
     49a:	f0 e0       	ldi	r31, 0x00	; 0
     49c:	ae 17       	cp	r26, r30
     49e:	bf 07       	cpc	r27, r31
     4a0:	b4 f7       	brge	.-20     	; 0x48e <dxl_rx_packet+0x14a>
     4a2:	a2 5f       	subi	r26, 0xF2	; 242
     4a4:	b9 4f       	sbci	r27, 0xF9	; 249
     4a6:	90 95       	com	r25
     4a8:	13 96       	adiw	r26, 0x03	; 3
     4aa:	8c 91       	ld	r24, X
     4ac:	89 17       	cp	r24, r25
     4ae:	19 f0       	breq	.+6      	; 0x4b6 <dxl_rx_packet+0x172>
     4b0:	87 e0       	ldi	r24, 0x07	; 7
     4b2:	90 e0       	ldi	r25, 0x00	; 0
     4b4:	02 c0       	rjmp	.+4      	; 0x4ba <dxl_rx_packet+0x176>
     4b6:	81 e0       	ldi	r24, 0x01	; 1
     4b8:	90 e0       	ldi	r25, 0x00	; 0
     4ba:	90 93 5c 05 	sts	0x055C, r25
     4be:	80 93 5b 05 	sts	0x055B, r24
     4c2:	10 92 57 06 	sts	0x0657, r1
     4c6:	10 92 56 06 	sts	0x0656, r1
     4ca:	df 91       	pop	r29
     4cc:	cf 91       	pop	r28
     4ce:	1f 91       	pop	r17
     4d0:	0f 91       	pop	r16
     4d2:	08 95       	ret

000004d4 <dxl_tx_packet>:
     4d4:	1f 93       	push	r17
     4d6:	80 91 56 06 	lds	r24, 0x0656
     4da:	90 91 57 06 	lds	r25, 0x0657
     4de:	01 97       	sbiw	r24, 0x01	; 1
     4e0:	09 f4       	brne	.+2      	; 0x4e4 <dxl_tx_packet+0x10>
     4e2:	5d c0       	rjmp	.+186    	; 0x59e <dxl_tx_packet+0xca>
     4e4:	81 e0       	ldi	r24, 0x01	; 1
     4e6:	90 e0       	ldi	r25, 0x00	; 0
     4e8:	90 93 57 06 	sts	0x0657, r25
     4ec:	80 93 56 06 	sts	0x0656, r24
     4f0:	80 91 71 05 	lds	r24, 0x0571
     4f4:	89 39       	cpi	r24, 0x99	; 153
     4f6:	40 f4       	brcc	.+16     	; 0x508 <dxl_tx_packet+0x34>
     4f8:	90 91 72 05 	lds	r25, 0x0572
     4fc:	89 2f       	mov	r24, r25
     4fe:	81 50       	subi	r24, 0x01	; 1
     500:	86 30       	cpi	r24, 0x06	; 6
     502:	28 f0       	brcs	.+10     	; 0x50e <dxl_tx_packet+0x3a>
     504:	93 38       	cpi	r25, 0x83	; 131
     506:	19 f0       	breq	.+6      	; 0x50e <dxl_tx_packet+0x3a>
     508:	84 e0       	ldi	r24, 0x04	; 4
     50a:	90 e0       	ldi	r25, 0x00	; 0
     50c:	2f c0       	rjmp	.+94     	; 0x56c <dxl_tx_packet+0x98>
     50e:	8f ef       	ldi	r24, 0xFF	; 255
     510:	80 93 6e 05 	sts	0x056E, r24
     514:	80 93 6f 05 	sts	0x056F, r24
     518:	80 91 71 05 	lds	r24, 0x0571
     51c:	a8 2f       	mov	r26, r24
     51e:	b0 e0       	ldi	r27, 0x00	; 0
     520:	20 e0       	ldi	r18, 0x00	; 0
     522:	90 e0       	ldi	r25, 0x00	; 0
     524:	05 c0       	rjmp	.+10     	; 0x530 <dxl_tx_packet+0x5c>
     526:	e2 59       	subi	r30, 0x92	; 146
     528:	fa 4f       	sbci	r31, 0xFA	; 250
     52a:	82 81       	ldd	r24, Z+2	; 0x02
     52c:	98 0f       	add	r25, r24
     52e:	2f 5f       	subi	r18, 0xFF	; 255
     530:	e2 2f       	mov	r30, r18
     532:	f0 e0       	ldi	r31, 0x00	; 0
     534:	ae 17       	cp	r26, r30
     536:	bf 07       	cpc	r27, r31
     538:	b4 f7       	brge	.-20     	; 0x526 <dxl_tx_packet+0x52>
     53a:	a2 59       	subi	r26, 0x92	; 146
     53c:	ba 4f       	sbci	r27, 0xFA	; 250
     53e:	90 95       	com	r25
     540:	13 96       	adiw	r26, 0x03	; 3
     542:	9c 93       	st	X, r25
     544:	80 91 5b 05 	lds	r24, 0x055B
     548:	90 91 5c 05 	lds	r25, 0x055C
     54c:	06 97       	sbiw	r24, 0x06	; 6
     54e:	02 97       	sbiw	r24, 0x02	; 2
     550:	08 f4       	brcc	.+2      	; 0x554 <dxl_tx_packet+0x80>
     552:	34 d1       	rcall	.+616    	; 0x7bc <dxl_hal_clear>
     554:	10 91 71 05 	lds	r17, 0x0571
     558:	1c 5f       	subi	r17, 0xFC	; 252
     55a:	8e e6       	ldi	r24, 0x6E	; 110
     55c:	95 e0       	ldi	r25, 0x05	; 5
     55e:	61 2f       	mov	r22, r17
     560:	70 e0       	ldi	r23, 0x00	; 0
     562:	31 d1       	rcall	.+610    	; 0x7c6 <dxl_hal_tx>
     564:	18 17       	cp	r17, r24
     566:	59 f0       	breq	.+22     	; 0x57e <dxl_tx_packet+0xaa>
     568:	82 e0       	ldi	r24, 0x02	; 2
     56a:	90 e0       	ldi	r25, 0x00	; 0
     56c:	90 93 5c 05 	sts	0x055C, r25
     570:	80 93 5b 05 	sts	0x055B, r24
     574:	10 92 57 06 	sts	0x0657, r1
     578:	10 92 56 06 	sts	0x0656, r1
     57c:	10 c0       	rjmp	.+32     	; 0x59e <dxl_tx_packet+0xca>
     57e:	80 91 72 05 	lds	r24, 0x0572
     582:	82 30       	cpi	r24, 0x02	; 2
     584:	29 f4       	brne	.+10     	; 0x590 <dxl_tx_packet+0xbc>
     586:	80 91 74 05 	lds	r24, 0x0574
     58a:	90 e0       	ldi	r25, 0x00	; 0
     58c:	06 96       	adiw	r24, 0x06	; 6
     58e:	02 c0       	rjmp	.+4      	; 0x594 <dxl_tx_packet+0xc0>
     590:	86 e0       	ldi	r24, 0x06	; 6
     592:	90 e0       	ldi	r25, 0x00	; 0
     594:	3c d1       	rcall	.+632    	; 0x80e <dxl_hal_set_timeout>
     596:	10 92 5c 05 	sts	0x055C, r1
     59a:	10 92 5b 05 	sts	0x055B, r1
     59e:	1f 91       	pop	r17
     5a0:	08 95       	ret

000005a2 <dxl_txrx_packet>:
     5a2:	98 df       	rcall	.-208    	; 0x4d4 <dxl_tx_packet>
     5a4:	80 91 5b 05 	lds	r24, 0x055B
     5a8:	90 91 5c 05 	lds	r25, 0x055C
     5ac:	89 2b       	or	r24, r25
     5ae:	39 f4       	brne	.+14     	; 0x5be <dxl_txrx_packet+0x1c>
     5b0:	c9 de       	rcall	.-622    	; 0x344 <dxl_rx_packet>
     5b2:	80 91 5b 05 	lds	r24, 0x055B
     5b6:	90 91 5c 05 	lds	r25, 0x055C
     5ba:	05 97       	sbiw	r24, 0x05	; 5
     5bc:	c9 f3       	breq	.-14     	; 0x5b0 <dxl_txrx_packet+0xe>
     5be:	08 95       	ret

000005c0 <dxl_write_word>:
     5c0:	28 2f       	mov	r18, r24
     5c2:	80 91 56 06 	lds	r24, 0x0656
     5c6:	90 91 57 06 	lds	r25, 0x0657
     5ca:	89 2b       	or	r24, r25
     5cc:	89 f4       	brne	.+34     	; 0x5f0 <dxl_write_word+0x30>
     5ce:	20 93 70 05 	sts	0x0570, r18
     5d2:	83 e0       	ldi	r24, 0x03	; 3
     5d4:	80 93 72 05 	sts	0x0572, r24
     5d8:	60 93 73 05 	sts	0x0573, r22
     5dc:	ca 01       	movw	r24, r20
     5de:	40 93 74 05 	sts	0x0574, r20
     5e2:	80 70       	andi	r24, 0x00	; 0
     5e4:	90 93 75 05 	sts	0x0575, r25
     5e8:	85 e0       	ldi	r24, 0x05	; 5
     5ea:	80 93 71 05 	sts	0x0571, r24
     5ee:	d9 cf       	rjmp	.-78     	; 0x5a2 <dxl_txrx_packet>
     5f0:	ff cf       	rjmp	.-2      	; 0x5f0 <dxl_write_word+0x30>

000005f2 <dxl_read_word>:
     5f2:	28 2f       	mov	r18, r24
     5f4:	80 91 56 06 	lds	r24, 0x0656
     5f8:	90 91 57 06 	lds	r25, 0x0657
     5fc:	89 2b       	or	r24, r25
     5fe:	b1 f4       	brne	.+44     	; 0x62c <dxl_read_word+0x3a>
     600:	20 93 70 05 	sts	0x0570, r18
     604:	82 e0       	ldi	r24, 0x02	; 2
     606:	80 93 72 05 	sts	0x0572, r24
     60a:	60 93 73 05 	sts	0x0573, r22
     60e:	80 93 74 05 	sts	0x0574, r24
     612:	84 e0       	ldi	r24, 0x04	; 4
     614:	80 93 71 05 	sts	0x0571, r24
     618:	c4 df       	rcall	.-120    	; 0x5a2 <dxl_txrx_packet>
     61a:	30 91 14 06 	lds	r19, 0x0614
     61e:	20 e0       	ldi	r18, 0x00	; 0
     620:	80 91 13 06 	lds	r24, 0x0613
     624:	28 0f       	add	r18, r24
     626:	31 1d       	adc	r19, r1
     628:	c9 01       	movw	r24, r18
     62a:	08 95       	ret
     62c:	ff cf       	rjmp	.-2      	; 0x62c <dxl_read_word+0x3a>

0000062e <dxl_write_byte>:
     62e:	28 2f       	mov	r18, r24
     630:	80 91 56 06 	lds	r24, 0x0656
     634:	90 91 57 06 	lds	r25, 0x0657
     638:	89 2b       	or	r24, r25
     63a:	69 f4       	brne	.+26     	; 0x656 <dxl_write_byte+0x28>
     63c:	20 93 70 05 	sts	0x0570, r18
     640:	83 e0       	ldi	r24, 0x03	; 3
     642:	80 93 72 05 	sts	0x0572, r24
     646:	60 93 73 05 	sts	0x0573, r22
     64a:	40 93 74 05 	sts	0x0574, r20
     64e:	84 e0       	ldi	r24, 0x04	; 4
     650:	80 93 71 05 	sts	0x0571, r24
     654:	a6 cf       	rjmp	.-180    	; 0x5a2 <dxl_txrx_packet>
     656:	ff cf       	rjmp	.-2      	; 0x656 <dxl_write_byte+0x28>

00000658 <dxl_read_byte>:
     658:	28 2f       	mov	r18, r24
     65a:	80 91 56 06 	lds	r24, 0x0656
     65e:	90 91 57 06 	lds	r25, 0x0657
     662:	89 2b       	or	r24, r25
     664:	91 f4       	brne	.+36     	; 0x68a <dxl_read_byte+0x32>
     666:	20 93 70 05 	sts	0x0570, r18
     66a:	82 e0       	ldi	r24, 0x02	; 2
     66c:	80 93 72 05 	sts	0x0572, r24
     670:	60 93 73 05 	sts	0x0573, r22
     674:	81 e0       	ldi	r24, 0x01	; 1
     676:	80 93 74 05 	sts	0x0574, r24
     67a:	84 e0       	ldi	r24, 0x04	; 4
     67c:	80 93 71 05 	sts	0x0571, r24
     680:	90 df       	rcall	.-224    	; 0x5a2 <dxl_txrx_packet>
     682:	80 91 13 06 	lds	r24, 0x0613
     686:	90 e0       	ldi	r25, 0x00	; 0
     688:	08 95       	ret
     68a:	ff cf       	rjmp	.-2      	; 0x68a <dxl_read_byte+0x32>

0000068c <dxl_ping>:
     68c:	28 2f       	mov	r18, r24
     68e:	80 91 56 06 	lds	r24, 0x0656
     692:	90 91 57 06 	lds	r25, 0x0657
     696:	89 2b       	or	r24, r25
     698:	49 f4       	brne	.+18     	; 0x6ac <dxl_ping+0x20>
     69a:	20 93 70 05 	sts	0x0570, r18
     69e:	81 e0       	ldi	r24, 0x01	; 1
     6a0:	80 93 72 05 	sts	0x0572, r24
     6a4:	82 e0       	ldi	r24, 0x02	; 2
     6a6:	80 93 71 05 	sts	0x0571, r24
     6aa:	7b cf       	rjmp	.-266    	; 0x5a2 <dxl_txrx_packet>
     6ac:	ff cf       	rjmp	.-2      	; 0x6ac <dxl_ping+0x20>

000006ae <dxl_terminate>:
     6ae:	85 c0       	rjmp	.+266    	; 0x7ba <dxl_hal_close>

000006b0 <dxl_initialize>:
     6b0:	0f 93       	push	r16
     6b2:	1f 93       	push	r17
     6b4:	8c 01       	movw	r16, r24
     6b6:	6f 5f       	subi	r22, 0xFF	; 255
     6b8:	7f 4f       	sbci	r23, 0xFF	; 255
     6ba:	88 27       	eor	r24, r24
     6bc:	77 fd       	sbrc	r23, 7
     6be:	80 95       	com	r24
     6c0:	98 2f       	mov	r25, r24
     6c2:	0e 94 6c 1e 	call	0x3cd8	; 0x3cd8 <__floatsisf>
     6c6:	9b 01       	movw	r18, r22
     6c8:	ac 01       	movw	r20, r24
     6ca:	60 e0       	ldi	r22, 0x00	; 0
     6cc:	74 e2       	ldi	r23, 0x24	; 36
     6ce:	84 ef       	ldi	r24, 0xF4	; 244
     6d0:	99 e4       	ldi	r25, 0x49	; 73
     6d2:	0e 94 d1 1d 	call	0x3ba2	; 0x3ba2 <__divsf3>
     6d6:	ab 01       	movw	r20, r22
     6d8:	bc 01       	movw	r22, r24
     6da:	c8 01       	movw	r24, r16
     6dc:	15 d0       	rcall	.+42     	; 0x708 <dxl_hal_open>
     6de:	89 2b       	or	r24, r25
     6e0:	19 f4       	brne	.+6      	; 0x6e8 <dxl_initialize+0x38>
     6e2:	20 e0       	ldi	r18, 0x00	; 0
     6e4:	30 e0       	ldi	r19, 0x00	; 0
     6e6:	0c c0       	rjmp	.+24     	; 0x700 <dxl_initialize+0x50>
     6e8:	81 e0       	ldi	r24, 0x01	; 1
     6ea:	90 e0       	ldi	r25, 0x00	; 0
     6ec:	90 93 5c 05 	sts	0x055C, r25
     6f0:	80 93 5b 05 	sts	0x055B, r24
     6f4:	10 92 57 06 	sts	0x0657, r1
     6f8:	10 92 56 06 	sts	0x0656, r1
     6fc:	21 e0       	ldi	r18, 0x01	; 1
     6fe:	30 e0       	ldi	r19, 0x00	; 0
     700:	c9 01       	movw	r24, r18
     702:	1f 91       	pop	r17
     704:	0f 91       	pop	r16
     706:	08 95       	ret

00000708 <dxl_hal_open>:
     708:	ef 92       	push	r14
     70a:	ff 92       	push	r15
     70c:	0f 93       	push	r16
     70e:	1f 93       	push	r17
     710:	7a 01       	movw	r14, r20
     712:	8b 01       	movw	r16, r22
     714:	82 e4       	ldi	r24, 0x42	; 66
     716:	80 93 c0 00 	sts	0x00C0, r24
     71a:	88 e9       	ldi	r24, 0x98	; 152
     71c:	80 93 c1 00 	sts	0x00C1, r24
     720:	86 e0       	ldi	r24, 0x06	; 6
     722:	80 93 c2 00 	sts	0x00C2, r24
     726:	60 e0       	ldi	r22, 0x00	; 0
     728:	74 e2       	ldi	r23, 0x24	; 36
     72a:	84 ef       	ldi	r24, 0xF4	; 244
     72c:	99 e4       	ldi	r25, 0x49	; 73
     72e:	a8 01       	movw	r20, r16
     730:	97 01       	movw	r18, r14
     732:	0e 94 d1 1d 	call	0x3ba2	; 0x3ba2 <__divsf3>
     736:	0e 94 3e 1e 	call	0x3c7c	; 0x3c7c <__fixunssfsi>
     73a:	61 50       	subi	r22, 0x01	; 1
     73c:	70 40       	sbci	r23, 0x00	; 0
     73e:	70 93 c5 00 	sts	0x00C5, r23
     742:	60 93 c4 00 	sts	0x00C4, r22
     746:	60 e0       	ldi	r22, 0x00	; 0
     748:	74 e2       	ldi	r23, 0x24	; 36
     74a:	84 e7       	ldi	r24, 0x74	; 116
     74c:	99 e4       	ldi	r25, 0x49	; 73
     74e:	a8 01       	movw	r20, r16
     750:	97 01       	movw	r18, r14
     752:	0e 94 d1 1d 	call	0x3ba2	; 0x3ba2 <__divsf3>
     756:	20 e0       	ldi	r18, 0x00	; 0
     758:	30 e0       	ldi	r19, 0x00	; 0
     75a:	40 e4       	ldi	r20, 0x40	; 64
     75c:	51 e4       	ldi	r21, 0x41	; 65
     75e:	0e 94 99 1f 	call	0x3f32	; 0x3f32 <__mulsf3>
     762:	60 93 e8 07 	sts	0x07E8, r22
     766:	70 93 e9 07 	sts	0x07E9, r23
     76a:	80 93 ea 07 	sts	0x07EA, r24
     76e:	90 93 eb 07 	sts	0x07EB, r25
     772:	20 91 e8 07 	lds	r18, 0x07E8
     776:	30 91 e9 07 	lds	r19, 0x07E9
     77a:	40 91 ea 07 	lds	r20, 0x07EA
     77e:	50 91 eb 07 	lds	r21, 0x07EB
     782:	60 e0       	ldi	r22, 0x00	; 0
     784:	70 e0       	ldi	r23, 0x00	; 0
     786:	8a e7       	ldi	r24, 0x7A	; 122
     788:	93 e4       	ldi	r25, 0x43	; 67
     78a:	0e 94 d1 1d 	call	0x3ba2	; 0x3ba2 <__divsf3>
     78e:	0e 94 3e 1e 	call	0x3c7c	; 0x3c7c <__fixunssfsi>
     792:	70 93 e7 07 	sts	0x07E7, r23
     796:	60 93 e6 07 	sts	0x07E6, r22
     79a:	72 98       	cbi	0x0e, 2	; 14
     79c:	73 9a       	sbi	0x0e, 3	; 14
     79e:	8f ef       	ldi	r24, 0xFF	; 255
     7a0:	80 93 c6 00 	sts	0x00C6, r24
     7a4:	10 92 58 07 	sts	0x0758, r1
     7a8:	10 92 59 07 	sts	0x0759, r1
     7ac:	81 e0       	ldi	r24, 0x01	; 1
     7ae:	90 e0       	ldi	r25, 0x00	; 0
     7b0:	1f 91       	pop	r17
     7b2:	0f 91       	pop	r16
     7b4:	ff 90       	pop	r15
     7b6:	ef 90       	pop	r14
     7b8:	08 95       	ret

000007ba <dxl_hal_close>:
     7ba:	08 95       	ret

000007bc <dxl_hal_clear>:
     7bc:	80 91 59 07 	lds	r24, 0x0759
     7c0:	80 93 58 07 	sts	0x0758, r24
     7c4:	08 95       	ret

000007c6 <dxl_hal_tx>:
     7c6:	ac 01       	movw	r20, r24
     7c8:	f8 94       	cli
     7ca:	73 98       	cbi	0x0e, 3	; 14
     7cc:	72 9a       	sbi	0x0e, 2	; 14
     7ce:	20 e0       	ldi	r18, 0x00	; 0
     7d0:	30 e0       	ldi	r19, 0x00	; 0
     7d2:	11 c0       	rjmp	.+34     	; 0x7f6 <dxl_hal_tx+0x30>
     7d4:	80 91 c0 00 	lds	r24, 0x00C0
     7d8:	85 ff       	sbrs	r24, 5
     7da:	fc cf       	rjmp	.-8      	; 0x7d4 <dxl_hal_tx+0xe>
     7dc:	80 91 c0 00 	lds	r24, 0x00C0
     7e0:	80 64       	ori	r24, 0x40	; 64
     7e2:	80 93 c0 00 	sts	0x00C0, r24
     7e6:	fa 01       	movw	r30, r20
     7e8:	e2 0f       	add	r30, r18
     7ea:	f3 1f       	adc	r31, r19
     7ec:	80 81       	ld	r24, Z
     7ee:	80 93 c6 00 	sts	0x00C6, r24
     7f2:	2f 5f       	subi	r18, 0xFF	; 255
     7f4:	3f 4f       	sbci	r19, 0xFF	; 255
     7f6:	26 17       	cp	r18, r22
     7f8:	37 07       	cpc	r19, r23
     7fa:	64 f3       	brlt	.-40     	; 0x7d4 <dxl_hal_tx+0xe>
     7fc:	80 91 c0 00 	lds	r24, 0x00C0
     800:	86 ff       	sbrs	r24, 6
     802:	fc cf       	rjmp	.-8      	; 0x7fc <dxl_hal_tx+0x36>
     804:	72 98       	cbi	0x0e, 2	; 14
     806:	73 9a       	sbi	0x0e, 3	; 14
     808:	78 94       	sei
     80a:	c9 01       	movw	r24, r18
     80c:	08 95       	ret

0000080e <dxl_hal_set_timeout>:
     80e:	10 92 ef 07 	sts	0x07EF, r1
     812:	10 92 ee 07 	sts	0x07EE, r1
     816:	20 91 e6 07 	lds	r18, 0x07E6
     81a:	30 91 e7 07 	lds	r19, 0x07E7
     81e:	26 5f       	subi	r18, 0xF6	; 246
     820:	3f 4f       	sbci	r19, 0xFF	; 255
     822:	28 0f       	add	r18, r24
     824:	39 1f       	adc	r19, r25
     826:	30 93 ed 07 	sts	0x07ED, r19
     82a:	20 93 ec 07 	sts	0x07EC, r18
     82e:	08 95       	ret

00000830 <dxl_hal_timeout>:
     830:	af 92       	push	r10
     832:	bf 92       	push	r11
     834:	cf 92       	push	r12
     836:	df 92       	push	r13
     838:	ef 92       	push	r14
     83a:	ff 92       	push	r15
     83c:	0f 93       	push	r16
     83e:	1f 93       	push	r17
     840:	80 91 ee 07 	lds	r24, 0x07EE
     844:	90 91 ef 07 	lds	r25, 0x07EF
     848:	01 96       	adiw	r24, 0x01	; 1
     84a:	90 93 ef 07 	sts	0x07EF, r25
     84e:	80 93 ee 07 	sts	0x07EE, r24
     852:	20 91 ee 07 	lds	r18, 0x07EE
     856:	30 91 ef 07 	lds	r19, 0x07EF
     85a:	80 91 ec 07 	lds	r24, 0x07EC
     85e:	90 91 ed 07 	lds	r25, 0x07ED
     862:	82 17       	cp	r24, r18
     864:	93 07       	cpc	r25, r19
     866:	18 f4       	brcc	.+6      	; 0x86e <dxl_hal_timeout+0x3e>
     868:	21 e0       	ldi	r18, 0x01	; 1
     86a:	30 e0       	ldi	r19, 0x00	; 0
     86c:	74 c0       	rjmp	.+232    	; 0x956 <dxl_hal_timeout+0x126>
     86e:	a0 90 e8 07 	lds	r10, 0x07E8
     872:	b0 90 e9 07 	lds	r11, 0x07E9
     876:	c0 90 ea 07 	lds	r12, 0x07EA
     87a:	d0 90 eb 07 	lds	r13, 0x07EB
 */
void
_delay_us(double __us)
{
	uint8_t __ticks;
	double __tmp = ((F_CPU) / 3e6) * __us;
     87e:	c6 01       	movw	r24, r12
     880:	b5 01       	movw	r22, r10
     882:	2b ea       	ldi	r18, 0xAB	; 171
     884:	3a ea       	ldi	r19, 0xAA	; 170
     886:	4a ea       	ldi	r20, 0xAA	; 170
     888:	50 e4       	ldi	r21, 0x40	; 64
     88a:	0e 94 99 1f 	call	0x3f32	; 0x3f32 <__mulsf3>
     88e:	7b 01       	movw	r14, r22
     890:	8c 01       	movw	r16, r24
	if (__tmp < 1.0)
     892:	20 e0       	ldi	r18, 0x00	; 0
     894:	30 e0       	ldi	r19, 0x00	; 0
     896:	40 e8       	ldi	r20, 0x80	; 128
     898:	5f e3       	ldi	r21, 0x3F	; 63
     89a:	0e 94 ca 1d 	call	0x3b94	; 0x3b94 <__cmpsf2>
     89e:	88 23       	and	r24, r24
     8a0:	14 f4       	brge	.+4      	; 0x8a6 <dxl_hal_timeout+0x76>
     8a2:	61 e0       	ldi	r22, 0x01	; 1
     8a4:	54 c0       	rjmp	.+168    	; 0x94e <dxl_hal_timeout+0x11e>
		__ticks = 1;
	else if (__tmp > 255)
     8a6:	c8 01       	movw	r24, r16
     8a8:	b7 01       	movw	r22, r14
     8aa:	20 e0       	ldi	r18, 0x00	; 0
     8ac:	30 e0       	ldi	r19, 0x00	; 0
     8ae:	4f e7       	ldi	r20, 0x7F	; 127
     8b0:	53 e4       	ldi	r21, 0x43	; 67
     8b2:	0e 94 95 1f 	call	0x3f2a	; 0x3f2a <__gesf2>
     8b6:	18 16       	cp	r1, r24
     8b8:	0c f0       	brlt	.+2      	; 0x8bc <dxl_hal_timeout+0x8c>
     8ba:	45 c0       	rjmp	.+138    	; 0x946 <dxl_hal_timeout+0x116>
	{
		_delay_ms(__us / 1000.0);
     8bc:	c6 01       	movw	r24, r12
     8be:	b5 01       	movw	r22, r10
     8c0:	20 e0       	ldi	r18, 0x00	; 0
     8c2:	30 e0       	ldi	r19, 0x00	; 0
     8c4:	4a e7       	ldi	r20, 0x7A	; 122
     8c6:	54 e4       	ldi	r21, 0x44	; 68
     8c8:	0e 94 d1 1d 	call	0x3ba2	; 0x3ba2 <__divsf3>
     8cc:	5b 01       	movw	r10, r22
     8ce:	6c 01       	movw	r12, r24
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
     8d0:	20 e0       	ldi	r18, 0x00	; 0
     8d2:	30 e0       	ldi	r19, 0x00	; 0
     8d4:	4a e7       	ldi	r20, 0x7A	; 122
     8d6:	55 e4       	ldi	r21, 0x45	; 69
     8d8:	0e 94 99 1f 	call	0x3f32	; 0x3f32 <__mulsf3>
     8dc:	7b 01       	movw	r14, r22
     8de:	8c 01       	movw	r16, r24
	if (__tmp < 1.0)
     8e0:	20 e0       	ldi	r18, 0x00	; 0
     8e2:	30 e0       	ldi	r19, 0x00	; 0
     8e4:	40 e8       	ldi	r20, 0x80	; 128
     8e6:	5f e3       	ldi	r21, 0x3F	; 63
     8e8:	0e 94 ca 1d 	call	0x3b94	; 0x3b94 <__cmpsf2>
     8ec:	88 23       	and	r24, r24
     8ee:	1c f4       	brge	.+6      	; 0x8f6 <dxl_hal_timeout+0xc6>
     8f0:	61 e0       	ldi	r22, 0x01	; 1
     8f2:	70 e0       	ldi	r23, 0x00	; 0
     8f4:	24 c0       	rjmp	.+72     	; 0x93e <dxl_hal_timeout+0x10e>
		__ticks = 1;
	else if (__tmp > 65535)
     8f6:	c8 01       	movw	r24, r16
     8f8:	b7 01       	movw	r22, r14
     8fa:	20 e0       	ldi	r18, 0x00	; 0
     8fc:	3f ef       	ldi	r19, 0xFF	; 255
     8fe:	4f e7       	ldi	r20, 0x7F	; 127
     900:	57 e4       	ldi	r21, 0x47	; 71
     902:	0e 94 95 1f 	call	0x3f2a	; 0x3f2a <__gesf2>
     906:	18 16       	cp	r1, r24
     908:	b4 f4       	brge	.+44     	; 0x936 <dxl_hal_timeout+0x106>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     90a:	c6 01       	movw	r24, r12
     90c:	b5 01       	movw	r22, r10
     90e:	20 e0       	ldi	r18, 0x00	; 0
     910:	30 e0       	ldi	r19, 0x00	; 0
     912:	40 e2       	ldi	r20, 0x20	; 32
     914:	51 e4       	ldi	r21, 0x41	; 65
     916:	0e 94 99 1f 	call	0x3f32	; 0x3f32 <__mulsf3>
     91a:	0e 94 3e 1e 	call	0x3c7c	; 0x3c7c <__fixunssfsi>
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
     91e:	80 e9       	ldi	r24, 0x90	; 144
     920:	91 e0       	ldi	r25, 0x01	; 1
     922:	05 c0       	rjmp	.+10     	; 0x92e <dxl_hal_timeout+0xfe>
     924:	fc 01       	movw	r30, r24
     926:	31 97       	sbiw	r30, 0x01	; 1
     928:	f1 f7       	brne	.-4      	; 0x926 <dxl_hal_timeout+0xf6>
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     92a:	61 50       	subi	r22, 0x01	; 1
     92c:	70 40       	sbci	r23, 0x00	; 0
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     92e:	61 15       	cp	r22, r1
     930:	71 05       	cpc	r23, r1
     932:	c1 f7       	brne	.-16     	; 0x924 <dxl_hal_timeout+0xf4>
     934:	0e c0       	rjmp	.+28     	; 0x952 <dxl_hal_timeout+0x122>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     936:	c8 01       	movw	r24, r16
     938:	b7 01       	movw	r22, r14
     93a:	0e 94 3e 1e 	call	0x3c7c	; 0x3c7c <__fixunssfsi>
     93e:	cb 01       	movw	r24, r22
     940:	01 97       	sbiw	r24, 0x01	; 1
     942:	f1 f7       	brne	.-4      	; 0x940 <dxl_hal_timeout+0x110>
     944:	06 c0       	rjmp	.+12     	; 0x952 <dxl_hal_timeout+0x122>
	{
		_delay_ms(__us / 1000.0);
		return;
	}
	else
		__ticks = (uint8_t)__tmp;
     946:	c8 01       	movw	r24, r16
     948:	b7 01       	movw	r22, r14
     94a:	0e 94 3e 1e 	call	0x3c7c	; 0x3c7c <__fixunssfsi>
    can be achieved.
*/
void
_delay_loop_1(uint8_t __count)
{
	__asm__ volatile (
     94e:	6a 95       	dec	r22
     950:	f1 f7       	brne	.-4      	; 0x94e <dxl_hal_timeout+0x11e>
     952:	20 e0       	ldi	r18, 0x00	; 0
     954:	30 e0       	ldi	r19, 0x00	; 0
     956:	c9 01       	movw	r24, r18
     958:	1f 91       	pop	r17
     95a:	0f 91       	pop	r16
     95c:	ff 90       	pop	r15
     95e:	ef 90       	pop	r14
     960:	df 90       	pop	r13
     962:	cf 90       	pop	r12
     964:	bf 90       	pop	r11
     966:	af 90       	pop	r10
     968:	08 95       	ret

0000096a <dxl_hal_get_qstate>:
     96a:	90 91 58 07 	lds	r25, 0x0758
     96e:	80 91 59 07 	lds	r24, 0x0759
     972:	98 17       	cp	r25, r24
     974:	19 f4       	brne	.+6      	; 0x97c <dxl_hal_get_qstate+0x12>
     976:	20 e0       	ldi	r18, 0x00	; 0
     978:	30 e0       	ldi	r19, 0x00	; 0
     97a:	17 c0       	rjmp	.+46     	; 0x9aa <dxl_hal_get_qstate+0x40>
     97c:	90 91 58 07 	lds	r25, 0x0758
     980:	80 91 59 07 	lds	r24, 0x0759
     984:	98 17       	cp	r25, r24
     986:	38 f4       	brcc	.+14     	; 0x996 <dxl_hal_get_qstate+0x2c>
     988:	80 91 59 07 	lds	r24, 0x0759
     98c:	90 91 58 07 	lds	r25, 0x0758
     990:	28 2f       	mov	r18, r24
     992:	30 e0       	ldi	r19, 0x00	; 0
     994:	08 c0       	rjmp	.+16     	; 0x9a6 <dxl_hal_get_qstate+0x3c>
     996:	80 91 59 07 	lds	r24, 0x0759
     99a:	90 91 58 07 	lds	r25, 0x0758
     99e:	28 2f       	mov	r18, r24
     9a0:	30 e0       	ldi	r19, 0x00	; 0
     9a2:	20 50       	subi	r18, 0x00	; 0
     9a4:	3f 4f       	sbci	r19, 0xFF	; 255
     9a6:	29 1b       	sub	r18, r25
     9a8:	31 09       	sbc	r19, r1
     9aa:	c9 01       	movw	r24, r18
     9ac:	08 95       	ret

000009ae <dxl_hal_put_queue>:
     9ae:	1f 93       	push	r17
     9b0:	18 2f       	mov	r17, r24
     9b2:	db df       	rcall	.-74     	; 0x96a <dxl_hal_get_qstate>
     9b4:	8f 3f       	cpi	r24, 0xFF	; 255
     9b6:	91 05       	cpc	r25, r1
     9b8:	91 f0       	breq	.+36     	; 0x9de <dxl_hal_put_queue+0x30>
     9ba:	e0 91 59 07 	lds	r30, 0x0759
     9be:	f0 e0       	ldi	r31, 0x00	; 0
     9c0:	e8 5a       	subi	r30, 0xA8	; 168
     9c2:	f9 4f       	sbci	r31, 0xF9	; 249
     9c4:	10 83       	st	Z, r17
     9c6:	80 91 59 07 	lds	r24, 0x0759
     9ca:	8f 3f       	cpi	r24, 0xFF	; 255
     9cc:	19 f4       	brne	.+6      	; 0x9d4 <dxl_hal_put_queue+0x26>
     9ce:	10 92 59 07 	sts	0x0759, r1
     9d2:	05 c0       	rjmp	.+10     	; 0x9de <dxl_hal_put_queue+0x30>
     9d4:	80 91 59 07 	lds	r24, 0x0759
     9d8:	8f 5f       	subi	r24, 0xFF	; 255
     9da:	80 93 59 07 	sts	0x0759, r24
     9de:	1f 91       	pop	r17
     9e0:	08 95       	ret

000009e2 <dxl_hal_get_queue>:
     9e2:	90 91 58 07 	lds	r25, 0x0758
     9e6:	80 91 59 07 	lds	r24, 0x0759
     9ea:	98 17       	cp	r25, r24
     9ec:	11 f4       	brne	.+4      	; 0x9f2 <dxl_hal_get_queue+0x10>
     9ee:	ef ef       	ldi	r30, 0xFF	; 255
     9f0:	12 c0       	rjmp	.+36     	; 0xa16 <dxl_hal_get_queue+0x34>
     9f2:	e0 91 58 07 	lds	r30, 0x0758
     9f6:	f0 e0       	ldi	r31, 0x00	; 0
     9f8:	e8 5a       	subi	r30, 0xA8	; 168
     9fa:	f9 4f       	sbci	r31, 0xF9	; 249
     9fc:	e0 81       	ld	r30, Z
     9fe:	80 91 58 07 	lds	r24, 0x0758
     a02:	8f 3f       	cpi	r24, 0xFF	; 255
     a04:	19 f4       	brne	.+6      	; 0xa0c <dxl_hal_get_queue+0x2a>
     a06:	10 92 58 07 	sts	0x0758, r1
     a0a:	05 c0       	rjmp	.+10     	; 0xa16 <dxl_hal_get_queue+0x34>
     a0c:	80 91 58 07 	lds	r24, 0x0758
     a10:	8f 5f       	subi	r24, 0xFF	; 255
     a12:	80 93 58 07 	sts	0x0758, r24
     a16:	8e 2f       	mov	r24, r30
     a18:	08 95       	ret

00000a1a <dxl_hal_rx>:
     a1a:	ef 92       	push	r14
     a1c:	ff 92       	push	r15
     a1e:	0f 93       	push	r16
     a20:	1f 93       	push	r17
     a22:	cf 93       	push	r28
     a24:	df 93       	push	r29
     a26:	7c 01       	movw	r14, r24
     a28:	eb 01       	movw	r28, r22
     a2a:	90 91 58 07 	lds	r25, 0x0758
     a2e:	80 91 59 07 	lds	r24, 0x0759
     a32:	98 17       	cp	r25, r24
     a34:	19 f4       	brne	.+6      	; 0xa3c <dxl_hal_rx+0x22>
     a36:	00 e0       	ldi	r16, 0x00	; 0
     a38:	10 e0       	ldi	r17, 0x00	; 0
     a3a:	12 c0       	rjmp	.+36     	; 0xa60 <dxl_hal_rx+0x46>
     a3c:	96 df       	rcall	.-212    	; 0x96a <dxl_hal_get_qstate>
     a3e:	8c 01       	movw	r16, r24
     a40:	c8 17       	cp	r28, r24
     a42:	d9 07       	cpc	r29, r25
     a44:	0c f4       	brge	.+2      	; 0xa48 <dxl_hal_rx+0x2e>
     a46:	8e 01       	movw	r16, r28
     a48:	c0 e0       	ldi	r28, 0x00	; 0
     a4a:	d0 e0       	ldi	r29, 0x00	; 0
     a4c:	06 c0       	rjmp	.+12     	; 0xa5a <dxl_hal_rx+0x40>
     a4e:	c9 df       	rcall	.-110    	; 0x9e2 <dxl_hal_get_queue>
     a50:	f7 01       	movw	r30, r14
     a52:	ec 0f       	add	r30, r28
     a54:	fd 1f       	adc	r31, r29
     a56:	80 83       	st	Z, r24
     a58:	21 96       	adiw	r28, 0x01	; 1
     a5a:	c0 17       	cp	r28, r16
     a5c:	d1 07       	cpc	r29, r17
     a5e:	bc f3       	brlt	.-18     	; 0xa4e <dxl_hal_rx+0x34>
     a60:	c8 01       	movw	r24, r16
     a62:	df 91       	pop	r29
     a64:	cf 91       	pop	r28
     a66:	1f 91       	pop	r17
     a68:	0f 91       	pop	r16
     a6a:	ff 90       	pop	r15
     a6c:	ef 90       	pop	r14
     a6e:	08 95       	ret

00000a70 <__vector_25>:
     a70:	1f 92       	push	r1
     a72:	0f 92       	push	r0
     a74:	0f b6       	in	r0, 0x3f	; 63
     a76:	0f 92       	push	r0
     a78:	0b b6       	in	r0, 0x3b	; 59
     a7a:	0f 92       	push	r0
     a7c:	11 24       	eor	r1, r1
     a7e:	2f 93       	push	r18
     a80:	3f 93       	push	r19
     a82:	4f 93       	push	r20
     a84:	5f 93       	push	r21
     a86:	6f 93       	push	r22
     a88:	7f 93       	push	r23
     a8a:	8f 93       	push	r24
     a8c:	9f 93       	push	r25
     a8e:	af 93       	push	r26
     a90:	bf 93       	push	r27
     a92:	ef 93       	push	r30
     a94:	ff 93       	push	r31
     a96:	80 91 c6 00 	lds	r24, 0x00C6
     a9a:	89 df       	rcall	.-238    	; 0x9ae <dxl_hal_put_queue>
     a9c:	ff 91       	pop	r31
     a9e:	ef 91       	pop	r30
     aa0:	bf 91       	pop	r27
     aa2:	af 91       	pop	r26
     aa4:	9f 91       	pop	r25
     aa6:	8f 91       	pop	r24
     aa8:	7f 91       	pop	r23
     aaa:	6f 91       	pop	r22
     aac:	5f 91       	pop	r21
     aae:	4f 91       	pop	r20
     ab0:	3f 91       	pop	r19
     ab2:	2f 91       	pop	r18
     ab4:	0f 90       	pop	r0
     ab6:	0b be       	out	0x3b, r0	; 59
     ab8:	0f 90       	pop	r0
     aba:	0f be       	out	0x3f, r0	; 63
     abc:	0f 90       	pop	r0
     abe:	1f 90       	pop	r1
     ac0:	18 95       	reti

00000ac2 <serial_write>:
     ac2:	ac 01       	movw	r20, r24
     ac4:	20 e0       	ldi	r18, 0x00	; 0
     ac6:	30 e0       	ldi	r19, 0x00	; 0
     ac8:	0c c0       	rjmp	.+24     	; 0xae2 <serial_write+0x20>
     aca:	80 91 c8 00 	lds	r24, 0x00C8
     ace:	85 ff       	sbrs	r24, 5
     ad0:	fc cf       	rjmp	.-8      	; 0xaca <serial_write+0x8>
     ad2:	fa 01       	movw	r30, r20
     ad4:	e2 0f       	add	r30, r18
     ad6:	f3 1f       	adc	r31, r19
     ad8:	80 81       	ld	r24, Z
     ada:	80 93 ce 00 	sts	0x00CE, r24
     ade:	2f 5f       	subi	r18, 0xFF	; 255
     ae0:	3f 4f       	sbci	r19, 0xFF	; 255
     ae2:	26 17       	cp	r18, r22
     ae4:	37 07       	cpc	r19, r23
     ae6:	8c f3       	brlt	.-30     	; 0xaca <serial_write+0x8>
     ae8:	08 95       	ret

00000aea <serial_read>:
     aea:	dc 01       	movw	r26, r24
     aec:	90 91 da 07 	lds	r25, 0x07DA
     af0:	80 91 db 07 	lds	r24, 0x07DB
     af4:	98 17       	cp	r25, r24
     af6:	11 f4       	brne	.+4      	; 0xafc <serial_read+0x12>
     af8:	80 e0       	ldi	r24, 0x00	; 0
     afa:	08 95       	ret
     afc:	90 91 da 07 	lds	r25, 0x07DA
     b00:	80 91 db 07 	lds	r24, 0x07DB
     b04:	98 17       	cp	r25, r24
     b06:	19 f4       	brne	.+6      	; 0xb0e <serial_read+0x24>
     b08:	20 e0       	ldi	r18, 0x00	; 0
     b0a:	30 e0       	ldi	r19, 0x00	; 0
     b0c:	17 c0       	rjmp	.+46     	; 0xb3c <serial_read+0x52>
     b0e:	90 91 da 07 	lds	r25, 0x07DA
     b12:	80 91 db 07 	lds	r24, 0x07DB
     b16:	98 17       	cp	r25, r24
     b18:	38 f4       	brcc	.+14     	; 0xb28 <serial_read+0x3e>
     b1a:	80 91 db 07 	lds	r24, 0x07DB
     b1e:	90 91 da 07 	lds	r25, 0x07DA
     b22:	28 2f       	mov	r18, r24
     b24:	30 e0       	ldi	r19, 0x00	; 0
     b26:	08 c0       	rjmp	.+16     	; 0xb38 <serial_read+0x4e>
     b28:	80 91 db 07 	lds	r24, 0x07DB
     b2c:	90 91 da 07 	lds	r25, 0x07DA
     b30:	28 2f       	mov	r18, r24
     b32:	30 e0       	ldi	r19, 0x00	; 0
     b34:	20 58       	subi	r18, 0x80	; 128
     b36:	3f 4f       	sbci	r19, 0xFF	; 255
     b38:	29 1b       	sub	r18, r25
     b3a:	31 09       	sbc	r19, r1
     b3c:	a9 01       	movw	r20, r18
     b3e:	62 17       	cp	r22, r18
     b40:	73 07       	cpc	r23, r19
     b42:	0c f4       	brge	.+2      	; 0xb46 <serial_read+0x5c>
     b44:	ab 01       	movw	r20, r22
     b46:	20 e0       	ldi	r18, 0x00	; 0
     b48:	30 e0       	ldi	r19, 0x00	; 0
     b4a:	20 c0       	rjmp	.+64     	; 0xb8c <serial_read+0xa2>
     b4c:	90 91 da 07 	lds	r25, 0x07DA
     b50:	80 91 db 07 	lds	r24, 0x07DB
     b54:	98 17       	cp	r25, r24
     b56:	11 f4       	brne	.+4      	; 0xb5c <serial_read+0x72>
     b58:	9f ef       	ldi	r25, 0xFF	; 255
     b5a:	12 c0       	rjmp	.+36     	; 0xb80 <serial_read+0x96>
     b5c:	e0 91 da 07 	lds	r30, 0x07DA
     b60:	f0 e0       	ldi	r31, 0x00	; 0
     b62:	e6 5a       	subi	r30, 0xA6	; 166
     b64:	f8 4f       	sbci	r31, 0xF8	; 248
     b66:	90 81       	ld	r25, Z
     b68:	80 91 da 07 	lds	r24, 0x07DA
     b6c:	8f 37       	cpi	r24, 0x7F	; 127
     b6e:	19 f4       	brne	.+6      	; 0xb76 <serial_read+0x8c>
     b70:	10 92 da 07 	sts	0x07DA, r1
     b74:	05 c0       	rjmp	.+10     	; 0xb80 <serial_read+0x96>
     b76:	80 91 da 07 	lds	r24, 0x07DA
     b7a:	8f 5f       	subi	r24, 0xFF	; 255
     b7c:	80 93 da 07 	sts	0x07DA, r24
     b80:	fd 01       	movw	r30, r26
     b82:	e2 0f       	add	r30, r18
     b84:	f3 1f       	adc	r31, r19
     b86:	90 83       	st	Z, r25
     b88:	2f 5f       	subi	r18, 0xFF	; 255
     b8a:	3f 4f       	sbci	r19, 0xFF	; 255
     b8c:	24 17       	cp	r18, r20
     b8e:	35 07       	cpc	r19, r21
     b90:	ec f2       	brlt	.-70     	; 0xb4c <serial_read+0x62>
     b92:	84 2f       	mov	r24, r20
     b94:	08 95       	ret

00000b96 <serial_get_qstate>:
     b96:	90 91 da 07 	lds	r25, 0x07DA
     b9a:	80 91 db 07 	lds	r24, 0x07DB
     b9e:	98 17       	cp	r25, r24
     ba0:	19 f4       	brne	.+6      	; 0xba8 <serial_get_qstate+0x12>
     ba2:	20 e0       	ldi	r18, 0x00	; 0
     ba4:	30 e0       	ldi	r19, 0x00	; 0
     ba6:	17 c0       	rjmp	.+46     	; 0xbd6 <serial_get_qstate+0x40>
     ba8:	90 91 da 07 	lds	r25, 0x07DA
     bac:	80 91 db 07 	lds	r24, 0x07DB
     bb0:	98 17       	cp	r25, r24
     bb2:	38 f4       	brcc	.+14     	; 0xbc2 <serial_get_qstate+0x2c>
     bb4:	80 91 db 07 	lds	r24, 0x07DB
     bb8:	90 91 da 07 	lds	r25, 0x07DA
     bbc:	28 2f       	mov	r18, r24
     bbe:	30 e0       	ldi	r19, 0x00	; 0
     bc0:	08 c0       	rjmp	.+16     	; 0xbd2 <serial_get_qstate+0x3c>
     bc2:	80 91 db 07 	lds	r24, 0x07DB
     bc6:	90 91 da 07 	lds	r25, 0x07DA
     bca:	28 2f       	mov	r18, r24
     bcc:	30 e0       	ldi	r19, 0x00	; 0
     bce:	20 58       	subi	r18, 0x80	; 128
     bd0:	3f 4f       	sbci	r19, 0xFF	; 255
     bd2:	29 1b       	sub	r18, r25
     bd4:	31 09       	sbc	r19, r1
     bd6:	c9 01       	movw	r24, r18
     bd8:	08 95       	ret

00000bda <serial_put_queue>:
     bda:	48 2f       	mov	r20, r24
     bdc:	90 91 da 07 	lds	r25, 0x07DA
     be0:	80 91 db 07 	lds	r24, 0x07DB
     be4:	98 17       	cp	r25, r24
     be6:	d1 f0       	breq	.+52     	; 0xc1c <serial_put_queue+0x42>
     be8:	90 91 da 07 	lds	r25, 0x07DA
     bec:	80 91 db 07 	lds	r24, 0x07DB
     bf0:	98 17       	cp	r25, r24
     bf2:	38 f4       	brcc	.+14     	; 0xc02 <serial_put_queue+0x28>
     bf4:	80 91 db 07 	lds	r24, 0x07DB
     bf8:	90 91 da 07 	lds	r25, 0x07DA
     bfc:	28 2f       	mov	r18, r24
     bfe:	30 e0       	ldi	r19, 0x00	; 0
     c00:	08 c0       	rjmp	.+16     	; 0xc12 <serial_put_queue+0x38>
     c02:	80 91 db 07 	lds	r24, 0x07DB
     c06:	90 91 da 07 	lds	r25, 0x07DA
     c0a:	28 2f       	mov	r18, r24
     c0c:	30 e0       	ldi	r19, 0x00	; 0
     c0e:	20 58       	subi	r18, 0x80	; 128
     c10:	3f 4f       	sbci	r19, 0xFF	; 255
     c12:	29 1b       	sub	r18, r25
     c14:	31 09       	sbc	r19, r1
     c16:	2f 37       	cpi	r18, 0x7F	; 127
     c18:	31 05       	cpc	r19, r1
     c1a:	91 f0       	breq	.+36     	; 0xc40 <serial_put_queue+0x66>
     c1c:	e0 91 db 07 	lds	r30, 0x07DB
     c20:	f0 e0       	ldi	r31, 0x00	; 0
     c22:	e6 5a       	subi	r30, 0xA6	; 166
     c24:	f8 4f       	sbci	r31, 0xF8	; 248
     c26:	40 83       	st	Z, r20
     c28:	80 91 db 07 	lds	r24, 0x07DB
     c2c:	8f 37       	cpi	r24, 0x7F	; 127
     c2e:	19 f4       	brne	.+6      	; 0xc36 <serial_put_queue+0x5c>
     c30:	10 92 db 07 	sts	0x07DB, r1
     c34:	08 95       	ret
     c36:	80 91 db 07 	lds	r24, 0x07DB
     c3a:	8f 5f       	subi	r24, 0xFF	; 255
     c3c:	80 93 db 07 	sts	0x07DB, r24
     c40:	08 95       	ret

00000c42 <serial_get_queue>:
     c42:	90 91 da 07 	lds	r25, 0x07DA
     c46:	80 91 db 07 	lds	r24, 0x07DB
     c4a:	98 17       	cp	r25, r24
     c4c:	11 f4       	brne	.+4      	; 0xc52 <serial_get_queue+0x10>
     c4e:	ef ef       	ldi	r30, 0xFF	; 255
     c50:	12 c0       	rjmp	.+36     	; 0xc76 <serial_get_queue+0x34>
     c52:	e0 91 da 07 	lds	r30, 0x07DA
     c56:	f0 e0       	ldi	r31, 0x00	; 0
     c58:	e6 5a       	subi	r30, 0xA6	; 166
     c5a:	f8 4f       	sbci	r31, 0xF8	; 248
     c5c:	e0 81       	ld	r30, Z
     c5e:	80 91 da 07 	lds	r24, 0x07DA
     c62:	8f 37       	cpi	r24, 0x7F	; 127
     c64:	19 f4       	brne	.+6      	; 0xc6c <serial_get_queue+0x2a>
     c66:	10 92 da 07 	sts	0x07DA, r1
     c6a:	05 c0       	rjmp	.+10     	; 0xc76 <serial_get_queue+0x34>
     c6c:	80 91 da 07 	lds	r24, 0x07DA
     c70:	8f 5f       	subi	r24, 0xFF	; 255
     c72:	80 93 da 07 	sts	0x07DA, r24
     c76:	8e 2f       	mov	r24, r30
     c78:	08 95       	ret

00000c7a <__vector_36>:
     c7a:	1f 92       	push	r1
     c7c:	0f 92       	push	r0
     c7e:	0f b6       	in	r0, 0x3f	; 63
     c80:	0f 92       	push	r0
     c82:	0b b6       	in	r0, 0x3b	; 59
     c84:	0f 92       	push	r0
     c86:	11 24       	eor	r1, r1
     c88:	2f 93       	push	r18
     c8a:	3f 93       	push	r19
     c8c:	4f 93       	push	r20
     c8e:	5f 93       	push	r21
     c90:	6f 93       	push	r22
     c92:	7f 93       	push	r23
     c94:	8f 93       	push	r24
     c96:	9f 93       	push	r25
     c98:	af 93       	push	r26
     c9a:	bf 93       	push	r27
     c9c:	ef 93       	push	r30
     c9e:	ff 93       	push	r31
     ca0:	80 91 ce 00 	lds	r24, 0x00CE
     ca4:	9a df       	rcall	.-204    	; 0xbda <serial_put_queue>
     ca6:	ff 91       	pop	r31
     ca8:	ef 91       	pop	r30
     caa:	bf 91       	pop	r27
     cac:	af 91       	pop	r26
     cae:	9f 91       	pop	r25
     cb0:	8f 91       	pop	r24
     cb2:	7f 91       	pop	r23
     cb4:	6f 91       	pop	r22
     cb6:	5f 91       	pop	r21
     cb8:	4f 91       	pop	r20
     cba:	3f 91       	pop	r19
     cbc:	2f 91       	pop	r18
     cbe:	0f 90       	pop	r0
     cc0:	0b be       	out	0x3b, r0	; 59
     cc2:	0f 90       	pop	r0
     cc4:	0f be       	out	0x3f, r0	; 63
     cc6:	0f 90       	pop	r0
     cc8:	1f 90       	pop	r1
     cca:	18 95       	reti

00000ccc <std_putchar>:
     ccc:	df 93       	push	r29
     cce:	cf 93       	push	r28
     cd0:	0f 92       	push	r0
     cd2:	0f 92       	push	r0
     cd4:	cd b7       	in	r28, 0x3d	; 61
     cd6:	de b7       	in	r29, 0x3e	; 62
     cd8:	98 2f       	mov	r25, r24
     cda:	8a 30       	cpi	r24, 0x0A	; 10
     cdc:	99 f4       	brne	.+38     	; 0xd04 <std_putchar+0x38>
     cde:	8d e0       	ldi	r24, 0x0D	; 13
     ce0:	89 83       	std	Y+1, r24	; 0x01
     ce2:	9a 83       	std	Y+2, r25	; 0x02
     ce4:	fe 01       	movw	r30, r28
     ce6:	31 96       	adiw	r30, 0x01	; 1
     ce8:	9e 01       	movw	r18, r28
     cea:	2d 5f       	subi	r18, 0xFD	; 253
     cec:	3f 4f       	sbci	r19, 0xFF	; 255
     cee:	80 91 c8 00 	lds	r24, 0x00C8
     cf2:	85 ff       	sbrs	r24, 5
     cf4:	fc cf       	rjmp	.-8      	; 0xcee <std_putchar+0x22>
     cf6:	81 91       	ld	r24, Z+
     cf8:	80 93 ce 00 	sts	0x00CE, r24
     cfc:	e2 17       	cp	r30, r18
     cfe:	f3 07       	cpc	r31, r19
     d00:	b1 f7       	brne	.-20     	; 0xcee <std_putchar+0x22>
     d02:	06 c0       	rjmp	.+12     	; 0xd10 <std_putchar+0x44>
     d04:	80 91 c8 00 	lds	r24, 0x00C8
     d08:	85 ff       	sbrs	r24, 5
     d0a:	fc cf       	rjmp	.-8      	; 0xd04 <std_putchar+0x38>
     d0c:	90 93 ce 00 	sts	0x00CE, r25
     d10:	80 e0       	ldi	r24, 0x00	; 0
     d12:	90 e0       	ldi	r25, 0x00	; 0
     d14:	0f 90       	pop	r0
     d16:	0f 90       	pop	r0
     d18:	cf 91       	pop	r28
     d1a:	df 91       	pop	r29
     d1c:	08 95       	ret

00000d1e <std_getchar>:
     d1e:	90 91 da 07 	lds	r25, 0x07DA
     d22:	80 91 db 07 	lds	r24, 0x07DB
     d26:	98 17       	cp	r25, r24
     d28:	d1 f3       	breq	.-12     	; 0xd1e <std_getchar>
     d2a:	90 91 da 07 	lds	r25, 0x07DA
     d2e:	80 91 db 07 	lds	r24, 0x07DB
     d32:	98 17       	cp	r25, r24
     d34:	38 f4       	brcc	.+14     	; 0xd44 <std_getchar+0x26>
     d36:	80 91 db 07 	lds	r24, 0x07DB
     d3a:	90 91 da 07 	lds	r25, 0x07DA
     d3e:	28 2f       	mov	r18, r24
     d40:	30 e0       	ldi	r19, 0x00	; 0
     d42:	08 c0       	rjmp	.+16     	; 0xd54 <std_getchar+0x36>
     d44:	80 91 db 07 	lds	r24, 0x07DB
     d48:	90 91 da 07 	lds	r25, 0x07DA
     d4c:	28 2f       	mov	r18, r24
     d4e:	30 e0       	ldi	r19, 0x00	; 0
     d50:	20 58       	subi	r18, 0x80	; 128
     d52:	3f 4f       	sbci	r19, 0xFF	; 255
     d54:	29 1b       	sub	r18, r25
     d56:	31 09       	sbc	r19, r1
     d58:	23 2b       	or	r18, r19
     d5a:	09 f3       	breq	.-62     	; 0xd1e <std_getchar>
     d5c:	90 91 da 07 	lds	r25, 0x07DA
     d60:	80 91 db 07 	lds	r24, 0x07DB
     d64:	98 17       	cp	r25, r24
     d66:	11 f4       	brne	.+4      	; 0xd6c <std_getchar+0x4e>
     d68:	ef ef       	ldi	r30, 0xFF	; 255
     d6a:	15 c0       	rjmp	.+42     	; 0xd96 <std_getchar+0x78>
     d6c:	e0 91 da 07 	lds	r30, 0x07DA
     d70:	f0 e0       	ldi	r31, 0x00	; 0
     d72:	e6 5a       	subi	r30, 0xA6	; 166
     d74:	f8 4f       	sbci	r31, 0xF8	; 248
     d76:	e0 81       	ld	r30, Z
     d78:	80 91 da 07 	lds	r24, 0x07DA
     d7c:	8f 37       	cpi	r24, 0x7F	; 127
     d7e:	19 f4       	brne	.+6      	; 0xd86 <std_getchar+0x68>
     d80:	10 92 da 07 	sts	0x07DA, r1
     d84:	05 c0       	rjmp	.+10     	; 0xd90 <std_getchar+0x72>
     d86:	80 91 da 07 	lds	r24, 0x07DA
     d8a:	8f 5f       	subi	r24, 0xFF	; 255
     d8c:	80 93 da 07 	sts	0x07DA, r24
     d90:	ed 30       	cpi	r30, 0x0D	; 13
     d92:	09 f4       	brne	.+2      	; 0xd96 <std_getchar+0x78>
     d94:	ea e0       	ldi	r30, 0x0A	; 10
     d96:	8e 2f       	mov	r24, r30
     d98:	90 e0       	ldi	r25, 0x00	; 0
     d9a:	08 95       	ret

00000d9c <serial_initialize>:
     d9c:	0e 94 6c 1e 	call	0x3cd8	; 0x3cd8 <__floatsisf>
     da0:	9b 01       	movw	r18, r22
     da2:	ac 01       	movw	r20, r24
     da4:	60 e0       	ldi	r22, 0x00	; 0
     da6:	74 e2       	ldi	r23, 0x24	; 36
     da8:	84 ef       	ldi	r24, 0xF4	; 244
     daa:	99 e4       	ldi	r25, 0x49	; 73
     dac:	0e 94 d1 1d 	call	0x3ba2	; 0x3ba2 <__divsf3>
     db0:	0e 94 3e 1e 	call	0x3c7c	; 0x3c7c <__fixunssfsi>
     db4:	61 50       	subi	r22, 0x01	; 1
     db6:	70 40       	sbci	r23, 0x00	; 0
     db8:	22 e4       	ldi	r18, 0x42	; 66
     dba:	20 93 c8 00 	sts	0x00C8, r18
     dbe:	28 e9       	ldi	r18, 0x98	; 152
     dc0:	20 93 c9 00 	sts	0x00C9, r18
     dc4:	26 e0       	ldi	r18, 0x06	; 6
     dc6:	20 93 ca 00 	sts	0x00CA, r18
     dca:	2f ef       	ldi	r18, 0xFF	; 255
     dcc:	20 93 ce 00 	sts	0x00CE, r18
     dd0:	10 92 da 07 	sts	0x07DA, r1
     dd4:	10 92 db 07 	sts	0x07DB, r1
     dd8:	27 2f       	mov	r18, r23
     dda:	33 27       	eor	r19, r19
     ddc:	27 fd       	sbrc	r18, 7
     dde:	3a 95       	dec	r19
     de0:	20 93 cd 00 	sts	0x00CD, r18
     de4:	60 93 cc 00 	sts	0x00CC, r22
     de8:	72 98       	cbi	0x0e, 2	; 14
     dea:	73 9a       	sbi	0x0e, 3	; 14
     dec:	86 e6       	ldi	r24, 0x66	; 102
     dee:	96 e0       	ldi	r25, 0x06	; 6
     df0:	6f e8       	ldi	r22, 0x8F	; 143
     df2:	76 e0       	ldi	r23, 0x06	; 6
     df4:	0e 94 21 26 	call	0x4c42	; 0x4c42 <fdevopen>
     df8:	90 93 dd 07 	sts	0x07DD, r25
     dfc:	80 93 dc 07 	sts	0x07DC, r24
     e00:	08 95       	ret

00000e02 <removeExtraneous>:
/**
 * Returns the desired angle solution from a double* of two viable options.
 * Returns NAN if viable options are both NAN.
 */
double removeExtraneous(double* viableOptions)
{
     e02:	6f 92       	push	r6
     e04:	7f 92       	push	r7
     e06:	8f 92       	push	r8
     e08:	9f 92       	push	r9
     e0a:	af 92       	push	r10
     e0c:	bf 92       	push	r11
     e0e:	cf 92       	push	r12
     e10:	df 92       	push	r13
     e12:	ef 92       	push	r14
     e14:	ff 92       	push	r15
     e16:	0f 93       	push	r16
     e18:	1f 93       	push	r17
     e1a:	cf 93       	push	r28
     e1c:	df 93       	push	r29
     e1e:	ec 01       	movw	r28, r24
    if (!isnan(viableOptions[0]) && !isnan(viableOptions[1]))
     e20:	e8 80       	ld	r14, Y
     e22:	f9 80       	ldd	r15, Y+1	; 0x01
     e24:	0a 81       	ldd	r16, Y+2	; 0x02
     e26:	1b 81       	ldd	r17, Y+3	; 0x03
     e28:	c8 01       	movw	r24, r16
     e2a:	b7 01       	movw	r22, r14
     e2c:	a8 01       	movw	r20, r16
     e2e:	97 01       	movw	r18, r14
     e30:	0e 94 90 20 	call	0x4120	; 0x4120 <__unordsf2>
     e34:	88 23       	and	r24, r24
     e36:	09 f0       	breq	.+2      	; 0xe3a <removeExtraneous+0x38>
     e38:	60 c0       	rjmp	.+192    	; 0xefa <removeExtraneous+0xf8>
     e3a:	ac 80       	ldd	r10, Y+4	; 0x04
     e3c:	bd 80       	ldd	r11, Y+5	; 0x05
     e3e:	ce 80       	ldd	r12, Y+6	; 0x06
     e40:	df 80       	ldd	r13, Y+7	; 0x07
     e42:	c6 01       	movw	r24, r12
     e44:	b5 01       	movw	r22, r10
     e46:	a6 01       	movw	r20, r12
     e48:	95 01       	movw	r18, r10
     e4a:	0e 94 90 20 	call	0x4120	; 0x4120 <__unordsf2>
     e4e:	88 23       	and	r24, r24
     e50:	c9 f5       	brne	.+114    	; 0xec4 <removeExtraneous+0xc2>
    {
        double option1;
        double option2;

        /* Convert [0, 2pi] to [-pi, pi]. */
        if (viableOptions[0] > M_PI)
     e52:	c8 01       	movw	r24, r16
     e54:	b7 01       	movw	r22, r14
     e56:	2b ed       	ldi	r18, 0xDB	; 219
     e58:	3f e0       	ldi	r19, 0x0F	; 15
     e5a:	49 e4       	ldi	r20, 0x49	; 73
     e5c:	50 e4       	ldi	r21, 0x40	; 64
     e5e:	0e 94 95 1f 	call	0x3f2a	; 0x3f2a <__gesf2>
     e62:	18 16       	cp	r1, r24
     e64:	1c f0       	brlt	.+6      	; 0xe6c <removeExtraneous+0x6a>
     e66:	37 01       	movw	r6, r14
     e68:	48 01       	movw	r8, r16
     e6a:	0a c0       	rjmp	.+20     	; 0xe80 <removeExtraneous+0x7e>
            option1 = viableOptions[0] - 2 * M_PI;
     e6c:	c8 01       	movw	r24, r16
     e6e:	b7 01       	movw	r22, r14
     e70:	2b ed       	ldi	r18, 0xDB	; 219
     e72:	3f e0       	ldi	r19, 0x0F	; 15
     e74:	49 ec       	ldi	r20, 0xC9	; 201
     e76:	50 e4       	ldi	r21, 0x40	; 64
     e78:	0e 94 65 1d 	call	0x3aca	; 0x3aca <__subsf3>
     e7c:	3b 01       	movw	r6, r22
     e7e:	4c 01       	movw	r8, r24
        else
            option1 = viableOptions[0];

        if (viableOptions[1] > M_PI)
     e80:	c6 01       	movw	r24, r12
     e82:	b5 01       	movw	r22, r10
     e84:	2b ed       	ldi	r18, 0xDB	; 219
     e86:	3f e0       	ldi	r19, 0x0F	; 15
     e88:	49 e4       	ldi	r20, 0x49	; 73
     e8a:	50 e4       	ldi	r21, 0x40	; 64
     e8c:	0e 94 95 1f 	call	0x3f2a	; 0x3f2a <__gesf2>
     e90:	18 16       	cp	r1, r24
     e92:	1c f0       	brlt	.+6      	; 0xe9a <removeExtraneous+0x98>
     e94:	a6 01       	movw	r20, r12
     e96:	95 01       	movw	r18, r10
     e98:	0a c0       	rjmp	.+20     	; 0xeae <removeExtraneous+0xac>
            option2 = viableOptions[1] - 2 * M_PI;
     e9a:	c6 01       	movw	r24, r12
     e9c:	b5 01       	movw	r22, r10
     e9e:	2b ed       	ldi	r18, 0xDB	; 219
     ea0:	3f e0       	ldi	r19, 0x0F	; 15
     ea2:	49 ec       	ldi	r20, 0xC9	; 201
     ea4:	50 e4       	ldi	r21, 0x40	; 64
     ea6:	0e 94 65 1d 	call	0x3aca	; 0x3aca <__subsf3>
     eaa:	9b 01       	movw	r18, r22
     eac:	ac 01       	movw	r20, r24
        else
            option2 = viableOptions[1];
        /* Return angle with smallest absolute value. */
        if (fabs(option1) <= fabs(option2))
     eae:	c4 01       	movw	r24, r8
     eb0:	b3 01       	movw	r22, r6
     eb2:	9f 77       	andi	r25, 0x7F	; 127
     eb4:	5f 77       	andi	r21, 0x7F	; 127
     eb6:	0e 94 ca 1d 	call	0x3b94	; 0x3b94 <__cmpsf2>
     eba:	18 16       	cp	r1, r24
     ebc:	5c f4       	brge	.+22     	; 0xed4 <removeExtraneous+0xd2>
     ebe:	86 01       	movw	r16, r12
     ec0:	75 01       	movw	r14, r10
     ec2:	08 c0       	rjmp	.+16     	; 0xed4 <removeExtraneous+0xd2>
            return viableOptions[0];
        else
            return viableOptions[1];
    }
    else if (!isnan(viableOptions[0]) && isnan(viableOptions[1]))
     ec4:	c8 01       	movw	r24, r16
     ec6:	b7 01       	movw	r22, r14
     ec8:	a8 01       	movw	r20, r16
     eca:	97 01       	movw	r18, r14
     ecc:	0e 94 90 20 	call	0x4120	; 0x4120 <__unordsf2>
     ed0:	88 23       	and	r24, r24
     ed2:	f9 f4       	brne	.+62     	; 0xf12 <removeExtraneous+0x110>
        return viableOptions[0];
    else if (isnan(viableOptions[0]) && !isnan(viableOptions[1]))
        return viableOptions[1];
    else
        return NAN; /* Both options are NAN. */
}
     ed4:	6e 2d       	mov	r22, r14
     ed6:	7f 2d       	mov	r23, r15
     ed8:	80 2f       	mov	r24, r16
     eda:	91 2f       	mov	r25, r17
     edc:	df 91       	pop	r29
     ede:	cf 91       	pop	r28
     ee0:	1f 91       	pop	r17
     ee2:	0f 91       	pop	r16
     ee4:	ff 90       	pop	r15
     ee6:	ef 90       	pop	r14
     ee8:	df 90       	pop	r13
     eea:	cf 90       	pop	r12
     eec:	bf 90       	pop	r11
     eee:	af 90       	pop	r10
     ef0:	9f 90       	pop	r9
     ef2:	8f 90       	pop	r8
     ef4:	7f 90       	pop	r7
     ef6:	6f 90       	pop	r6
     ef8:	08 95       	ret
        else
            return viableOptions[1];
    }
    else if (!isnan(viableOptions[0]) && isnan(viableOptions[1]))
        return viableOptions[0];
    else if (isnan(viableOptions[0]) && !isnan(viableOptions[1]))
     efa:	ec 80       	ldd	r14, Y+4	; 0x04
     efc:	fd 80       	ldd	r15, Y+5	; 0x05
     efe:	0e 81       	ldd	r16, Y+6	; 0x06
     f00:	1f 81       	ldd	r17, Y+7	; 0x07
     f02:	c8 01       	movw	r24, r16
     f04:	b7 01       	movw	r22, r14
     f06:	a8 01       	movw	r20, r16
     f08:	97 01       	movw	r18, r14
     f0a:	0e 94 90 20 	call	0x4120	; 0x4120 <__unordsf2>
     f0e:	88 23       	and	r24, r24
     f10:	09 f3       	breq	.-62     	; 0xed4 <removeExtraneous+0xd2>
     f12:	0f 2e       	mov	r0, r31
     f14:	f0 e0       	ldi	r31, 0x00	; 0
     f16:	ef 2e       	mov	r14, r31
     f18:	f0 e0       	ldi	r31, 0x00	; 0
     f1a:	ff 2e       	mov	r15, r31
     f1c:	f0 ec       	ldi	r31, 0xC0	; 192
     f1e:	0f 2f       	mov	r16, r31
     f20:	ff e7       	ldi	r31, 0x7F	; 127
     f22:	1f 2f       	mov	r17, r31
     f24:	f0 2d       	mov	r31, r0
     f26:	d6 cf       	rjmp	.-84     	; 0xed4 <removeExtraneous+0xd2>

00000f28 <modAngle>:
/**
 * Converts an angle from kinematics coordinates (in radians from -pi to pi) to
 * servo coordinates (in degrees from 0 to 360).
 */
double modAngle(double angle)
{
     f28:	ef 92       	push	r14
     f2a:	ff 92       	push	r15
     f2c:	0f 93       	push	r16
     f2e:	1f 93       	push	r17
    double modAngle = 180.0 - 180.0 * angle / M_PI;
     f30:	20 e0       	ldi	r18, 0x00	; 0
     f32:	30 e0       	ldi	r19, 0x00	; 0
     f34:	44 e3       	ldi	r20, 0x34	; 52
     f36:	53 e4       	ldi	r21, 0x43	; 67
     f38:	0e 94 99 1f 	call	0x3f32	; 0x3f32 <__mulsf3>
     f3c:	2b ed       	ldi	r18, 0xDB	; 219
     f3e:	3f e0       	ldi	r19, 0x0F	; 15
     f40:	49 e4       	ldi	r20, 0x49	; 73
     f42:	50 ec       	ldi	r21, 0xC0	; 192
     f44:	0e 94 d1 1d 	call	0x3ba2	; 0x3ba2 <__divsf3>
     f48:	20 e0       	ldi	r18, 0x00	; 0
     f4a:	30 e0       	ldi	r19, 0x00	; 0
     f4c:	44 e3       	ldi	r20, 0x34	; 52
     f4e:	53 e4       	ldi	r21, 0x43	; 67
     f50:	0e 94 66 1d 	call	0x3acc	; 0x3acc <__addsf3>
     f54:	7b 01       	movw	r14, r22
     f56:	8c 01       	movw	r16, r24
    if (modAngle < 0)
     f58:	20 e0       	ldi	r18, 0x00	; 0
     f5a:	30 e0       	ldi	r19, 0x00	; 0
     f5c:	40 e0       	ldi	r20, 0x00	; 0
     f5e:	50 e0       	ldi	r21, 0x00	; 0
     f60:	0e 94 ca 1d 	call	0x3b94	; 0x3b94 <__cmpsf2>
     f64:	88 23       	and	r24, r24
     f66:	54 f4       	brge	.+20     	; 0xf7c <modAngle+0x54>
        return modAngle + 360.0;
     f68:	c8 01       	movw	r24, r16
     f6a:	b7 01       	movw	r22, r14
     f6c:	20 e0       	ldi	r18, 0x00	; 0
     f6e:	30 e0       	ldi	r19, 0x00	; 0
     f70:	44 eb       	ldi	r20, 0xB4	; 180
     f72:	53 e4       	ldi	r21, 0x43	; 67
     f74:	0e 94 66 1d 	call	0x3acc	; 0x3acc <__addsf3>
     f78:	7b 01       	movw	r14, r22
     f7a:	8c 01       	movw	r16, r24
    else
        return modAngle;
}
     f7c:	6e 2d       	mov	r22, r14
     f7e:	7f 2d       	mov	r23, r15
     f80:	80 2f       	mov	r24, r16
     f82:	91 2f       	mov	r25, r17
     f84:	1f 91       	pop	r17
     f86:	0f 91       	pop	r16
     f88:	ff 90       	pop	r15
     f8a:	ef 90       	pop	r14
     f8c:	08 95       	ret

00000f8e <minInd1>:
 * Returns the index of the smallest double in an array 'lst' of doubles of
 * length 'length'. Returns -1 for empty list or list with minimum value
 * DBL_MAX.
 */
int minInd1(double* lst, int length)
{
     f8e:	4f 92       	push	r4
     f90:	5f 92       	push	r5
     f92:	6f 92       	push	r6
     f94:	7f 92       	push	r7
     f96:	8f 92       	push	r8
     f98:	9f 92       	push	r9
     f9a:	af 92       	push	r10
     f9c:	bf 92       	push	r11
     f9e:	cf 92       	push	r12
     fa0:	df 92       	push	r13
     fa2:	ef 92       	push	r14
     fa4:	ff 92       	push	r15
     fa6:	0f 93       	push	r16
     fa8:	1f 93       	push	r17
     faa:	cf 93       	push	r28
     fac:	df 93       	push	r29
     fae:	28 2f       	mov	r18, r24
     fb0:	39 2f       	mov	r19, r25
     fb2:	2b 01       	movw	r4, r22
    double minimum = DBL_MAX;
    int minInd1 = 0;
    int i;
    for (i = 0; i < length; i++)
     fb4:	16 16       	cp	r1, r22
     fb6:	17 06       	cpc	r1, r23
     fb8:	0c f0       	brlt	.+2      	; 0xfbc <minInd1+0x2e>
     fba:	48 c0       	rjmp	.+144    	; 0x104c <minInd1+0xbe>
     fbc:	69 01       	movw	r12, r18
     fbe:	88 24       	eor	r8, r8
     fc0:	8a 94       	dec	r8
     fc2:	99 24       	eor	r9, r9
     fc4:	9a 94       	dec	r9
     fc6:	0f 2e       	mov	r0, r31
     fc8:	ff e7       	ldi	r31, 0x7F	; 127
     fca:	af 2e       	mov	r10, r31
     fcc:	f0 2d       	mov	r31, r0
     fce:	0f 2e       	mov	r0, r31
     fd0:	ff e7       	ldi	r31, 0x7F	; 127
     fd2:	bf 2e       	mov	r11, r31
     fd4:	f0 2d       	mov	r31, r0
     fd6:	66 24       	eor	r6, r6
     fd8:	77 24       	eor	r7, r7
     fda:	c0 e0       	ldi	r28, 0x00	; 0
     fdc:	d0 e0       	ldi	r29, 0x00	; 0
    {
        if (lst[i] < minimum)
     fde:	f6 01       	movw	r30, r12
     fe0:	e0 80       	ld	r14, Z
     fe2:	f1 80       	ldd	r15, Z+1	; 0x01
     fe4:	02 81       	ldd	r16, Z+2	; 0x02
     fe6:	13 81       	ldd	r17, Z+3	; 0x03
     fe8:	c8 01       	movw	r24, r16
     fea:	b7 01       	movw	r22, r14
     fec:	28 2d       	mov	r18, r8
     fee:	39 2d       	mov	r19, r9
     ff0:	4a 2d       	mov	r20, r10
     ff2:	5b 2d       	mov	r21, r11
     ff4:	0e 94 ca 1d 	call	0x3b94	; 0x3b94 <__cmpsf2>
     ff8:	88 23       	and	r24, r24
     ffa:	14 f4       	brge	.+4      	; 0x1000 <minInd1+0x72>
     ffc:	3e 01       	movw	r6, r28
     ffe:	06 c0       	rjmp	.+12     	; 0x100c <minInd1+0x7e>
    1000:	88 2d       	mov	r24, r8
    1002:	99 2d       	mov	r25, r9
    1004:	aa 2d       	mov	r26, r10
    1006:	bb 2d       	mov	r27, r11
    1008:	7c 01       	movw	r14, r24
    100a:	8d 01       	movw	r16, r26
int minInd1(double* lst, int length)
{
    double minimum = DBL_MAX;
    int minInd1 = 0;
    int i;
    for (i = 0; i < length; i++)
    100c:	21 96       	adiw	r28, 0x01	; 1
    100e:	84 e0       	ldi	r24, 0x04	; 4
    1010:	90 e0       	ldi	r25, 0x00	; 0
    1012:	c8 0e       	add	r12, r24
    1014:	d9 1e       	adc	r13, r25
    1016:	c4 15       	cp	r28, r4
    1018:	d5 05       	cpc	r29, r5
    101a:	3c f4       	brge	.+14     	; 0x102a <minInd1+0x9c>
    101c:	d8 01       	movw	r26, r16
    101e:	c7 01       	movw	r24, r14
    1020:	8e 2c       	mov	r8, r14
    1022:	99 2e       	mov	r9, r25
    1024:	aa 2e       	mov	r10, r26
    1026:	bb 2e       	mov	r11, r27
    1028:	da cf       	rjmp	.-76     	; 0xfde <minInd1+0x50>
        {
            minimum = lst[i];
            minInd1 = i;
        }
    }
    if (fabs(minimum - DBL_MAX) < 1)
    102a:	c8 01       	movw	r24, r16
    102c:	b7 01       	movw	r22, r14
    102e:	2f ef       	ldi	r18, 0xFF	; 255
    1030:	3f ef       	ldi	r19, 0xFF	; 255
    1032:	4f e7       	ldi	r20, 0x7F	; 127
    1034:	5f e7       	ldi	r21, 0x7F	; 127
    1036:	0e 94 65 1d 	call	0x3aca	; 0x3aca <__subsf3>
    103a:	9f 77       	andi	r25, 0x7F	; 127
    103c:	20 e0       	ldi	r18, 0x00	; 0
    103e:	30 e0       	ldi	r19, 0x00	; 0
    1040:	40 e8       	ldi	r20, 0x80	; 128
    1042:	5f e3       	ldi	r21, 0x3F	; 63
    1044:	0e 94 ca 1d 	call	0x3b94	; 0x3b94 <__cmpsf2>
    1048:	88 23       	and	r24, r24
    104a:	1c f4       	brge	.+6      	; 0x1052 <minInd1+0xc4>
    104c:	66 24       	eor	r6, r6
    104e:	6a 94       	dec	r6
    1050:	76 2c       	mov	r7, r6
        return -1;
    else
        return minInd1;
}
    1052:	86 2d       	mov	r24, r6
    1054:	97 2d       	mov	r25, r7
    1056:	df 91       	pop	r29
    1058:	cf 91       	pop	r28
    105a:	1f 91       	pop	r17
    105c:	0f 91       	pop	r16
    105e:	ff 90       	pop	r15
    1060:	ef 90       	pop	r14
    1062:	df 90       	pop	r13
    1064:	cf 90       	pop	r12
    1066:	bf 90       	pop	r11
    1068:	af 90       	pop	r10
    106a:	9f 90       	pop	r9
    106c:	8f 90       	pop	r8
    106e:	7f 90       	pop	r7
    1070:	6f 90       	pop	r6
    1072:	5f 90       	pop	r5
    1074:	4f 90       	pop	r4
    1076:	08 95       	ret

00001078 <minInd2>:
 * Returns the index of the second smallest double in an array 'lst' of doubles
 * of length 'length'. Returns -1 for list of size 0 or 1, or list with second
 * smallest value DBL_MAX.
 */
int minInd2(double* lst, int length)
{
    1078:	2f 92       	push	r2
    107a:	3f 92       	push	r3
    107c:	4f 92       	push	r4
    107e:	5f 92       	push	r5
    1080:	6f 92       	push	r6
    1082:	7f 92       	push	r7
    1084:	8f 92       	push	r8
    1086:	9f 92       	push	r9
    1088:	af 92       	push	r10
    108a:	bf 92       	push	r11
    108c:	cf 92       	push	r12
    108e:	df 92       	push	r13
    1090:	ef 92       	push	r14
    1092:	ff 92       	push	r15
    1094:	0f 93       	push	r16
    1096:	1f 93       	push	r17
    1098:	df 93       	push	r29
    109a:	cf 93       	push	r28
    109c:	00 d0       	rcall	.+0      	; 0x109e <minInd2+0x26>
    109e:	0f 92       	push	r0
    10a0:	cd b7       	in	r28, 0x3d	; 61
    10a2:	de b7       	in	r29, 0x3e	; 62
    10a4:	28 2f       	mov	r18, r24
    10a6:	39 2f       	mov	r19, r25
    10a8:	2b 01       	movw	r4, r22
    double minimum = DBL_MAX;
    double minimum2 = DBL_MAX; /* Second smallest minimum */
    int minInd2 = 0;
    int i;
    for (i = 0; i < length; i++)
    10aa:	16 16       	cp	r1, r22
    10ac:	17 06       	cpc	r1, r23
    10ae:	0c f0       	brlt	.+2      	; 0x10b2 <minInd2+0x3a>
    10b0:	6f c0       	rjmp	.+222    	; 0x1190 <minInd2+0x118>
    10b2:	69 01       	movw	r12, r18
    10b4:	8f ef       	ldi	r24, 0xFF	; 255
    10b6:	89 83       	std	Y+1, r24	; 0x01
    10b8:	8a 83       	std	Y+2, r24	; 0x02
    10ba:	0f 2e       	mov	r0, r31
    10bc:	ff e7       	ldi	r31, 0x7F	; 127
    10be:	2f 2e       	mov	r2, r31
    10c0:	f0 2d       	mov	r31, r0
    10c2:	0f 2e       	mov	r0, r31
    10c4:	ff e7       	ldi	r31, 0x7F	; 127
    10c6:	3f 2e       	mov	r3, r31
    10c8:	f0 2d       	mov	r31, r0
    10ca:	bb 24       	eor	r11, r11
    10cc:	ba 94       	dec	r11
    10ce:	aa 24       	eor	r10, r10
    10d0:	aa 94       	dec	r10
    10d2:	0f 2e       	mov	r0, r31
    10d4:	ff e7       	ldi	r31, 0x7F	; 127
    10d6:	9f 2e       	mov	r9, r31
    10d8:	f0 2d       	mov	r31, r0
    10da:	0f 2e       	mov	r0, r31
    10dc:	ff e7       	ldi	r31, 0x7F	; 127
    10de:	8f 2e       	mov	r8, r31
    10e0:	f0 2d       	mov	r31, r0
    10e2:	66 24       	eor	r6, r6
    10e4:	77 24       	eor	r7, r7
    10e6:	1c 82       	std	Y+4, r1	; 0x04
    10e8:	1b 82       	std	Y+3, r1	; 0x03
    {
        if (lst[i] < minimum)
    10ea:	f6 01       	movw	r30, r12
    10ec:	e0 80       	ld	r14, Z
    10ee:	f1 80       	ldd	r15, Z+1	; 0x01
    10f0:	02 81       	ldd	r16, Z+2	; 0x02
    10f2:	13 81       	ldd	r17, Z+3	; 0x03
    10f4:	c8 01       	movw	r24, r16
    10f6:	b7 01       	movw	r22, r14
    10f8:	29 81       	ldd	r18, Y+1	; 0x01
    10fa:	3a 81       	ldd	r19, Y+2	; 0x02
    10fc:	42 2d       	mov	r20, r2
    10fe:	53 2d       	mov	r21, r3
    1100:	0e 94 ca 1d 	call	0x3b94	; 0x3b94 <__cmpsf2>
    1104:	88 23       	and	r24, r24
    1106:	6c f4       	brge	.+26     	; 0x1122 <minInd2+0xaa>
    1108:	d8 01       	movw	r26, r16
    110a:	c7 01       	movw	r24, r14
    110c:	e9 82       	std	Y+1, r14	; 0x01
    110e:	9a 83       	std	Y+2, r25	; 0x02
    1110:	2a 2e       	mov	r2, r26
    1112:	3b 2e       	mov	r3, r27
    1114:	8b 2d       	mov	r24, r11
    1116:	9a 2d       	mov	r25, r10
    1118:	a9 2d       	mov	r26, r9
    111a:	b8 2d       	mov	r27, r8
    111c:	7c 01       	movw	r14, r24
    111e:	8d 01       	movw	r16, r26
    1120:	13 c0       	rjmp	.+38     	; 0x1148 <minInd2+0xd0>
            minimum = lst[i];
        else if (lst[i] < minimum2)
    1122:	c8 01       	movw	r24, r16
    1124:	b7 01       	movw	r22, r14
    1126:	2b 2d       	mov	r18, r11
    1128:	3a 2d       	mov	r19, r10
    112a:	49 2d       	mov	r20, r9
    112c:	58 2d       	mov	r21, r8
    112e:	0e 94 ca 1d 	call	0x3b94	; 0x3b94 <__cmpsf2>
    1132:	88 23       	and	r24, r24
    1134:	1c f4       	brge	.+6      	; 0x113c <minInd2+0xc4>
    1136:	6b 80       	ldd	r6, Y+3	; 0x03
    1138:	7c 80       	ldd	r7, Y+4	; 0x04
    113a:	06 c0       	rjmp	.+12     	; 0x1148 <minInd2+0xd0>
    113c:	8b 2d       	mov	r24, r11
    113e:	9a 2d       	mov	r25, r10
    1140:	a9 2d       	mov	r26, r9
    1142:	b8 2d       	mov	r27, r8
    1144:	7c 01       	movw	r14, r24
    1146:	8d 01       	movw	r16, r26
{
    double minimum = DBL_MAX;
    double minimum2 = DBL_MAX; /* Second smallest minimum */
    int minInd2 = 0;
    int i;
    for (i = 0; i < length; i++)
    1148:	8b 81       	ldd	r24, Y+3	; 0x03
    114a:	9c 81       	ldd	r25, Y+4	; 0x04
    114c:	01 96       	adiw	r24, 0x01	; 1
    114e:	9c 83       	std	Y+4, r25	; 0x04
    1150:	8b 83       	std	Y+3, r24	; 0x03
    1152:	e4 e0       	ldi	r30, 0x04	; 4
    1154:	f0 e0       	ldi	r31, 0x00	; 0
    1156:	ce 0e       	add	r12, r30
    1158:	df 1e       	adc	r13, r31
    115a:	84 15       	cp	r24, r4
    115c:	95 05       	cpc	r25, r5
    115e:	3c f4       	brge	.+14     	; 0x116e <minInd2+0xf6>
    1160:	d8 01       	movw	r26, r16
    1162:	c7 01       	movw	r24, r14
    1164:	be 2c       	mov	r11, r14
    1166:	a9 2e       	mov	r10, r25
    1168:	9a 2e       	mov	r9, r26
    116a:	8b 2e       	mov	r8, r27
    116c:	be cf       	rjmp	.-132    	; 0x10ea <minInd2+0x72>
        {
            minimum2 = lst[i];
            minInd2 = i;
        }
    }
    if (fabs(minimum2 - DBL_MAX) < 1)
    116e:	c8 01       	movw	r24, r16
    1170:	b7 01       	movw	r22, r14
    1172:	2f ef       	ldi	r18, 0xFF	; 255
    1174:	3f ef       	ldi	r19, 0xFF	; 255
    1176:	4f e7       	ldi	r20, 0x7F	; 127
    1178:	5f e7       	ldi	r21, 0x7F	; 127
    117a:	0e 94 65 1d 	call	0x3aca	; 0x3aca <__subsf3>
    117e:	9f 77       	andi	r25, 0x7F	; 127
    1180:	20 e0       	ldi	r18, 0x00	; 0
    1182:	30 e0       	ldi	r19, 0x00	; 0
    1184:	40 e8       	ldi	r20, 0x80	; 128
    1186:	5f e3       	ldi	r21, 0x3F	; 63
    1188:	0e 94 ca 1d 	call	0x3b94	; 0x3b94 <__cmpsf2>
    118c:	88 23       	and	r24, r24
    118e:	1c f4       	brge	.+6      	; 0x1196 <minInd2+0x11e>
    1190:	66 24       	eor	r6, r6
    1192:	6a 94       	dec	r6
    1194:	76 2c       	mov	r7, r6
        return -1;
    else
        return minInd2;
    1196:	86 2d       	mov	r24, r6
    1198:	97 2d       	mov	r25, r7
    119a:	0f 90       	pop	r0
    119c:	0f 90       	pop	r0
    119e:	0f 90       	pop	r0
    11a0:	0f 90       	pop	r0
    11a2:	cf 91       	pop	r28
    11a4:	df 91       	pop	r29
    11a6:	1f 91       	pop	r17
    11a8:	0f 91       	pop	r16
    11aa:	ff 90       	pop	r15
    11ac:	ef 90       	pop	r14
    11ae:	df 90       	pop	r13
    11b0:	cf 90       	pop	r12
    11b2:	bf 90       	pop	r11
    11b4:	af 90       	pop	r10
    11b6:	9f 90       	pop	r9
    11b8:	8f 90       	pop	r8
    11ba:	7f 90       	pop	r7
    11bc:	6f 90       	pop	r6
    11be:	5f 90       	pop	r5
    11c0:	4f 90       	pop	r4
    11c2:	3f 90       	pop	r3
    11c4:	2f 90       	pop	r2
    11c6:	08 95       	ret

000011c8 <pointValid>:
 * Returns 1 if the point 'p' is in the workspace; 0 otherwise.
 * Workspace is a cylinder of radius r centered on the z-axis, with a
 * height ranging from z_min to z_max.
 */
 int pointValid(struct point p)
 {
    11c8:	af 92       	push	r10
    11ca:	bf 92       	push	r11
    11cc:	cf 92       	push	r12
    11ce:	df 92       	push	r13
    11d0:	ef 92       	push	r14
    11d2:	ff 92       	push	r15
    11d4:	0f 93       	push	r16
    11d6:	1f 93       	push	r17
    11d8:	df 93       	push	r29
    11da:	cf 93       	push	r28
    11dc:	cd b7       	in	r28, 0x3d	; 61
    11de:	de b7       	in	r29, 0x3e	; 62
    11e0:	2c 97       	sbiw	r28, 0x0c	; 12
    11e2:	0f b6       	in	r0, 0x3f	; 63
    11e4:	f8 94       	cli
    11e6:	de bf       	out	0x3e, r29	; 62
    11e8:	0f be       	out	0x3f, r0	; 63
    11ea:	cd bf       	out	0x3d, r28	; 61
    11ec:	e9 82       	std	Y+1, r14	; 0x01
    11ee:	fa 82       	std	Y+2, r15	; 0x02
    11f0:	0b 83       	std	Y+3, r16	; 0x03
    11f2:	1c 83       	std	Y+4, r17	; 0x04
    11f4:	2d 83       	std	Y+5, r18	; 0x05
    11f6:	3e 83       	std	Y+6, r19	; 0x06
    11f8:	4f 83       	std	Y+7, r20	; 0x07
    11fa:	58 87       	std	Y+8, r21	; 0x08
    11fc:	69 87       	std	Y+9, r22	; 0x09
    11fe:	7a 87       	std	Y+10, r23	; 0x0a
    1200:	8b 87       	std	Y+11, r24	; 0x0b
    1202:	9c 87       	std	Y+12, r25	; 0x0c
    1204:	a9 84       	ldd	r10, Y+9	; 0x09
    1206:	ba 84       	ldd	r11, Y+10	; 0x0a
    1208:	cb 84       	ldd	r12, Y+11	; 0x0b
    120a:	dc 84       	ldd	r13, Y+12	; 0x0c
     double r = 6.0;        /* Radius of cylinder in inches. */
     double z_min = -13.0;  /* Lowest height in inches. */
     double z_max = -8.0;   /* Maximum height in inches. */

     return (pow(p.x, 2) + pow(p.y, 2) <= pow(r, 2) &&
    120c:	29 81       	ldd	r18, Y+1	; 0x01
    120e:	3a 81       	ldd	r19, Y+2	; 0x02
    1210:	4b 81       	ldd	r20, Y+3	; 0x03
    1212:	5c 81       	ldd	r21, Y+4	; 0x04
    1214:	ca 01       	movw	r24, r20
    1216:	b9 01       	movw	r22, r18
    1218:	0e 94 99 1f 	call	0x3f32	; 0x3f32 <__mulsf3>
    121c:	e6 2e       	mov	r14, r22
    121e:	f7 2e       	mov	r15, r23
    1220:	08 2f       	mov	r16, r24
    1222:	19 2f       	mov	r17, r25
    1224:	2d 81       	ldd	r18, Y+5	; 0x05
    1226:	3e 81       	ldd	r19, Y+6	; 0x06
    1228:	4f 81       	ldd	r20, Y+7	; 0x07
    122a:	58 85       	ldd	r21, Y+8	; 0x08
    122c:	ca 01       	movw	r24, r20
    122e:	b9 01       	movw	r22, r18
    1230:	0e 94 99 1f 	call	0x3f32	; 0x3f32 <__mulsf3>
    1234:	26 2f       	mov	r18, r22
    1236:	37 2f       	mov	r19, r23
    1238:	48 2f       	mov	r20, r24
    123a:	59 2f       	mov	r21, r25
    123c:	c8 01       	movw	r24, r16
    123e:	b7 01       	movw	r22, r14
    1240:	0e 94 66 1d 	call	0x3acc	; 0x3acc <__addsf3>
    1244:	20 e0       	ldi	r18, 0x00	; 0
    1246:	30 e0       	ldi	r19, 0x00	; 0
    1248:	40 e1       	ldi	r20, 0x10	; 16
    124a:	52 e4       	ldi	r21, 0x42	; 66
    124c:	0e 94 ca 1d 	call	0x3b94	; 0x3b94 <__cmpsf2>
    1250:	18 16       	cp	r1, r24
    1252:	dc f0       	brlt	.+54     	; 0x128a <pointValid+0xc2>
    1254:	c6 01       	movw	r24, r12
    1256:	b5 01       	movw	r22, r10
    1258:	20 e0       	ldi	r18, 0x00	; 0
    125a:	30 e0       	ldi	r19, 0x00	; 0
    125c:	40 e5       	ldi	r20, 0x50	; 80
    125e:	51 ec       	ldi	r21, 0xC1	; 193
    1260:	0e 94 95 1f 	call	0x3f2a	; 0x3f2a <__gesf2>
    1264:	88 23       	and	r24, r24
    1266:	8c f0       	brlt	.+34     	; 0x128a <pointValid+0xc2>
    1268:	10 e0       	ldi	r17, 0x00	; 0
    126a:	c6 01       	movw	r24, r12
    126c:	b5 01       	movw	r22, r10
    126e:	20 e0       	ldi	r18, 0x00	; 0
    1270:	30 e0       	ldi	r19, 0x00	; 0
    1272:	40 e0       	ldi	r20, 0x00	; 0
    1274:	51 ec       	ldi	r21, 0xC1	; 193
    1276:	0e 94 ca 1d 	call	0x3b94	; 0x3b94 <__cmpsf2>
    127a:	18 16       	cp	r1, r24
    127c:	0c f4       	brge	.+2      	; 0x1280 <pointValid+0xb8>
    127e:	11 e0       	ldi	r17, 0x01	; 1
    1280:	81 e0       	ldi	r24, 0x01	; 1
    1282:	81 27       	eor	r24, r17
    1284:	28 2f       	mov	r18, r24
    1286:	30 e0       	ldi	r19, 0x00	; 0
    1288:	02 c0       	rjmp	.+4      	; 0x128e <pointValid+0xc6>
    128a:	20 e0       	ldi	r18, 0x00	; 0
    128c:	30 e0       	ldi	r19, 0x00	; 0
             p.z >= z_min &&
             p.z <= z_max);
 }
    128e:	82 2f       	mov	r24, r18
    1290:	93 2f       	mov	r25, r19
    1292:	2c 96       	adiw	r28, 0x0c	; 12
    1294:	0f b6       	in	r0, 0x3f	; 63
    1296:	f8 94       	cli
    1298:	de bf       	out	0x3e, r29	; 62
    129a:	0f be       	out	0x3f, r0	; 63
    129c:	cd bf       	out	0x3d, r28	; 61
    129e:	cf 91       	pop	r28
    12a0:	df 91       	pop	r29
    12a2:	1f 91       	pop	r17
    12a4:	0f 91       	pop	r16
    12a6:	ff 90       	pop	r15
    12a8:	ef 90       	pop	r14
    12aa:	df 90       	pop	r13
    12ac:	cf 90       	pop	r12
    12ae:	bf 90       	pop	r11
    12b0:	af 90       	pop	r10
    12b2:	08 95       	ret

000012b4 <getAngle3>:
/**
 * Returns the required angle of servo actuator 3 to get to a desired point 'p'
 * in degrees and servo coordinates. If no solution exists, returns NAN.
 */
double getAngle3(struct point p)
{
    12b4:	2f 92       	push	r2
    12b6:	3f 92       	push	r3
    12b8:	4f 92       	push	r4
    12ba:	5f 92       	push	r5
    12bc:	6f 92       	push	r6
    12be:	7f 92       	push	r7
    12c0:	8f 92       	push	r8
    12c2:	9f 92       	push	r9
    12c4:	af 92       	push	r10
    12c6:	bf 92       	push	r11
    12c8:	cf 92       	push	r12
    12ca:	df 92       	push	r13
    12cc:	ef 92       	push	r14
    12ce:	ff 92       	push	r15
    12d0:	0f 93       	push	r16
    12d2:	1f 93       	push	r17
    12d4:	df 93       	push	r29
    12d6:	cf 93       	push	r28
    12d8:	cd b7       	in	r28, 0x3d	; 61
    12da:	de b7       	in	r29, 0x3e	; 62
    12dc:	c2 57       	subi	r28, 0x72	; 114
    12de:	d0 40       	sbci	r29, 0x00	; 0
    12e0:	0f b6       	in	r0, 0x3f	; 63
    12e2:	f8 94       	cli
    12e4:	de bf       	out	0x3e, r29	; 62
    12e6:	0f be       	out	0x3f, r0	; 63
    12e8:	cd bf       	out	0x3d, r28	; 61
    12ea:	e9 a6       	std	Y+41, r14	; 0x29
    12ec:	fa a6       	std	Y+42, r15	; 0x2a
    12ee:	0b a7       	std	Y+43, r16	; 0x2b
    12f0:	1c a7       	std	Y+44, r17	; 0x2c
    12f2:	2d a7       	std	Y+45, r18	; 0x2d
    12f4:	3e a7       	std	Y+46, r19	; 0x2e
    12f6:	4f a7       	std	Y+47, r20	; 0x2f
    12f8:	58 ab       	std	Y+48, r21	; 0x30
    12fa:	69 ab       	std	Y+49, r22	; 0x31
    12fc:	7a ab       	std	Y+50, r23	; 0x32
    12fe:	8b ab       	std	Y+51, r24	; 0x33
    1300:	9c ab       	std	Y+52, r25	; 0x34
    1302:	89 a5       	ldd	r24, Y+41	; 0x29
    1304:	9a a5       	ldd	r25, Y+42	; 0x2a
    1306:	ab a5       	ldd	r26, Y+43	; 0x2b
    1308:	bc a5       	ldd	r27, Y+44	; 0x2c
    130a:	25 96       	adiw	r28, 0x05	; 5
    130c:	8c af       	std	Y+60, r24	; 0x3c
    130e:	9d af       	std	Y+61, r25	; 0x3d
    1310:	ae af       	std	Y+62, r26	; 0x3e
    1312:	bf af       	std	Y+63, r27	; 0x3f
    1314:	25 97       	sbiw	r28, 0x05	; 5
    1316:	8d a5       	ldd	r24, Y+45	; 0x2d
    1318:	9e a5       	ldd	r25, Y+46	; 0x2e
    131a:	af a5       	ldd	r26, Y+47	; 0x2f
    131c:	b8 a9       	ldd	r27, Y+48	; 0x30
    131e:	21 96       	adiw	r28, 0x01	; 1
    1320:	8c af       	std	Y+60, r24	; 0x3c
    1322:	9d af       	std	Y+61, r25	; 0x3d
    1324:	ae af       	std	Y+62, r26	; 0x3e
    1326:	bf af       	std	Y+63, r27	; 0x3f
    1328:	21 97       	sbiw	r28, 0x01	; 1
    132a:	89 a9       	ldd	r24, Y+49	; 0x31
    132c:	9a a9       	ldd	r25, Y+50	; 0x32
    132e:	ab a9       	ldd	r26, Y+51	; 0x33
    1330:	bc a9       	ldd	r27, Y+52	; 0x34
    1332:	89 af       	std	Y+57, r24	; 0x39
    1334:	9a af       	std	Y+58, r25	; 0x3a
    1336:	ab af       	std	Y+59, r26	; 0x3b
    1338:	bc af       	std	Y+60, r27	; 0x3c
                   pow(p.z, 2)) + pow(p.y, 2) * (-253 + 2 * pow(p.z, 2)) +
                   2 * sqrt(3) * p.x * (-314 - 13 * p.y + 2 * pow(p.y, 2) +
                   2 * pow(p.z, 2)) + pow(p.x, 2) * (-227 + 12 * p.y + 2 *
                   pow(p.y, 2) + 2 * pow(p.z, 2)))))/(5 * (48 + pow(p.x, 2) +
                   24 * p.y + 3 * pow(p.y, 2) + 2 * sqrt(3) * p.x * (4 + p.y)
                   + 4 * pow(p.z, 2)));
    133a:	25 96       	adiw	r28, 0x05	; 5
    133c:	6c ad       	ldd	r22, Y+60	; 0x3c
    133e:	7d ad       	ldd	r23, Y+61	; 0x3d
    1340:	8e ad       	ldd	r24, Y+62	; 0x3e
    1342:	9f ad       	ldd	r25, Y+63	; 0x3f
    1344:	25 97       	sbiw	r28, 0x05	; 5
    1346:	20 e0       	ldi	r18, 0x00	; 0
    1348:	30 e0       	ldi	r19, 0x00	; 0
    134a:	40 e4       	ldi	r20, 0x40	; 64
    134c:	50 e4       	ldi	r21, 0x40	; 64
    134e:	0e 94 fc 1f 	call	0x3ff8	; 0x3ff8 <pow>
    1352:	a2 96       	adiw	r28, 0x22	; 34
    1354:	6f af       	std	Y+63, r22	; 0x3f
    1356:	a2 97       	sbiw	r28, 0x22	; 34
    1358:	a3 96       	adiw	r28, 0x23	; 35
    135a:	7f af       	std	Y+63, r23	; 0x3f
    135c:	a3 97       	sbiw	r28, 0x23	; 35
    135e:	a4 96       	adiw	r28, 0x24	; 36
    1360:	8f af       	std	Y+63, r24	; 0x3f
    1362:	a4 97       	sbiw	r28, 0x24	; 36
    1364:	a5 96       	adiw	r28, 0x25	; 37
    1366:	9f af       	std	Y+63, r25	; 0x3f
    1368:	a5 97       	sbiw	r28, 0x25	; 37
    136a:	21 96       	adiw	r28, 0x01	; 1
    136c:	6c ad       	ldd	r22, Y+60	; 0x3c
    136e:	7d ad       	ldd	r23, Y+61	; 0x3d
    1370:	8e ad       	ldd	r24, Y+62	; 0x3e
    1372:	9f ad       	ldd	r25, Y+63	; 0x3f
    1374:	21 97       	sbiw	r28, 0x01	; 1
    1376:	9b 01       	movw	r18, r22
    1378:	ac 01       	movw	r20, r24
    137a:	0e 94 99 1f 	call	0x3f32	; 0x3f32 <__mulsf3>
    137e:	a6 96       	adiw	r28, 0x26	; 38
    1380:	6f af       	std	Y+63, r22	; 0x3f
    1382:	a6 97       	sbiw	r28, 0x26	; 38
    1384:	a7 96       	adiw	r28, 0x27	; 39
    1386:	7f af       	std	Y+63, r23	; 0x3f
    1388:	a7 97       	sbiw	r28, 0x27	; 39
    138a:	a8 96       	adiw	r28, 0x28	; 40
    138c:	8f af       	std	Y+63, r24	; 0x3f
    138e:	a8 97       	sbiw	r28, 0x28	; 40
    1390:	a9 96       	adiw	r28, 0x29	; 41
    1392:	9f af       	std	Y+63, r25	; 0x3f
    1394:	a9 97       	sbiw	r28, 0x29	; 41
    1396:	21 96       	adiw	r28, 0x01	; 1
    1398:	6c ad       	ldd	r22, Y+60	; 0x3c
    139a:	7d ad       	ldd	r23, Y+61	; 0x3d
    139c:	8e ad       	ldd	r24, Y+62	; 0x3e
    139e:	9f ad       	ldd	r25, Y+63	; 0x3f
    13a0:	21 97       	sbiw	r28, 0x01	; 1
    13a2:	20 e0       	ldi	r18, 0x00	; 0
    13a4:	30 e0       	ldi	r19, 0x00	; 0
    13a6:	40 e4       	ldi	r20, 0x40	; 64
    13a8:	50 e4       	ldi	r21, 0x40	; 64
    13aa:	0e 94 fc 1f 	call	0x3ff8	; 0x3ff8 <pow>
    13ae:	aa 96       	adiw	r28, 0x2a	; 42
    13b0:	6f af       	std	Y+63, r22	; 0x3f
    13b2:	aa 97       	sbiw	r28, 0x2a	; 42
    13b4:	ab 96       	adiw	r28, 0x2b	; 43
    13b6:	7f af       	std	Y+63, r23	; 0x3f
    13b8:	ab 97       	sbiw	r28, 0x2b	; 43
    13ba:	ac 96       	adiw	r28, 0x2c	; 44
    13bc:	8f af       	std	Y+63, r24	; 0x3f
    13be:	ac 97       	sbiw	r28, 0x2c	; 44
    13c0:	ad 96       	adiw	r28, 0x2d	; 45
    13c2:	9f af       	std	Y+63, r25	; 0x3f
    13c4:	ad 97       	sbiw	r28, 0x2d	; 45
    13c6:	25 96       	adiw	r28, 0x05	; 5
    13c8:	6c ad       	ldd	r22, Y+60	; 0x3c
    13ca:	7d ad       	ldd	r23, Y+61	; 0x3d
    13cc:	8e ad       	ldd	r24, Y+62	; 0x3e
    13ce:	9f ad       	ldd	r25, Y+63	; 0x3f
    13d0:	25 97       	sbiw	r28, 0x05	; 5
    13d2:	9b 01       	movw	r18, r22
    13d4:	ac 01       	movw	r20, r24
    13d6:	0e 94 99 1f 	call	0x3f32	; 0x3f32 <__mulsf3>
    13da:	ae 96       	adiw	r28, 0x2e	; 46
    13dc:	6f af       	std	Y+63, r22	; 0x3f
    13de:	ae 97       	sbiw	r28, 0x2e	; 46
    13e0:	af 96       	adiw	r28, 0x2f	; 47
    13e2:	7f af       	std	Y+63, r23	; 0x3f
    13e4:	af 97       	sbiw	r28, 0x2f	; 47
    13e6:	e0 96       	adiw	r28, 0x30	; 48
    13e8:	8f af       	std	Y+63, r24	; 0x3f
    13ea:	e0 97       	sbiw	r28, 0x30	; 48
    13ec:	e1 96       	adiw	r28, 0x31	; 49
    13ee:	9f af       	std	Y+63, r25	; 0x3f
    13f0:	e1 97       	sbiw	r28, 0x31	; 49
    13f2:	69 ad       	ldd	r22, Y+57	; 0x39
    13f4:	7a ad       	ldd	r23, Y+58	; 0x3a
    13f6:	8b ad       	ldd	r24, Y+59	; 0x3b
    13f8:	9c ad       	ldd	r25, Y+60	; 0x3c
    13fa:	9b 01       	movw	r18, r22
    13fc:	ac 01       	movw	r20, r24
    13fe:	0e 94 99 1f 	call	0x3f32	; 0x3f32 <__mulsf3>
    1402:	26 2e       	mov	r2, r22
    1404:	37 2e       	mov	r3, r23
    1406:	48 2e       	mov	r4, r24
    1408:	59 2e       	mov	r5, r25
    140a:	29 96       	adiw	r28, 0x09	; 9
    140c:	2c ae       	std	Y+60, r2	; 0x3c
    140e:	3d ae       	std	Y+61, r3	; 0x3d
    1410:	4e ae       	std	Y+62, r4	; 0x3e
    1412:	5f ae       	std	Y+63, r5	; 0x3f
    1414:	29 97       	sbiw	r28, 0x09	; 9
    1416:	21 96       	adiw	r28, 0x01	; 1
    1418:	6c ad       	ldd	r22, Y+60	; 0x3c
    141a:	7d ad       	ldd	r23, Y+61	; 0x3d
    141c:	8e ad       	ldd	r24, Y+62	; 0x3e
    141e:	9f ad       	ldd	r25, Y+63	; 0x3f
    1420:	21 97       	sbiw	r28, 0x01	; 1
    1422:	20 e0       	ldi	r18, 0x00	; 0
    1424:	30 e0       	ldi	r19, 0x00	; 0
    1426:	40 e4       	ldi	r20, 0x40	; 64
    1428:	51 e4       	ldi	r21, 0x41	; 65
    142a:	0e 94 99 1f 	call	0x3f32	; 0x3f32 <__mulsf3>
    142e:	2d 96       	adiw	r28, 0x0d	; 13
    1430:	6c af       	std	Y+60, r22	; 0x3c
    1432:	7d af       	std	Y+61, r23	; 0x3d
    1434:	8e af       	std	Y+62, r24	; 0x3e
    1436:	9f af       	std	Y+63, r25	; 0x3f
    1438:	2d 97       	sbiw	r28, 0x0d	; 13
    143a:	a5 96       	adiw	r28, 0x25	; 37
    143c:	6c ad       	ldd	r22, Y+60	; 0x3c
    143e:	7d ad       	ldd	r23, Y+61	; 0x3d
    1440:	8e ad       	ldd	r24, Y+62	; 0x3e
    1442:	9f ad       	ldd	r25, Y+63	; 0x3f
    1444:	a5 97       	sbiw	r28, 0x25	; 37
    1446:	26 e5       	ldi	r18, 0x56	; 86
    1448:	34 e5       	ldi	r19, 0x54	; 84
    144a:	49 e3       	ldi	r20, 0x39	; 57
    144c:	54 e4       	ldi	r21, 0x44	; 68
    144e:	0e 94 65 1d 	call	0x3aca	; 0x3aca <__subsf3>
    1452:	7b 01       	movw	r14, r22
    1454:	8c 01       	movw	r16, r24
    1456:	21 96       	adiw	r28, 0x01	; 1
    1458:	6c ad       	ldd	r22, Y+60	; 0x3c
    145a:	7d ad       	ldd	r23, Y+61	; 0x3d
    145c:	8e ad       	ldd	r24, Y+62	; 0x3e
    145e:	9f ad       	ldd	r25, Y+63	; 0x3f
    1460:	21 97       	sbiw	r28, 0x01	; 1
    1462:	2d e9       	ldi	r18, 0x9D	; 157
    1464:	32 ec       	ldi	r19, 0xC2	; 194
    1466:	4f e0       	ldi	r20, 0x0F	; 15
    1468:	53 ec       	ldi	r21, 0xC3	; 195
    146a:	0e 94 99 1f 	call	0x3f32	; 0x3f32 <__mulsf3>
    146e:	9b 01       	movw	r18, r22
    1470:	ac 01       	movw	r20, r24
    1472:	c8 01       	movw	r24, r16
    1474:	b7 01       	movw	r22, r14
    1476:	0e 94 66 1d 	call	0x3acc	; 0x3acc <__addsf3>
    147a:	7b 01       	movw	r14, r22
    147c:	8c 01       	movw	r16, r24
    147e:	a9 96       	adiw	r28, 0x29	; 41
    1480:	6c ad       	ldd	r22, Y+60	; 0x3c
    1482:	7d ad       	ldd	r23, Y+61	; 0x3d
    1484:	8e ad       	ldd	r24, Y+62	; 0x3e
    1486:	9f ad       	ldd	r25, Y+63	; 0x3f
    1488:	a9 97       	sbiw	r28, 0x29	; 41
    148a:	26 e6       	ldi	r18, 0x66	; 102
    148c:	30 e9       	ldi	r19, 0x90	; 144
    148e:	4a e8       	ldi	r20, 0x8A	; 138
    1490:	51 e4       	ldi	r21, 0x41	; 65
    1492:	0e 94 99 1f 	call	0x3f32	; 0x3f32 <__mulsf3>
    1496:	9b 01       	movw	r18, r22
    1498:	ac 01       	movw	r20, r24
    149a:	c8 01       	movw	r24, r16
    149c:	b7 01       	movw	r22, r14
    149e:	0e 94 66 1d 	call	0x3acc	; 0x3acc <__addsf3>
    14a2:	7b 01       	movw	r14, r22
    14a4:	8c 01       	movw	r16, r24
    14a6:	ad 96       	adiw	r28, 0x2d	; 45
    14a8:	6c ad       	ldd	r22, Y+60	; 0x3c
    14aa:	7d ad       	ldd	r23, Y+61	; 0x3d
    14ac:	8e ad       	ldd	r24, Y+62	; 0x3e
    14ae:	9f ad       	ldd	r25, Y+63	; 0x3f
    14b0:	ad 97       	sbiw	r28, 0x2d	; 45
    14b2:	27 ed       	ldi	r18, 0xD7	; 215
    14b4:	33 eb       	ldi	r19, 0xB3	; 179
    14b6:	4d ed       	ldi	r20, 0xDD	; 221
    14b8:	5f e3       	ldi	r21, 0x3F	; 63
    14ba:	0e 94 99 1f 	call	0x3f32	; 0x3f32 <__mulsf3>
    14be:	9b 01       	movw	r18, r22
    14c0:	ac 01       	movw	r20, r24
    14c2:	c8 01       	movw	r24, r16
    14c4:	b7 01       	movw	r22, r14
    14c6:	0e 94 66 1d 	call	0x3acc	; 0x3acc <__addsf3>
    14ca:	5b 01       	movw	r10, r22
    14cc:	6c 01       	movw	r12, r24
    14ce:	e1 96       	adiw	r28, 0x31	; 49
    14d0:	6c ad       	ldd	r22, Y+60	; 0x3c
    14d2:	7d ad       	ldd	r23, Y+61	; 0x3d
    14d4:	8e ad       	ldd	r24, Y+62	; 0x3e
    14d6:	9f ad       	ldd	r25, Y+63	; 0x3f
    14d8:	e1 97       	sbiw	r28, 0x31	; 49
    14da:	27 ed       	ldi	r18, 0xD7	; 215
    14dc:	33 eb       	ldi	r19, 0xB3	; 179
    14de:	4d ed       	ldi	r20, 0xDD	; 221
    14e0:	5f e3       	ldi	r21, 0x3F	; 63
    14e2:	0e 94 99 1f 	call	0x3f32	; 0x3f32 <__mulsf3>
    14e6:	7b 01       	movw	r14, r22
    14e8:	8c 01       	movw	r16, r24
    14ea:	21 96       	adiw	r28, 0x01	; 1
    14ec:	6c ad       	ldd	r22, Y+60	; 0x3c
    14ee:	7d ad       	ldd	r23, Y+61	; 0x3d
    14f0:	8e ad       	ldd	r24, Y+62	; 0x3e
    14f2:	9f ad       	ldd	r25, Y+63	; 0x3f
    14f4:	21 97       	sbiw	r28, 0x01	; 1
    14f6:	20 e0       	ldi	r18, 0x00	; 0
    14f8:	30 e0       	ldi	r19, 0x00	; 0
    14fa:	40 ec       	ldi	r20, 0xC0	; 192
    14fc:	50 e4       	ldi	r21, 0x40	; 64
    14fe:	0e 94 66 1d 	call	0x3acc	; 0x3acc <__addsf3>
    1502:	9b 01       	movw	r18, r22
    1504:	ac 01       	movw	r20, r24
    1506:	c8 01       	movw	r24, r16
    1508:	b7 01       	movw	r22, r14
    150a:	0e 94 99 1f 	call	0x3f32	; 0x3f32 <__mulsf3>
    150e:	9b 01       	movw	r18, r22
    1510:	ac 01       	movw	r20, r24
    1512:	c6 01       	movw	r24, r12
    1514:	b5 01       	movw	r22, r10
    1516:	0e 94 66 1d 	call	0x3acc	; 0x3acc <__addsf3>
    151a:	7b 01       	movw	r14, r22
    151c:	8c 01       	movw	r16, r24
    151e:	c2 01       	movw	r24, r4
    1520:	b1 01       	movw	r22, r2
    1522:	27 ed       	ldi	r18, 0xD7	; 215
    1524:	33 eb       	ldi	r19, 0xB3	; 179
    1526:	4d ed       	ldi	r20, 0xDD	; 221
    1528:	50 e4       	ldi	r21, 0x40	; 64
    152a:	0e 94 99 1f 	call	0x3f32	; 0x3f32 <__mulsf3>
    152e:	9b 01       	movw	r18, r22
    1530:	ac 01       	movw	r20, r24
    1532:	c8 01       	movw	r24, r16
    1534:	b7 01       	movw	r22, r14
    1536:	0e 94 66 1d 	call	0x3acc	; 0x3acc <__addsf3>
    153a:	7b 01       	movw	r14, r22
    153c:	8c 01       	movw	r16, r24
    153e:	21 96       	adiw	r28, 0x01	; 1
    1540:	6c ad       	ldd	r22, Y+60	; 0x3c
    1542:	7d ad       	ldd	r23, Y+61	; 0x3d
    1544:	8e ad       	ldd	r24, Y+62	; 0x3e
    1546:	9f ad       	ldd	r25, Y+63	; 0x3f
    1548:	21 97       	sbiw	r28, 0x01	; 1
    154a:	27 ed       	ldi	r18, 0xD7	; 215
    154c:	33 eb       	ldi	r19, 0xB3	; 179
    154e:	4d ed       	ldi	r20, 0xDD	; 221
    1550:	5f e3       	ldi	r21, 0x3F	; 63
    1552:	0e 94 99 1f 	call	0x3f32	; 0x3f32 <__mulsf3>
    1556:	9b 01       	movw	r18, r22
    1558:	ac 01       	movw	r20, r24
    155a:	c2 01       	movw	r24, r4
    155c:	b1 01       	movw	r22, r2
    155e:	0e 94 99 1f 	call	0x3f32	; 0x3f32 <__mulsf3>
    1562:	9b 01       	movw	r18, r22
    1564:	ac 01       	movw	r20, r24
    1566:	c8 01       	movw	r24, r16
    1568:	b7 01       	movw	r22, r14
    156a:	0e 94 66 1d 	call	0x3acc	; 0x3acc <__addsf3>
    156e:	7b 01       	movw	r14, r22
    1570:	8c 01       	movw	r16, r24
    1572:	2d 96       	adiw	r28, 0x0d	; 13
    1574:	6c ad       	ldd	r22, Y+60	; 0x3c
    1576:	7d ad       	ldd	r23, Y+61	; 0x3d
    1578:	8e ad       	ldd	r24, Y+62	; 0x3e
    157a:	9f ad       	ldd	r25, Y+63	; 0x3f
    157c:	2d 97       	sbiw	r28, 0x0d	; 13
    157e:	20 e0       	ldi	r18, 0x00	; 0
    1580:	30 e0       	ldi	r19, 0x00	; 0
    1582:	46 ea       	ldi	r20, 0xA6	; 166
    1584:	52 e4       	ldi	r21, 0x42	; 66
    1586:	0e 94 65 1d 	call	0x3aca	; 0x3aca <__subsf3>
    158a:	9b 01       	movw	r18, r22
    158c:	ac 01       	movw	r20, r24
    158e:	a9 96       	adiw	r28, 0x29	; 41
    1590:	6c ad       	ldd	r22, Y+60	; 0x3c
    1592:	7d ad       	ldd	r23, Y+61	; 0x3d
    1594:	8e ad       	ldd	r24, Y+62	; 0x3e
    1596:	9f ad       	ldd	r25, Y+63	; 0x3f
    1598:	a9 97       	sbiw	r28, 0x29	; 41
    159a:	0e 94 66 1d 	call	0x3acc	; 0x3acc <__addsf3>
    159e:	9b 01       	movw	r18, r22
    15a0:	ac 01       	movw	r20, r24
    15a2:	c2 01       	movw	r24, r4
    15a4:	b1 01       	movw	r22, r2
    15a6:	0e 94 66 1d 	call	0x3acc	; 0x3acc <__addsf3>
    15aa:	9b 01       	movw	r18, r22
    15ac:	ac 01       	movw	r20, r24
    15ae:	25 96       	adiw	r28, 0x05	; 5
    15b0:	6c ad       	ldd	r22, Y+60	; 0x3c
    15b2:	7d ad       	ldd	r23, Y+61	; 0x3d
    15b4:	8e ad       	ldd	r24, Y+62	; 0x3e
    15b6:	9f ad       	ldd	r25, Y+63	; 0x3f
    15b8:	25 97       	sbiw	r28, 0x05	; 5
    15ba:	0e 94 99 1f 	call	0x3f32	; 0x3f32 <__mulsf3>
    15be:	9b 01       	movw	r18, r22
    15c0:	ac 01       	movw	r20, r24
    15c2:	c8 01       	movw	r24, r16
    15c4:	b7 01       	movw	r22, r14
    15c6:	0e 94 66 1d 	call	0x3acc	; 0x3acc <__addsf3>
    15ca:	61 96       	adiw	r28, 0x11	; 17
    15cc:	6c af       	std	Y+60, r22	; 0x3c
    15ce:	7d af       	std	Y+61, r23	; 0x3d
    15d0:	8e af       	std	Y+62, r24	; 0x3e
    15d2:	9f af       	std	Y+63, r25	; 0x3f
    15d4:	61 97       	sbiw	r28, 0x11	; 17
    15d6:	25 96       	adiw	r28, 0x05	; 5
    15d8:	6c ad       	ldd	r22, Y+60	; 0x3c
    15da:	7d ad       	ldd	r23, Y+61	; 0x3d
    15dc:	8e ad       	ldd	r24, Y+62	; 0x3e
    15de:	9f ad       	ldd	r25, Y+63	; 0x3f
    15e0:	25 97       	sbiw	r28, 0x05	; 5
    15e2:	20 e0       	ldi	r18, 0x00	; 0
    15e4:	30 e0       	ldi	r19, 0x00	; 0
    15e6:	40 e8       	ldi	r20, 0x80	; 128
    15e8:	50 e4       	ldi	r21, 0x40	; 64
    15ea:	0e 94 fc 1f 	call	0x3ff8	; 0x3ff8 <pow>
    15ee:	e6 2e       	mov	r14, r22
    15f0:	f7 2e       	mov	r15, r23
    15f2:	08 2f       	mov	r16, r24
    15f4:	19 2f       	mov	r17, r25
    15f6:	21 96       	adiw	r28, 0x01	; 1
    15f8:	6c ad       	ldd	r22, Y+60	; 0x3c
    15fa:	7d ad       	ldd	r23, Y+61	; 0x3d
    15fc:	8e ad       	ldd	r24, Y+62	; 0x3e
    15fe:	9f ad       	ldd	r25, Y+63	; 0x3f
    1600:	21 97       	sbiw	r28, 0x01	; 1
    1602:	20 e0       	ldi	r18, 0x00	; 0
    1604:	30 e0       	ldi	r19, 0x00	; 0
    1606:	40 e8       	ldi	r20, 0x80	; 128
    1608:	50 e4       	ldi	r21, 0x40	; 64
    160a:	0e 94 fc 1f 	call	0x3ff8	; 0x3ff8 <pow>
    160e:	a6 2e       	mov	r10, r22
    1610:	b7 2e       	mov	r11, r23
    1612:	c8 2e       	mov	r12, r24
    1614:	d9 2e       	mov	r13, r25
    1616:	69 ad       	ldd	r22, Y+57	; 0x39
    1618:	7a ad       	ldd	r23, Y+58	; 0x3a
    161a:	8b ad       	ldd	r24, Y+59	; 0x3b
    161c:	9c ad       	ldd	r25, Y+60	; 0x3c
    161e:	20 e0       	ldi	r18, 0x00	; 0
    1620:	30 e0       	ldi	r19, 0x00	; 0
    1622:	40 e8       	ldi	r20, 0x80	; 128
    1624:	50 e4       	ldi	r21, 0x40	; 64
    1626:	0e 94 fc 1f 	call	0x3ff8	; 0x3ff8 <pow>
    162a:	66 2e       	mov	r6, r22
    162c:	77 2e       	mov	r7, r23
    162e:	88 2e       	mov	r8, r24
    1630:	99 2e       	mov	r9, r25
    1632:	c2 01       	movw	r24, r4
    1634:	b1 01       	movw	r22, r2
    1636:	a2 01       	movw	r20, r4
    1638:	91 01       	movw	r18, r2
    163a:	0e 94 66 1d 	call	0x3acc	; 0x3acc <__addsf3>
    163e:	65 96       	adiw	r28, 0x15	; 21
    1640:	6c af       	std	Y+60, r22	; 0x3c
    1642:	7d af       	std	Y+61, r23	; 0x3d
    1644:	8e af       	std	Y+62, r24	; 0x3e
    1646:	9f af       	std	Y+63, r25	; 0x3f
    1648:	65 97       	sbiw	r28, 0x15	; 21
    164a:	25 96       	adiw	r28, 0x05	; 5
    164c:	6c ad       	ldd	r22, Y+60	; 0x3c
    164e:	7d ad       	ldd	r23, Y+61	; 0x3d
    1650:	8e ad       	ldd	r24, Y+62	; 0x3e
    1652:	9f ad       	ldd	r25, Y+63	; 0x3f
    1654:	25 97       	sbiw	r28, 0x05	; 5
    1656:	27 ed       	ldi	r18, 0xD7	; 215
    1658:	33 eb       	ldi	r19, 0xB3	; 179
    165a:	4d e5       	ldi	r20, 0x5D	; 93
    165c:	50 e4       	ldi	r21, 0x40	; 64
    165e:	0e 94 99 1f 	call	0x3f32	; 0x3f32 <__mulsf3>
    1662:	69 96       	adiw	r28, 0x19	; 25
    1664:	6c af       	std	Y+60, r22	; 0x3c
    1666:	7d af       	std	Y+61, r23	; 0x3d
    1668:	8e af       	std	Y+62, r24	; 0x3e
    166a:	9f af       	std	Y+63, r25	; 0x3f
    166c:	69 97       	sbiw	r28, 0x19	; 25
    166e:	a9 96       	adiw	r28, 0x29	; 41
    1670:	6c ad       	ldd	r22, Y+60	; 0x3c
    1672:	7d ad       	ldd	r23, Y+61	; 0x3d
    1674:	8e ad       	ldd	r24, Y+62	; 0x3e
    1676:	9f ad       	ldd	r25, Y+63	; 0x3f
    1678:	a9 97       	sbiw	r28, 0x29	; 41
    167a:	9b 01       	movw	r18, r22
    167c:	ac 01       	movw	r20, r24
    167e:	0e 94 66 1d 	call	0x3acc	; 0x3acc <__addsf3>
    1682:	6d 96       	adiw	r28, 0x1d	; 29
    1684:	6c af       	std	Y+60, r22	; 0x3c
    1686:	7d af       	std	Y+61, r23	; 0x3d
    1688:	8e af       	std	Y+62, r24	; 0x3e
    168a:	9f af       	std	Y+63, r25	; 0x3f
    168c:	6d 97       	sbiw	r28, 0x1d	; 29
    168e:	d2 01       	movw	r26, r4
    1690:	c1 01       	movw	r24, r2
    1692:	b0 58       	subi	r27, 0x80	; 128
    1694:	a1 96       	adiw	r28, 0x21	; 33
    1696:	8c af       	std	Y+60, r24	; 0x3c
    1698:	9d af       	std	Y+61, r25	; 0x3d
    169a:	ae af       	std	Y+62, r26	; 0x3e
    169c:	bf af       	std	Y+63, r27	; 0x3f
    169e:	a1 97       	sbiw	r28, 0x21	; 33
    16a0:	a5 96       	adiw	r28, 0x25	; 37
    16a2:	6c ad       	ldd	r22, Y+60	; 0x3c
    16a4:	7d ad       	ldd	r23, Y+61	; 0x3d
    16a6:	8e ad       	ldd	r24, Y+62	; 0x3e
    16a8:	9f ad       	ldd	r25, Y+63	; 0x3f
    16aa:	a5 97       	sbiw	r28, 0x25	; 37
    16ac:	27 ed       	ldi	r18, 0xD7	; 215
    16ae:	33 eb       	ldi	r19, 0xB3	; 179
    16b0:	4d ed       	ldi	r20, 0xDD	; 221
    16b2:	50 e4       	ldi	r21, 0x40	; 64
    16b4:	0e 94 99 1f 	call	0x3f32	; 0x3f32 <__mulsf3>
    16b8:	20 e0       	ldi	r18, 0x00	; 0
    16ba:	34 e2       	ldi	r19, 0x24	; 36
    16bc:	40 e2       	ldi	r20, 0x20	; 32
    16be:	56 e4       	ldi	r21, 0x46	; 70
    16c0:	0e 94 66 1d 	call	0x3acc	; 0x3acc <__addsf3>
    16c4:	a8 01       	movw	r20, r16
    16c6:	97 01       	movw	r18, r14
    16c8:	0e 94 66 1d 	call	0x3acc	; 0x3acc <__addsf3>
    16cc:	7b 01       	movw	r14, r22
    16ce:	8c 01       	movw	r16, r24
    16d0:	ad 96       	adiw	r28, 0x2d	; 45
    16d2:	6c ad       	ldd	r22, Y+60	; 0x3c
    16d4:	7d ad       	ldd	r23, Y+61	; 0x3d
    16d6:	8e ad       	ldd	r24, Y+62	; 0x3e
    16d8:	9f ad       	ldd	r25, Y+63	; 0x3f
    16da:	ad 97       	sbiw	r28, 0x2d	; 45
    16dc:	20 e0       	ldi	r18, 0x00	; 0
    16de:	30 e0       	ldi	r19, 0x00	; 0
    16e0:	40 e4       	ldi	r20, 0x40	; 64
    16e2:	51 e4       	ldi	r21, 0x41	; 65
    16e4:	0e 94 99 1f 	call	0x3f32	; 0x3f32 <__mulsf3>
    16e8:	9b 01       	movw	r18, r22
    16ea:	ac 01       	movw	r20, r24
    16ec:	c8 01       	movw	r24, r16
    16ee:	b7 01       	movw	r22, r14
    16f0:	0e 94 66 1d 	call	0x3acc	; 0x3acc <__addsf3>
    16f4:	a6 01       	movw	r20, r12
    16f6:	95 01       	movw	r18, r10
    16f8:	0e 94 66 1d 	call	0x3acc	; 0x3acc <__addsf3>
    16fc:	7b 01       	movw	r14, r22
    16fe:	8c 01       	movw	r16, r24
    1700:	c2 01       	movw	r24, r4
    1702:	b1 01       	movw	r22, r2
    1704:	20 e0       	ldi	r18, 0x00	; 0
    1706:	30 e0       	ldi	r19, 0x00	; 0
    1708:	4d e9       	ldi	r20, 0x9D	; 157
    170a:	53 ec       	ldi	r21, 0xC3	; 195
    170c:	0e 94 99 1f 	call	0x3f32	; 0x3f32 <__mulsf3>
    1710:	9b 01       	movw	r18, r22
    1712:	ac 01       	movw	r20, r24
    1714:	c8 01       	movw	r24, r16
    1716:	b7 01       	movw	r22, r14
    1718:	0e 94 66 1d 	call	0x3acc	; 0x3acc <__addsf3>
    171c:	a4 01       	movw	r20, r8
    171e:	93 01       	movw	r18, r6
    1720:	0e 94 66 1d 	call	0x3acc	; 0x3acc <__addsf3>
    1724:	7b 01       	movw	r14, r22
    1726:	8c 01       	movw	r16, r24
    1728:	c2 01       	movw	r24, r4
    172a:	b1 01       	movw	r22, r2
    172c:	20 e0       	ldi	r18, 0x00	; 0
    172e:	30 e0       	ldi	r19, 0x00	; 0
    1730:	4d e1       	ldi	r20, 0x1D	; 29
    1732:	53 e4       	ldi	r21, 0x43	; 67
    1734:	0e 94 65 1d 	call	0x3aca	; 0x3aca <__subsf3>
    1738:	9b 01       	movw	r18, r22
    173a:	ac 01       	movw	r20, r24
    173c:	2d 96       	adiw	r28, 0x0d	; 13
    173e:	6c ad       	ldd	r22, Y+60	; 0x3c
    1740:	7d ad       	ldd	r23, Y+61	; 0x3d
    1742:	8e ad       	ldd	r24, Y+62	; 0x3e
    1744:	9f ad       	ldd	r25, Y+63	; 0x3f
    1746:	2d 97       	sbiw	r28, 0x0d	; 13
    1748:	0e 94 99 1f 	call	0x3f32	; 0x3f32 <__mulsf3>
    174c:	9b 01       	movw	r18, r22
    174e:	ac 01       	movw	r20, r24
    1750:	c8 01       	movw	r24, r16
    1752:	b7 01       	movw	r22, r14
    1754:	0e 94 66 1d 	call	0x3acc	; 0x3acc <__addsf3>
    1758:	7b 01       	movw	r14, r22
    175a:	8c 01       	movw	r16, r24
    175c:	65 96       	adiw	r28, 0x15	; 21
    175e:	6c ad       	ldd	r22, Y+60	; 0x3c
    1760:	7d ad       	ldd	r23, Y+61	; 0x3d
    1762:	8e ad       	ldd	r24, Y+62	; 0x3e
    1764:	9f ad       	ldd	r25, Y+63	; 0x3f
    1766:	65 97       	sbiw	r28, 0x15	; 21
    1768:	20 e0       	ldi	r18, 0x00	; 0
    176a:	30 e0       	ldi	r19, 0x00	; 0
    176c:	4d e7       	ldi	r20, 0x7D	; 125
    176e:	53 e4       	ldi	r21, 0x43	; 67
    1770:	0e 94 65 1d 	call	0x3aca	; 0x3aca <__subsf3>
    1774:	9b 01       	movw	r18, r22
    1776:	ac 01       	movw	r20, r24
    1778:	a9 96       	adiw	r28, 0x29	; 41
    177a:	6c ad       	ldd	r22, Y+60	; 0x3c
    177c:	7d ad       	ldd	r23, Y+61	; 0x3d
    177e:	8e ad       	ldd	r24, Y+62	; 0x3e
    1780:	9f ad       	ldd	r25, Y+63	; 0x3f
    1782:	a9 97       	sbiw	r28, 0x29	; 41
    1784:	0e 94 99 1f 	call	0x3f32	; 0x3f32 <__mulsf3>
    1788:	9b 01       	movw	r18, r22
    178a:	ac 01       	movw	r20, r24
    178c:	c8 01       	movw	r24, r16
    178e:	b7 01       	movw	r22, r14
    1790:	0e 94 66 1d 	call	0x3acc	; 0x3acc <__addsf3>
    1794:	7b 01       	movw	r14, r22
    1796:	8c 01       	movw	r16, r24
    1798:	21 96       	adiw	r28, 0x01	; 1
    179a:	6c ad       	ldd	r22, Y+60	; 0x3c
    179c:	7d ad       	ldd	r23, Y+61	; 0x3d
    179e:	8e ad       	ldd	r24, Y+62	; 0x3e
    17a0:	9f ad       	ldd	r25, Y+63	; 0x3f
    17a2:	21 97       	sbiw	r28, 0x01	; 1
    17a4:	20 e0       	ldi	r18, 0x00	; 0
    17a6:	30 e0       	ldi	r19, 0x00	; 0
    17a8:	40 e5       	ldi	r20, 0x50	; 80
    17aa:	51 ec       	ldi	r21, 0xC1	; 193
    17ac:	0e 94 99 1f 	call	0x3f32	; 0x3f32 <__mulsf3>
    17b0:	20 e0       	ldi	r18, 0x00	; 0
    17b2:	30 e0       	ldi	r19, 0x00	; 0
    17b4:	4d e9       	ldi	r20, 0x9D	; 157
    17b6:	53 e4       	ldi	r21, 0x43	; 67
    17b8:	0e 94 65 1d 	call	0x3aca	; 0x3aca <__subsf3>
    17bc:	6d 96       	adiw	r28, 0x1d	; 29
    17be:	2c ad       	ldd	r18, Y+60	; 0x3c
    17c0:	3d ad       	ldd	r19, Y+61	; 0x3d
    17c2:	4e ad       	ldd	r20, Y+62	; 0x3e
    17c4:	5f ad       	ldd	r21, Y+63	; 0x3f
    17c6:	6d 97       	sbiw	r28, 0x1d	; 29
    17c8:	0e 94 66 1d 	call	0x3acc	; 0x3acc <__addsf3>
    17cc:	9b 01       	movw	r18, r22
    17ce:	ac 01       	movw	r20, r24
    17d0:	65 96       	adiw	r28, 0x15	; 21
    17d2:	6c ad       	ldd	r22, Y+60	; 0x3c
    17d4:	7d ad       	ldd	r23, Y+61	; 0x3d
    17d6:	8e ad       	ldd	r24, Y+62	; 0x3e
    17d8:	9f ad       	ldd	r25, Y+63	; 0x3f
    17da:	65 97       	sbiw	r28, 0x15	; 21
    17dc:	0e 94 66 1d 	call	0x3acc	; 0x3acc <__addsf3>
    17e0:	9b 01       	movw	r18, r22
    17e2:	ac 01       	movw	r20, r24
    17e4:	69 96       	adiw	r28, 0x19	; 25
    17e6:	6c ad       	ldd	r22, Y+60	; 0x3c
    17e8:	7d ad       	ldd	r23, Y+61	; 0x3d
    17ea:	8e ad       	ldd	r24, Y+62	; 0x3e
    17ec:	9f ad       	ldd	r25, Y+63	; 0x3f
    17ee:	69 97       	sbiw	r28, 0x19	; 25
    17f0:	0e 94 99 1f 	call	0x3f32	; 0x3f32 <__mulsf3>
    17f4:	9b 01       	movw	r18, r22
    17f6:	ac 01       	movw	r20, r24
    17f8:	c8 01       	movw	r24, r16
    17fa:	b7 01       	movw	r22, r14
    17fc:	0e 94 66 1d 	call	0x3acc	; 0x3acc <__addsf3>
    1800:	7b 01       	movw	r14, r22
    1802:	8c 01       	movw	r16, r24
    1804:	2d 96       	adiw	r28, 0x0d	; 13
    1806:	6c ad       	ldd	r22, Y+60	; 0x3c
    1808:	7d ad       	ldd	r23, Y+61	; 0x3d
    180a:	8e ad       	ldd	r24, Y+62	; 0x3e
    180c:	9f ad       	ldd	r25, Y+63	; 0x3f
    180e:	2d 97       	sbiw	r28, 0x0d	; 13
    1810:	20 e0       	ldi	r18, 0x00	; 0
    1812:	30 e0       	ldi	r19, 0x00	; 0
    1814:	43 e6       	ldi	r20, 0x63	; 99
    1816:	53 e4       	ldi	r21, 0x43	; 67
    1818:	0e 94 65 1d 	call	0x3aca	; 0x3aca <__subsf3>
    181c:	9b 01       	movw	r18, r22
    181e:	ac 01       	movw	r20, r24
    1820:	6d 96       	adiw	r28, 0x1d	; 29
    1822:	6c ad       	ldd	r22, Y+60	; 0x3c
    1824:	7d ad       	ldd	r23, Y+61	; 0x3d
    1826:	8e ad       	ldd	r24, Y+62	; 0x3e
    1828:	9f ad       	ldd	r25, Y+63	; 0x3f
    182a:	6d 97       	sbiw	r28, 0x1d	; 29
    182c:	0e 94 66 1d 	call	0x3acc	; 0x3acc <__addsf3>
    1830:	9b 01       	movw	r18, r22
    1832:	ac 01       	movw	r20, r24
    1834:	65 96       	adiw	r28, 0x15	; 21
    1836:	6c ad       	ldd	r22, Y+60	; 0x3c
    1838:	7d ad       	ldd	r23, Y+61	; 0x3d
    183a:	8e ad       	ldd	r24, Y+62	; 0x3e
    183c:	9f ad       	ldd	r25, Y+63	; 0x3f
    183e:	65 97       	sbiw	r28, 0x15	; 21
    1840:	0e 94 66 1d 	call	0x3acc	; 0x3acc <__addsf3>
    1844:	9b 01       	movw	r18, r22
    1846:	ac 01       	movw	r20, r24
    1848:	e1 96       	adiw	r28, 0x31	; 49
    184a:	6c ad       	ldd	r22, Y+60	; 0x3c
    184c:	7d ad       	ldd	r23, Y+61	; 0x3d
    184e:	8e ad       	ldd	r24, Y+62	; 0x3e
    1850:	9f ad       	ldd	r25, Y+63	; 0x3f
    1852:	e1 97       	sbiw	r28, 0x31	; 49
    1854:	0e 94 99 1f 	call	0x3f32	; 0x3f32 <__mulsf3>
    1858:	9b 01       	movw	r18, r22
    185a:	ac 01       	movw	r20, r24
    185c:	c8 01       	movw	r24, r16
    185e:	b7 01       	movw	r22, r14
    1860:	0e 94 66 1d 	call	0x3acc	; 0x3acc <__addsf3>
    1864:	9b 01       	movw	r18, r22
    1866:	ac 01       	movw	r20, r24
    1868:	a1 96       	adiw	r28, 0x21	; 33
    186a:	6c ad       	ldd	r22, Y+60	; 0x3c
    186c:	7d ad       	ldd	r23, Y+61	; 0x3d
    186e:	8e ad       	ldd	r24, Y+62	; 0x3e
    1870:	9f ad       	ldd	r25, Y+63	; 0x3f
    1872:	a1 97       	sbiw	r28, 0x21	; 33
    1874:	0e 94 99 1f 	call	0x3f32	; 0x3f32 <__mulsf3>
    1878:	0e 94 52 20 	call	0x40a4	; 0x40a4 <sqrt>
    187c:	5b 01       	movw	r10, r22
    187e:	6c 01       	movw	r12, r24
    1880:	e1 96       	adiw	r28, 0x31	; 49
    1882:	6c ad       	ldd	r22, Y+60	; 0x3c
    1884:	7d ad       	ldd	r23, Y+61	; 0x3d
    1886:	8e ad       	ldd	r24, Y+62	; 0x3e
    1888:	9f ad       	ldd	r25, Y+63	; 0x3f
    188a:	e1 97       	sbiw	r28, 0x31	; 49
    188c:	20 e0       	ldi	r18, 0x00	; 0
    188e:	30 e0       	ldi	r19, 0x00	; 0
    1890:	40 e4       	ldi	r20, 0x40	; 64
    1892:	52 e4       	ldi	r21, 0x42	; 66
    1894:	0e 94 66 1d 	call	0x3acc	; 0x3acc <__addsf3>
    1898:	7b 01       	movw	r14, r22
    189a:	8c 01       	movw	r16, r24
    189c:	21 96       	adiw	r28, 0x01	; 1
    189e:	6c ad       	ldd	r22, Y+60	; 0x3c
    18a0:	7d ad       	ldd	r23, Y+61	; 0x3d
    18a2:	8e ad       	ldd	r24, Y+62	; 0x3e
    18a4:	9f ad       	ldd	r25, Y+63	; 0x3f
    18a6:	21 97       	sbiw	r28, 0x01	; 1
    18a8:	20 e0       	ldi	r18, 0x00	; 0
    18aa:	30 e0       	ldi	r19, 0x00	; 0
    18ac:	40 ec       	ldi	r20, 0xC0	; 192
    18ae:	51 e4       	ldi	r21, 0x41	; 65
    18b0:	0e 94 99 1f 	call	0x3f32	; 0x3f32 <__mulsf3>
    18b4:	9b 01       	movw	r18, r22
    18b6:	ac 01       	movw	r20, r24
    18b8:	c8 01       	movw	r24, r16
    18ba:	b7 01       	movw	r22, r14
    18bc:	0e 94 66 1d 	call	0x3acc	; 0x3acc <__addsf3>
    18c0:	7b 01       	movw	r14, r22
    18c2:	8c 01       	movw	r16, r24
    18c4:	a9 96       	adiw	r28, 0x29	; 41
    18c6:	6c ad       	ldd	r22, Y+60	; 0x3c
    18c8:	7d ad       	ldd	r23, Y+61	; 0x3d
    18ca:	8e ad       	ldd	r24, Y+62	; 0x3e
    18cc:	9f ad       	ldd	r25, Y+63	; 0x3f
    18ce:	a9 97       	sbiw	r28, 0x29	; 41
    18d0:	20 e0       	ldi	r18, 0x00	; 0
    18d2:	30 e0       	ldi	r19, 0x00	; 0
    18d4:	40 e4       	ldi	r20, 0x40	; 64
    18d6:	50 e4       	ldi	r21, 0x40	; 64
    18d8:	0e 94 99 1f 	call	0x3f32	; 0x3f32 <__mulsf3>
    18dc:	9b 01       	movw	r18, r22
    18de:	ac 01       	movw	r20, r24
    18e0:	c8 01       	movw	r24, r16
    18e2:	b7 01       	movw	r22, r14
    18e4:	0e 94 66 1d 	call	0x3acc	; 0x3acc <__addsf3>
    18e8:	7b 01       	movw	r14, r22
    18ea:	8c 01       	movw	r16, r24
    18ec:	21 96       	adiw	r28, 0x01	; 1
    18ee:	6c ad       	ldd	r22, Y+60	; 0x3c
    18f0:	7d ad       	ldd	r23, Y+61	; 0x3d
    18f2:	8e ad       	ldd	r24, Y+62	; 0x3e
    18f4:	9f ad       	ldd	r25, Y+63	; 0x3f
    18f6:	21 97       	sbiw	r28, 0x01	; 1
    18f8:	20 e0       	ldi	r18, 0x00	; 0
    18fa:	30 e0       	ldi	r19, 0x00	; 0
    18fc:	40 e8       	ldi	r20, 0x80	; 128
    18fe:	50 e4       	ldi	r21, 0x40	; 64
    1900:	0e 94 66 1d 	call	0x3acc	; 0x3acc <__addsf3>
    1904:	9b 01       	movw	r18, r22
    1906:	ac 01       	movw	r20, r24
    1908:	69 96       	adiw	r28, 0x19	; 25
    190a:	6c ad       	ldd	r22, Y+60	; 0x3c
    190c:	7d ad       	ldd	r23, Y+61	; 0x3d
    190e:	8e ad       	ldd	r24, Y+62	; 0x3e
    1910:	9f ad       	ldd	r25, Y+63	; 0x3f
    1912:	69 97       	sbiw	r28, 0x19	; 25
    1914:	0e 94 99 1f 	call	0x3f32	; 0x3f32 <__mulsf3>
    1918:	9b 01       	movw	r18, r22
    191a:	ac 01       	movw	r20, r24
    191c:	c8 01       	movw	r24, r16
    191e:	b7 01       	movw	r22, r14
    1920:	0e 94 66 1d 	call	0x3acc	; 0x3acc <__addsf3>
    1924:	7b 01       	movw	r14, r22
    1926:	8c 01       	movw	r16, r24
    1928:	c2 01       	movw	r24, r4
    192a:	b1 01       	movw	r22, r2
    192c:	20 e0       	ldi	r18, 0x00	; 0
    192e:	30 e0       	ldi	r19, 0x00	; 0
    1930:	40 e8       	ldi	r20, 0x80	; 128
    1932:	50 e4       	ldi	r21, 0x40	; 64
    1934:	0e 94 99 1f 	call	0x3f32	; 0x3f32 <__mulsf3>
    1938:	9b 01       	movw	r18, r22
    193a:	ac 01       	movw	r20, r24
    193c:	c8 01       	movw	r24, r16
    193e:	b7 01       	movw	r22, r14
    1940:	0e 94 66 1d 	call	0x3acc	; 0x3acc <__addsf3>
    1944:	20 e0       	ldi	r18, 0x00	; 0
    1946:	30 e0       	ldi	r19, 0x00	; 0
    1948:	40 ea       	ldi	r20, 0xA0	; 160
    194a:	50 ec       	ldi	r21, 0xC0	; 192
    194c:	0e 94 99 1f 	call	0x3f32	; 0x3f32 <__mulsf3>
    1950:	7b 01       	movw	r14, r22
    1952:	8c 01       	movw	r16, r24
    1954:	c6 01       	movw	r24, r12
    1956:	b5 01       	movw	r22, r10
    1958:	a6 01       	movw	r20, r12
    195a:	95 01       	movw	r18, r10
    195c:	0e 94 66 1d 	call	0x3acc	; 0x3acc <__addsf3>
    1960:	9b 01       	movw	r18, r22
    1962:	ac 01       	movw	r20, r24
    1964:	61 96       	adiw	r28, 0x11	; 17
    1966:	6c ad       	ldd	r22, Y+60	; 0x3c
    1968:	7d ad       	ldd	r23, Y+61	; 0x3d
    196a:	8e ad       	ldd	r24, Y+62	; 0x3e
    196c:	9f ad       	ldd	r25, Y+63	; 0x3f
    196e:	61 97       	sbiw	r28, 0x11	; 17
    1970:	0e 94 66 1d 	call	0x3acc	; 0x3acc <__addsf3>
    1974:	a8 01       	movw	r20, r16
    1976:	97 01       	movw	r18, r14
    1978:	0e 94 d1 1d 	call	0x3ba2	; 0x3ba2 <__divsf3>
    197c:	1b 01       	movw	r2, r22
    197e:	2c 01       	movw	r4, r24
                   pow(p.z, 2)) + pow(p.y, 2) * (-253 + 2 * pow(p.z, 2)) +
                   2 * sqrt(3) * p.x * (-314 - 13 * p.y + 2 * pow(p.y, 2) +
                   2 * pow(p.z, 2)) + pow(p.x, 2) * (-227 + 12 * p.y + 2 *
                   pow(p.y, 2) + 2 * pow(p.z, 2)))))/(5 * (48 + pow(p.x, 2) +
                   24 * p.y + 3 * pow(p.y, 2) + 2 * sqrt(3) * p.x * (4 + p.y)
                   + 4 * pow(p.z, 2)));
    1980:	c6 01       	movw	r24, r12
    1982:	b5 01       	movw	r22, r10
    1984:	20 e0       	ldi	r18, 0x00	; 0
    1986:	30 e0       	ldi	r19, 0x00	; 0
    1988:	40 e0       	ldi	r20, 0x00	; 0
    198a:	50 ec       	ldi	r21, 0xC0	; 192
    198c:	0e 94 99 1f 	call	0x3f32	; 0x3f32 <__mulsf3>
    1990:	9b 01       	movw	r18, r22
    1992:	ac 01       	movw	r20, r24
    1994:	61 96       	adiw	r28, 0x11	; 17
    1996:	6c ad       	ldd	r22, Y+60	; 0x3c
    1998:	7d ad       	ldd	r23, Y+61	; 0x3d
    199a:	8e ad       	ldd	r24, Y+62	; 0x3e
    199c:	9f ad       	ldd	r25, Y+63	; 0x3f
    199e:	61 97       	sbiw	r28, 0x11	; 17
    19a0:	0e 94 66 1d 	call	0x3acc	; 0x3acc <__addsf3>
    19a4:	a8 01       	movw	r20, r16
    19a6:	97 01       	movw	r18, r14
    19a8:	0e 94 d1 1d 	call	0x3ba2	; 0x3ba2 <__divsf3>
    19ac:	7b 01       	movw	r14, r22
    19ae:	8c 01       	movw	r16, r24

    if (fabs(arg1) > 1.0)
    19b0:	c2 01       	movw	r24, r4
    19b2:	b1 01       	movw	r22, r2
    19b4:	9f 77       	andi	r25, 0x7F	; 127
    19b6:	20 e0       	ldi	r18, 0x00	; 0
    19b8:	30 e0       	ldi	r19, 0x00	; 0
    19ba:	40 e8       	ldi	r20, 0x80	; 128
    19bc:	5f e3       	ldi	r21, 0x3F	; 63
    19be:	0e 94 95 1f 	call	0x3f2a	; 0x3f2a <__gesf2>
    19c2:	18 16       	cp	r1, r24
    19c4:	0c f0       	brlt	.+2      	; 0x19c8 <getAngle3+0x714>
    19c6:	4d c0       	rjmp	.+154    	; 0x1a62 <getAngle3+0x7ae>
    {
	    if (fabs(arg1 - 1.0) < 0.0001) /* Slightly over 1 (from rounding error) */
    19c8:	c2 01       	movw	r24, r4
    19ca:	b1 01       	movw	r22, r2
    19cc:	20 e0       	ldi	r18, 0x00	; 0
    19ce:	30 e0       	ldi	r19, 0x00	; 0
    19d0:	40 e8       	ldi	r20, 0x80	; 128
    19d2:	5f e3       	ldi	r21, 0x3F	; 63
    19d4:	0e 94 65 1d 	call	0x3aca	; 0x3aca <__subsf3>
    19d8:	9f 77       	andi	r25, 0x7F	; 127
    19da:	27 e1       	ldi	r18, 0x17	; 23
    19dc:	37 eb       	ldi	r19, 0xB7	; 183
    19de:	41 ed       	ldi	r20, 0xD1	; 209
    19e0:	58 e3       	ldi	r21, 0x38	; 56
    19e2:	0e 94 ca 1d 	call	0x3b94	; 0x3b94 <__cmpsf2>
    19e6:	88 23       	and	r24, r24
    19e8:	6c f4       	brge	.+26     	; 0x1a04 <getAngle3+0x750>
	    {
		    options[0] = 0;
    19ea:	80 e0       	ldi	r24, 0x00	; 0
    19ec:	90 e0       	ldi	r25, 0x00	; 0
    19ee:	a0 e0       	ldi	r26, 0x00	; 0
    19f0:	b0 e0       	ldi	r27, 0x00	; 0
    19f2:	89 83       	std	Y+1, r24	; 0x01
    19f4:	9a 83       	std	Y+2, r25	; 0x02
    19f6:	ab 83       	std	Y+3, r26	; 0x03
    19f8:	bc 83       	std	Y+4, r27	; 0x04
		    options[1] = 0;
    19fa:	8d 83       	std	Y+5, r24	; 0x05
    19fc:	9e 83       	std	Y+6, r25	; 0x06
    19fe:	af 83       	std	Y+7, r26	; 0x07
    1a00:	b8 87       	std	Y+8, r27	; 0x08
    1a02:	3c c0       	rjmp	.+120    	; 0x1a7c <getAngle3+0x7c8>
	    }
	    else if (fabs(arg1 - (-1.0)) < 0.0001) /* Slightly less than 1 (from rounding error) */
    1a04:	c2 01       	movw	r24, r4
    1a06:	b1 01       	movw	r22, r2
    1a08:	20 e0       	ldi	r18, 0x00	; 0
    1a0a:	30 e0       	ldi	r19, 0x00	; 0
    1a0c:	40 e8       	ldi	r20, 0x80	; 128
    1a0e:	5f e3       	ldi	r21, 0x3F	; 63
    1a10:	0e 94 66 1d 	call	0x3acc	; 0x3acc <__addsf3>
    1a14:	9f 77       	andi	r25, 0x7F	; 127
    1a16:	27 e1       	ldi	r18, 0x17	; 23
    1a18:	37 eb       	ldi	r19, 0xB7	; 183
    1a1a:	41 ed       	ldi	r20, 0xD1	; 209
    1a1c:	58 e3       	ldi	r21, 0x38	; 56
    1a1e:	0e 94 ca 1d 	call	0x3b94	; 0x3b94 <__cmpsf2>
    1a22:	88 23       	and	r24, r24
    1a24:	8c f4       	brge	.+34     	; 0x1a48 <getAngle3+0x794>
	    {
		    options[0] = M_PI;
    1a26:	8b ed       	ldi	r24, 0xDB	; 219
    1a28:	9f e0       	ldi	r25, 0x0F	; 15
    1a2a:	a9 e4       	ldi	r26, 0x49	; 73
    1a2c:	b0 e4       	ldi	r27, 0x40	; 64
    1a2e:	89 83       	std	Y+1, r24	; 0x01
    1a30:	9a 83       	std	Y+2, r25	; 0x02
    1a32:	ab 83       	std	Y+3, r26	; 0x03
    1a34:	bc 83       	std	Y+4, r27	; 0x04
		    options[1] = -M_PI;
    1a36:	8b ed       	ldi	r24, 0xDB	; 219
    1a38:	9f e0       	ldi	r25, 0x0F	; 15
    1a3a:	a9 e4       	ldi	r26, 0x49	; 73
    1a3c:	b0 ec       	ldi	r27, 0xC0	; 192
    1a3e:	8d 83       	std	Y+5, r24	; 0x05
    1a40:	9e 83       	std	Y+6, r25	; 0x06
    1a42:	af 83       	std	Y+7, r26	; 0x07
    1a44:	b8 87       	std	Y+8, r27	; 0x08
    1a46:	1a c0       	rjmp	.+52     	; 0x1a7c <getAngle3+0x7c8>
	    }
	    else
	    {
		    options[0] = NAN;
    1a48:	80 e0       	ldi	r24, 0x00	; 0
    1a4a:	90 e0       	ldi	r25, 0x00	; 0
    1a4c:	a0 ec       	ldi	r26, 0xC0	; 192
    1a4e:	bf e7       	ldi	r27, 0x7F	; 127
    1a50:	89 83       	std	Y+1, r24	; 0x01
    1a52:	9a 83       	std	Y+2, r25	; 0x02
    1a54:	ab 83       	std	Y+3, r26	; 0x03
    1a56:	bc 83       	std	Y+4, r27	; 0x04
		    options[1] = NAN;
    1a58:	8d 83       	std	Y+5, r24	; 0x05
    1a5a:	9e 83       	std	Y+6, r25	; 0x06
    1a5c:	af 83       	std	Y+7, r26	; 0x07
    1a5e:	b8 87       	std	Y+8, r27	; 0x08
    1a60:	0d c0       	rjmp	.+26     	; 0x1a7c <getAngle3+0x7c8>
	    }
    }
    else
    {
	    options[0] = acos(arg1);
    1a62:	c2 01       	movw	r24, r4
    1a64:	b1 01       	movw	r22, r2
    1a66:	0e 94 57 1d 	call	0x3aae	; 0x3aae <acos>
    1a6a:	69 83       	std	Y+1, r22	; 0x01
    1a6c:	7a 83       	std	Y+2, r23	; 0x02
    1a6e:	8b 83       	std	Y+3, r24	; 0x03
    1a70:	9c 83       	std	Y+4, r25	; 0x04
	    options[1] = -acos(arg1);
    1a72:	90 58       	subi	r25, 0x80	; 128
    1a74:	6d 83       	std	Y+5, r22	; 0x05
    1a76:	7e 83       	std	Y+6, r23	; 0x06
    1a78:	8f 83       	std	Y+7, r24	; 0x07
    1a7a:	98 87       	std	Y+8, r25	; 0x08
    }
    
    if (fabs(arg2) > 1.0)
    1a7c:	c8 01       	movw	r24, r16
    1a7e:	b7 01       	movw	r22, r14
    1a80:	9f 77       	andi	r25, 0x7F	; 127
    1a82:	20 e0       	ldi	r18, 0x00	; 0
    1a84:	30 e0       	ldi	r19, 0x00	; 0
    1a86:	40 e8       	ldi	r20, 0x80	; 128
    1a88:	5f e3       	ldi	r21, 0x3F	; 63
    1a8a:	0e 94 95 1f 	call	0x3f2a	; 0x3f2a <__gesf2>
    1a8e:	18 16       	cp	r1, r24
    1a90:	0c f0       	brlt	.+2      	; 0x1a94 <getAngle3+0x7e0>
    1a92:	59 c0       	rjmp	.+178    	; 0x1b46 <getAngle3+0x892>
    {
	    if (fabs(arg2 - 1.0) < 0.0001) /* Slightly over 1 (from rounding error) */
    1a94:	c8 01       	movw	r24, r16
    1a96:	b7 01       	movw	r22, r14
    1a98:	20 e0       	ldi	r18, 0x00	; 0
    1a9a:	30 e0       	ldi	r19, 0x00	; 0
    1a9c:	40 e8       	ldi	r20, 0x80	; 128
    1a9e:	5f e3       	ldi	r21, 0x3F	; 63
    1aa0:	0e 94 65 1d 	call	0x3aca	; 0x3aca <__subsf3>
    1aa4:	9f 77       	andi	r25, 0x7F	; 127
    1aa6:	27 e1       	ldi	r18, 0x17	; 23
    1aa8:	37 eb       	ldi	r19, 0xB7	; 183
    1aaa:	41 ed       	ldi	r20, 0xD1	; 209
    1aac:	58 e3       	ldi	r21, 0x38	; 56
    1aae:	0e 94 ca 1d 	call	0x3b94	; 0x3b94 <__cmpsf2>
    1ab2:	88 23       	and	r24, r24
    1ab4:	cc f4       	brge	.+50     	; 0x1ae8 <getAngle3+0x834>
	    {
		    options[2] = 0;
    1ab6:	80 e0       	ldi	r24, 0x00	; 0
    1ab8:	90 e0       	ldi	r25, 0x00	; 0
    1aba:	a0 e0       	ldi	r26, 0x00	; 0
    1abc:	b0 e0       	ldi	r27, 0x00	; 0
    1abe:	89 87       	std	Y+9, r24	; 0x09
    1ac0:	9a 87       	std	Y+10, r25	; 0x0a
    1ac2:	ab 87       	std	Y+11, r26	; 0x0b
    1ac4:	bc 87       	std	Y+12, r27	; 0x0c
		    options[3] = 0;
    1ac6:	8d 87       	std	Y+13, r24	; 0x0d
    1ac8:	9e 87       	std	Y+14, r25	; 0x0e
    1aca:	af 87       	std	Y+15, r26	; 0x0f
    1acc:	b8 8b       	std	Y+16, r27	; 0x10
    1ace:	de 01       	movw	r26, r28
    1ad0:	11 96       	adiw	r26, 0x01	; 1
    1ad2:	b8 af       	std	Y+56, r27	; 0x38
    1ad4:	af ab       	std	Y+55, r26	; 0x37
    1ad6:	fe 01       	movw	r30, r28
    1ad8:	71 96       	adiw	r30, 0x11	; 17
    1ada:	fe ab       	std	Y+54, r31	; 0x36
    1adc:	ed ab       	std	Y+53, r30	; 0x35
    }
    
        /* REMOVE INVALID SOLUTIONS */
    double values [4]; /* One val for each option; pick 2 smallest. */
    int i; /* Iterate over options. */
    for (i = 0; i < 4; i++)
    1ade:	e3 96       	adiw	r28, 0x33	; 51
    1ae0:	ff af       	std	Y+63, r31	; 0x3f
    1ae2:	ee af       	std	Y+62, r30	; 0x3e
    1ae4:	e3 97       	sbiw	r28, 0x33	; 51
    1ae6:	3d c0       	rjmp	.+122    	; 0x1b62 <getAngle3+0x8ae>
	    if (fabs(arg2 - 1.0) < 0.0001) /* Slightly over 1 (from rounding error) */
	    {
		    options[2] = 0;
		    options[3] = 0;
	    }
	    else if (fabs(arg2 - (-1.0)) < 0.0001) /* Slightly less than 1 (from rounding error) */
    1ae8:	c8 01       	movw	r24, r16
    1aea:	b7 01       	movw	r22, r14
    1aec:	20 e0       	ldi	r18, 0x00	; 0
    1aee:	30 e0       	ldi	r19, 0x00	; 0
    1af0:	40 e8       	ldi	r20, 0x80	; 128
    1af2:	5f e3       	ldi	r21, 0x3F	; 63
    1af4:	0e 94 66 1d 	call	0x3acc	; 0x3acc <__addsf3>
    1af8:	9f 77       	andi	r25, 0x7F	; 127
    1afa:	27 e1       	ldi	r18, 0x17	; 23
    1afc:	37 eb       	ldi	r19, 0xB7	; 183
    1afe:	41 ed       	ldi	r20, 0xD1	; 209
    1b00:	58 e3       	ldi	r21, 0x38	; 56
    1b02:	0e 94 ca 1d 	call	0x3b94	; 0x3b94 <__cmpsf2>
    1b06:	88 23       	and	r24, r24
    1b08:	8c f4       	brge	.+34     	; 0x1b2c <getAngle3+0x878>
	    {
		    options[2] = M_PI;
    1b0a:	8b ed       	ldi	r24, 0xDB	; 219
    1b0c:	9f e0       	ldi	r25, 0x0F	; 15
    1b0e:	a9 e4       	ldi	r26, 0x49	; 73
    1b10:	b0 e4       	ldi	r27, 0x40	; 64
    1b12:	89 87       	std	Y+9, r24	; 0x09
    1b14:	9a 87       	std	Y+10, r25	; 0x0a
    1b16:	ab 87       	std	Y+11, r26	; 0x0b
    1b18:	bc 87       	std	Y+12, r27	; 0x0c
		    options[3] = -M_PI;
    1b1a:	8b ed       	ldi	r24, 0xDB	; 219
    1b1c:	9f e0       	ldi	r25, 0x0F	; 15
    1b1e:	a9 e4       	ldi	r26, 0x49	; 73
    1b20:	b0 ec       	ldi	r27, 0xC0	; 192
    1b22:	8d 87       	std	Y+13, r24	; 0x0d
    1b24:	9e 87       	std	Y+14, r25	; 0x0e
    1b26:	af 87       	std	Y+15, r26	; 0x0f
    1b28:	b8 8b       	std	Y+16, r27	; 0x10
    1b2a:	d1 cf       	rjmp	.-94     	; 0x1ace <getAngle3+0x81a>
	    }
	    else
	    {
		    options[2] = NAN;
    1b2c:	80 e0       	ldi	r24, 0x00	; 0
    1b2e:	90 e0       	ldi	r25, 0x00	; 0
    1b30:	a0 ec       	ldi	r26, 0xC0	; 192
    1b32:	bf e7       	ldi	r27, 0x7F	; 127
    1b34:	89 87       	std	Y+9, r24	; 0x09
    1b36:	9a 87       	std	Y+10, r25	; 0x0a
    1b38:	ab 87       	std	Y+11, r26	; 0x0b
    1b3a:	bc 87       	std	Y+12, r27	; 0x0c
		    options[3] = NAN;
    1b3c:	8d 87       	std	Y+13, r24	; 0x0d
    1b3e:	9e 87       	std	Y+14, r25	; 0x0e
    1b40:	af 87       	std	Y+15, r26	; 0x0f
    1b42:	b8 8b       	std	Y+16, r27	; 0x10
    1b44:	c4 cf       	rjmp	.-120    	; 0x1ace <getAngle3+0x81a>
	    }
    }
    else
    {
	    options[2] = acos(arg2);
    1b46:	c8 01       	movw	r24, r16
    1b48:	b7 01       	movw	r22, r14
    1b4a:	0e 94 57 1d 	call	0x3aae	; 0x3aae <acos>
    1b4e:	69 87       	std	Y+9, r22	; 0x09
    1b50:	7a 87       	std	Y+10, r23	; 0x0a
    1b52:	8b 87       	std	Y+11, r24	; 0x0b
    1b54:	9c 87       	std	Y+12, r25	; 0x0c
	    options[3] = -acos(arg2);
    1b56:	90 58       	subi	r25, 0x80	; 128
    1b58:	6d 87       	std	Y+13, r22	; 0x0d
    1b5a:	7e 87       	std	Y+14, r23	; 0x0e
    1b5c:	8f 87       	std	Y+15, r24	; 0x0f
    1b5e:	98 8b       	std	Y+16, r25	; 0x10
    1b60:	b6 cf       	rjmp	.-148    	; 0x1ace <getAngle3+0x81a>
        /* REMOVE INVALID SOLUTIONS */
    double values [4]; /* One val for each option; pick 2 smallest. */
    int i; /* Iterate over options. */
    for (i = 0; i < 4; i++)
    {
        if (isnan(options[i]))
    1b62:	af a9       	ldd	r26, Y+55	; 0x37
    1b64:	b8 ad       	ldd	r27, Y+56	; 0x38
    1b66:	2d 90       	ld	r2, X+
    1b68:	3d 90       	ld	r3, X+
    1b6a:	4d 90       	ld	r4, X+
    1b6c:	5c 90       	ld	r5, X
    1b6e:	c2 01       	movw	r24, r4
    1b70:	b1 01       	movw	r22, r2
    1b72:	a2 01       	movw	r20, r4
    1b74:	91 01       	movw	r18, r2
    1b76:	0e 94 90 20 	call	0x4120	; 0x4120 <__unordsf2>
    1b7a:	88 23       	and	r24, r24
    1b7c:	59 f0       	breq	.+22     	; 0x1b94 <getAngle3+0x8e0>
            values[i] = DBL_MAX;
    1b7e:	8f ef       	ldi	r24, 0xFF	; 255
    1b80:	9f ef       	ldi	r25, 0xFF	; 255
    1b82:	af e7       	ldi	r26, 0x7F	; 127
    1b84:	bf e7       	ldi	r27, 0x7F	; 127
    1b86:	ed a9       	ldd	r30, Y+53	; 0x35
    1b88:	fe a9       	ldd	r31, Y+54	; 0x36
    1b8a:	80 83       	st	Z, r24
    1b8c:	91 83       	std	Z+1, r25	; 0x01
    1b8e:	a2 83       	std	Z+2, r26	; 0x02
    1b90:	b3 83       	std	Z+3, r27	; 0x03
    1b92:	86 c0       	rjmp	.+268    	; 0x1ca0 <getAngle3+0x9ec>
        else
            values[i] = fabs(pow(p.x + (10 - 4) / (2 * sqrt(3)) + 5 *
    1b94:	c2 01       	movw	r24, r4
    1b96:	b1 01       	movw	r22, r2
    1b98:	0e 94 ce 1d 	call	0x3b9c	; 0x3b9c <cos>
    1b9c:	5b 01       	movw	r10, r22
    1b9e:	6c 01       	movw	r12, r24
    1ba0:	25 96       	adiw	r28, 0x05	; 5
    1ba2:	6c ad       	ldd	r22, Y+60	; 0x3c
    1ba4:	7d ad       	ldd	r23, Y+61	; 0x3d
    1ba6:	8e ad       	ldd	r24, Y+62	; 0x3e
    1ba8:	9f ad       	ldd	r25, Y+63	; 0x3f
    1baa:	25 97       	sbiw	r28, 0x05	; 5
    1bac:	28 ed       	ldi	r18, 0xD8	; 216
    1bae:	33 eb       	ldi	r19, 0xB3	; 179
    1bb0:	4d ed       	ldi	r20, 0xDD	; 221
    1bb2:	5f e3       	ldi	r21, 0x3F	; 63
    1bb4:	0e 94 66 1d 	call	0x3acc	; 0x3acc <__addsf3>
    1bb8:	7b 01       	movw	r14, r22
    1bba:	8c 01       	movw	r16, r24
    1bbc:	c6 01       	movw	r24, r12
    1bbe:	b5 01       	movw	r22, r10
    1bc0:	20 e0       	ldi	r18, 0x00	; 0
    1bc2:	30 e0       	ldi	r19, 0x00	; 0
    1bc4:	40 ea       	ldi	r20, 0xA0	; 160
    1bc6:	50 e4       	ldi	r21, 0x40	; 64
    1bc8:	0e 94 99 1f 	call	0x3f32	; 0x3f32 <__mulsf3>
    1bcc:	20 e0       	ldi	r18, 0x00	; 0
    1bce:	30 e0       	ldi	r19, 0x00	; 0
    1bd0:	40 e0       	ldi	r20, 0x00	; 0
    1bd2:	5f e3       	ldi	r21, 0x3F	; 63
    1bd4:	0e 94 99 1f 	call	0x3f32	; 0x3f32 <__mulsf3>
    1bd8:	9b 01       	movw	r18, r22
    1bda:	ac 01       	movw	r20, r24
    1bdc:	c8 01       	movw	r24, r16
    1bde:	b7 01       	movw	r22, r14
    1be0:	0e 94 66 1d 	call	0x3acc	; 0x3acc <__addsf3>
    1be4:	9b 01       	movw	r18, r22
    1be6:	ac 01       	movw	r20, r24
    1be8:	0e 94 99 1f 	call	0x3f32	; 0x3f32 <__mulsf3>
    1bec:	66 2e       	mov	r6, r22
    1bee:	77 2e       	mov	r7, r23
    1bf0:	88 2e       	mov	r8, r24
    1bf2:	99 2e       	mov	r9, r25
    1bf4:	c6 01       	movw	r24, r12
    1bf6:	b5 01       	movw	r22, r10
    1bf8:	26 e6       	ldi	r18, 0x66	; 102
    1bfa:	30 e9       	ldi	r19, 0x90	; 144
    1bfc:	4a e0       	ldi	r20, 0x0A	; 10
    1bfe:	51 e4       	ldi	r21, 0x41	; 65
    1c00:	0e 94 99 1f 	call	0x3f32	; 0x3f32 <__mulsf3>
    1c04:	20 e0       	ldi	r18, 0x00	; 0
    1c06:	30 e0       	ldi	r19, 0x00	; 0
    1c08:	40 ec       	ldi	r20, 0xC0	; 192
    1c0a:	50 e4       	ldi	r21, 0x40	; 64
    1c0c:	0e 94 66 1d 	call	0x3acc	; 0x3acc <__addsf3>
    1c10:	20 e0       	ldi	r18, 0x00	; 0
    1c12:	30 e0       	ldi	r19, 0x00	; 0
    1c14:	40 e0       	ldi	r20, 0x00	; 0
    1c16:	5f e3       	ldi	r21, 0x3F	; 63
    1c18:	0e 94 99 1f 	call	0x3f32	; 0x3f32 <__mulsf3>
    1c1c:	21 96       	adiw	r28, 0x01	; 1
    1c1e:	2c ad       	ldd	r18, Y+60	; 0x3c
    1c20:	3d ad       	ldd	r19, Y+61	; 0x3d
    1c22:	4e ad       	ldd	r20, Y+62	; 0x3e
    1c24:	5f ad       	ldd	r21, Y+63	; 0x3f
    1c26:	21 97       	sbiw	r28, 0x01	; 1
    1c28:	0e 94 66 1d 	call	0x3acc	; 0x3acc <__addsf3>
    1c2c:	9b 01       	movw	r18, r22
    1c2e:	ac 01       	movw	r20, r24
    1c30:	0e 94 99 1f 	call	0x3f32	; 0x3f32 <__mulsf3>
    1c34:	a6 2e       	mov	r10, r22
    1c36:	b7 2e       	mov	r11, r23
    1c38:	c8 2e       	mov	r12, r24
    1c3a:	d9 2e       	mov	r13, r25
    1c3c:	c2 01       	movw	r24, r4
    1c3e:	b1 01       	movw	r22, r2
    1c40:	0e 94 48 20 	call	0x4090	; 0x4090 <sin>
    1c44:	20 e0       	ldi	r18, 0x00	; 0
    1c46:	30 e0       	ldi	r19, 0x00	; 0
    1c48:	40 ea       	ldi	r20, 0xA0	; 160
    1c4a:	50 ec       	ldi	r21, 0xC0	; 192
    1c4c:	0e 94 99 1f 	call	0x3f32	; 0x3f32 <__mulsf3>
    1c50:	9b 01       	movw	r18, r22
    1c52:	ac 01       	movw	r20, r24
    1c54:	69 ad       	ldd	r22, Y+57	; 0x39
    1c56:	7a ad       	ldd	r23, Y+58	; 0x3a
    1c58:	8b ad       	ldd	r24, Y+59	; 0x3b
    1c5a:	9c ad       	ldd	r25, Y+60	; 0x3c
    1c5c:	0e 94 66 1d 	call	0x3acc	; 0x3acc <__addsf3>
    1c60:	9b 01       	movw	r18, r22
    1c62:	ac 01       	movw	r20, r24
    1c64:	0e 94 99 1f 	call	0x3f32	; 0x3f32 <__mulsf3>
    1c68:	e6 2e       	mov	r14, r22
    1c6a:	f7 2e       	mov	r15, r23
    1c6c:	08 2f       	mov	r16, r24
    1c6e:	19 2f       	mov	r17, r25
    1c70:	c4 01       	movw	r24, r8
    1c72:	b3 01       	movw	r22, r6
    1c74:	a6 01       	movw	r20, r12
    1c76:	95 01       	movw	r18, r10
    1c78:	0e 94 66 1d 	call	0x3acc	; 0x3acc <__addsf3>
    1c7c:	a8 01       	movw	r20, r16
    1c7e:	97 01       	movw	r18, r14
    1c80:	0e 94 66 1d 	call	0x3acc	; 0x3acc <__addsf3>
    1c84:	20 e0       	ldi	r18, 0x00	; 0
    1c86:	30 e0       	ldi	r19, 0x00	; 0
    1c88:	40 e1       	ldi	r20, 0x10	; 16
    1c8a:	53 e4       	ldi	r21, 0x43	; 67
    1c8c:	0e 94 65 1d 	call	0x3aca	; 0x3aca <__subsf3>
    1c90:	9f 77       	andi	r25, 0x7F	; 127
    1c92:	ad a9       	ldd	r26, Y+53	; 0x35
    1c94:	be a9       	ldd	r27, Y+54	; 0x36
    1c96:	6d 93       	st	X+, r22
    1c98:	7d 93       	st	X+, r23
    1c9a:	8d 93       	st	X+, r24
    1c9c:	9c 93       	st	X, r25
    1c9e:	13 97       	sbiw	r26, 0x03	; 3
    1ca0:	ef a9       	ldd	r30, Y+55	; 0x37
    1ca2:	f8 ad       	ldd	r31, Y+56	; 0x38
    1ca4:	34 96       	adiw	r30, 0x04	; 4
    1ca6:	f8 af       	std	Y+56, r31	; 0x38
    1ca8:	ef ab       	std	Y+55, r30	; 0x37
    1caa:	2d a9       	ldd	r18, Y+53	; 0x35
    1cac:	3e a9       	ldd	r19, Y+54	; 0x36
    1cae:	2c 5f       	subi	r18, 0xFC	; 252
    1cb0:	3f 4f       	sbci	r19, 0xFF	; 255
    1cb2:	3e ab       	std	Y+54, r19	; 0x36
    1cb4:	2d ab       	std	Y+53, r18	; 0x35
    }
    
        /* REMOVE INVALID SOLUTIONS */
    double values [4]; /* One val for each option; pick 2 smallest. */
    int i; /* Iterate over options. */
    for (i = 0; i < 4; i++)
    1cb6:	e3 96       	adiw	r28, 0x33	; 51
    1cb8:	8e ad       	ldd	r24, Y+62	; 0x3e
    1cba:	9f ad       	ldd	r25, Y+63	; 0x3f
    1cbc:	e3 97       	sbiw	r28, 0x33	; 51
    1cbe:	e8 17       	cp	r30, r24
    1cc0:	f9 07       	cpc	r31, r25
    1cc2:	09 f0       	breq	.+2      	; 0x1cc6 <getAngle3+0xa12>
    1cc4:	4e cf       	rjmp	.-356    	; 0x1b62 <getAngle3+0x8ae>
                        sqrt(3) * cos(options[i])) / 2.0, 2) + pow(p.z - 5 *
                        sin(options[i]), 2) - 144);
        /* Above expression comes from original kinematics equation. */
    }
    /* Find desired indices of 'options'. */
    int ind1 = minInd1(values, sizeof(values) / sizeof(values[0]));
    1cc6:	8e 01       	movw	r16, r28
    1cc8:	0f 5e       	subi	r16, 0xEF	; 239
    1cca:	1f 4f       	sbci	r17, 0xFF	; 255
    1ccc:	c8 01       	movw	r24, r16
    1cce:	64 e0       	ldi	r22, 0x04	; 4
    1cd0:	70 e0       	ldi	r23, 0x00	; 0
    1cd2:	5d d9       	rcall	.-3398   	; 0xf8e <minInd1>
    1cd4:	7c 01       	movw	r14, r24
    int ind2 = minInd2(values, sizeof(values) / sizeof(values[0]));
    1cd6:	c8 01       	movw	r24, r16
    1cd8:	64 e0       	ldi	r22, 0x04	; 4
    1cda:	70 e0       	ldi	r23, 0x00	; 0
    1cdc:	cd d9       	rcall	.-3174   	; 0x1078 <minInd2>
    1cde:	bc 01       	movw	r22, r24
    /* Pick the two closest options to the original equation. */
    double viableOptions [2];
    viableOptions[0] = (ind1 == -1) ? NAN : options[ind1];
    1ce0:	9f ef       	ldi	r25, 0xFF	; 255
    1ce2:	e9 16       	cp	r14, r25
    1ce4:	9f ef       	ldi	r25, 0xFF	; 255
    1ce6:	f9 06       	cpc	r15, r25
    1ce8:	29 f4       	brne	.+10     	; 0x1cf4 <getAngle3+0xa40>
    1cea:	20 e0       	ldi	r18, 0x00	; 0
    1cec:	30 e0       	ldi	r19, 0x00	; 0
    1cee:	40 ec       	ldi	r20, 0xC0	; 192
    1cf0:	5f e7       	ldi	r21, 0x7F	; 127
    1cf2:	0c c0       	rjmp	.+24     	; 0x1d0c <getAngle3+0xa58>
    1cf4:	c7 01       	movw	r24, r14
    1cf6:	88 0f       	add	r24, r24
    1cf8:	99 1f       	adc	r25, r25
    1cfa:	88 0f       	add	r24, r24
    1cfc:	99 1f       	adc	r25, r25
    1cfe:	fe 01       	movw	r30, r28
    1d00:	e8 0f       	add	r30, r24
    1d02:	f9 1f       	adc	r31, r25
    1d04:	21 81       	ldd	r18, Z+1	; 0x01
    1d06:	32 81       	ldd	r19, Z+2	; 0x02
    1d08:	43 81       	ldd	r20, Z+3	; 0x03
    1d0a:	54 81       	ldd	r21, Z+4	; 0x04
    viableOptions[1] = (ind2 == -1) ? NAN : options[ind2];
    1d0c:	af ef       	ldi	r26, 0xFF	; 255
    1d0e:	6f 3f       	cpi	r22, 0xFF	; 255
    1d10:	7a 07       	cpc	r23, r26
    1d12:	29 f4       	brne	.+10     	; 0x1d1e <getAngle3+0xa6a>
    1d14:	80 e0       	ldi	r24, 0x00	; 0
    1d16:	90 e0       	ldi	r25, 0x00	; 0
    1d18:	a0 ec       	ldi	r26, 0xC0	; 192
    1d1a:	bf e7       	ldi	r27, 0x7F	; 127
    1d1c:	0c c0       	rjmp	.+24     	; 0x1d36 <getAngle3+0xa82>
    1d1e:	cb 01       	movw	r24, r22
    1d20:	88 0f       	add	r24, r24
    1d22:	99 1f       	adc	r25, r25
    1d24:	88 0f       	add	r24, r24
    1d26:	99 1f       	adc	r25, r25
    1d28:	fe 01       	movw	r30, r28
    1d2a:	e8 0f       	add	r30, r24
    1d2c:	f9 1f       	adc	r31, r25
    1d2e:	81 81       	ldd	r24, Z+1	; 0x01
    1d30:	92 81       	ldd	r25, Z+2	; 0x02
    1d32:	a3 81       	ldd	r26, Z+3	; 0x03
    1d34:	b4 81       	ldd	r27, Z+4	; 0x04
    /* Find desired indices of 'options'. */
    int ind1 = minInd1(values, sizeof(values) / sizeof(values[0]));
    int ind2 = minInd2(values, sizeof(values) / sizeof(values[0]));
    /* Pick the two closest options to the original equation. */
    double viableOptions [2];
    viableOptions[0] = (ind1 == -1) ? NAN : options[ind1];
    1d36:	29 a3       	std	Y+33, r18	; 0x21
    1d38:	3a a3       	std	Y+34, r19	; 0x22
    1d3a:	4b a3       	std	Y+35, r20	; 0x23
    1d3c:	5c a3       	std	Y+36, r21	; 0x24
    viableOptions[1] = (ind2 == -1) ? NAN : options[ind2];
    1d3e:	8d a3       	std	Y+37, r24	; 0x25
    1d40:	9e a3       	std	Y+38, r25	; 0x26
    1d42:	af a3       	std	Y+39, r26	; 0x27
    1d44:	b8 a7       	std	Y+40, r27	; 0x28
    /* REMOVE EXTRANEOUS SOLUTION + CONVERT ANGLE*/
    return modAngle(removeExtraneous(viableOptions));
    1d46:	ce 01       	movw	r24, r28
    1d48:	81 96       	adiw	r24, 0x21	; 33
    1d4a:	5b d8       	rcall	.-3914   	; 0xe02 <removeExtraneous>
    1d4c:	ed d8       	rcall	.-3622   	; 0xf28 <modAngle>
}
    1d4e:	ce 58       	subi	r28, 0x8E	; 142
    1d50:	df 4f       	sbci	r29, 0xFF	; 255
    1d52:	0f b6       	in	r0, 0x3f	; 63
    1d54:	f8 94       	cli
    1d56:	de bf       	out	0x3e, r29	; 62
    1d58:	0f be       	out	0x3f, r0	; 63
    1d5a:	cd bf       	out	0x3d, r28	; 61
    1d5c:	cf 91       	pop	r28
    1d5e:	df 91       	pop	r29
    1d60:	1f 91       	pop	r17
    1d62:	0f 91       	pop	r16
    1d64:	ff 90       	pop	r15
    1d66:	ef 90       	pop	r14
    1d68:	df 90       	pop	r13
    1d6a:	cf 90       	pop	r12
    1d6c:	bf 90       	pop	r11
    1d6e:	af 90       	pop	r10
    1d70:	9f 90       	pop	r9
    1d72:	8f 90       	pop	r8
    1d74:	7f 90       	pop	r7
    1d76:	6f 90       	pop	r6
    1d78:	5f 90       	pop	r5
    1d7a:	4f 90       	pop	r4
    1d7c:	3f 90       	pop	r3
    1d7e:	2f 90       	pop	r2
    1d80:	08 95       	ret

00001d82 <getAngle2>:
/**
 * Returns the required angle of servo actuator 2 to get to a desired point 'p'
 * in degrees and servo coordinates. If no solution exists, returns NAN.
 */
double getAngle2(struct point p)
{
    1d82:	2f 92       	push	r2
    1d84:	3f 92       	push	r3
    1d86:	4f 92       	push	r4
    1d88:	5f 92       	push	r5
    1d8a:	6f 92       	push	r6
    1d8c:	7f 92       	push	r7
    1d8e:	8f 92       	push	r8
    1d90:	9f 92       	push	r9
    1d92:	af 92       	push	r10
    1d94:	bf 92       	push	r11
    1d96:	cf 92       	push	r12
    1d98:	df 92       	push	r13
    1d9a:	ef 92       	push	r14
    1d9c:	ff 92       	push	r15
    1d9e:	0f 93       	push	r16
    1da0:	1f 93       	push	r17
    1da2:	df 93       	push	r29
    1da4:	cf 93       	push	r28
    1da6:	cd b7       	in	r28, 0x3d	; 61
    1da8:	de b7       	in	r29, 0x3e	; 62
    1daa:	ce 56       	subi	r28, 0x6E	; 110
    1dac:	d0 40       	sbci	r29, 0x00	; 0
    1dae:	0f b6       	in	r0, 0x3f	; 63
    1db0:	f8 94       	cli
    1db2:	de bf       	out	0x3e, r29	; 62
    1db4:	0f be       	out	0x3f, r0	; 63
    1db6:	cd bf       	out	0x3d, r28	; 61
    1db8:	e9 a6       	std	Y+41, r14	; 0x29
    1dba:	fa a6       	std	Y+42, r15	; 0x2a
    1dbc:	0b a7       	std	Y+43, r16	; 0x2b
    1dbe:	1c a7       	std	Y+44, r17	; 0x2c
    1dc0:	2d a7       	std	Y+45, r18	; 0x2d
    1dc2:	3e a7       	std	Y+46, r19	; 0x2e
    1dc4:	4f a7       	std	Y+47, r20	; 0x2f
    1dc6:	58 ab       	std	Y+48, r21	; 0x30
    1dc8:	69 ab       	std	Y+49, r22	; 0x31
    1dca:	7a ab       	std	Y+50, r23	; 0x32
    1dcc:	8b ab       	std	Y+51, r24	; 0x33
    1dce:	9c ab       	std	Y+52, r25	; 0x34
    1dd0:	89 a5       	ldd	r24, Y+41	; 0x29
    1dd2:	9a a5       	ldd	r25, Y+42	; 0x2a
    1dd4:	ab a5       	ldd	r26, Y+43	; 0x2b
    1dd6:	bc a5       	ldd	r27, Y+44	; 0x2c
    1dd8:	25 96       	adiw	r28, 0x05	; 5
    1dda:	8c af       	std	Y+60, r24	; 0x3c
    1ddc:	9d af       	std	Y+61, r25	; 0x3d
    1dde:	ae af       	std	Y+62, r26	; 0x3e
    1de0:	bf af       	std	Y+63, r27	; 0x3f
    1de2:	25 97       	sbiw	r28, 0x05	; 5
    1de4:	8d a5       	ldd	r24, Y+45	; 0x2d
    1de6:	9e a5       	ldd	r25, Y+46	; 0x2e
    1de8:	af a5       	ldd	r26, Y+47	; 0x2f
    1dea:	b8 a9       	ldd	r27, Y+48	; 0x30
    1dec:	21 96       	adiw	r28, 0x01	; 1
    1dee:	8c af       	std	Y+60, r24	; 0x3c
    1df0:	9d af       	std	Y+61, r25	; 0x3d
    1df2:	ae af       	std	Y+62, r26	; 0x3e
    1df4:	bf af       	std	Y+63, r27	; 0x3f
    1df6:	21 97       	sbiw	r28, 0x01	; 1
    1df8:	89 a9       	ldd	r24, Y+49	; 0x31
    1dfa:	9a a9       	ldd	r25, Y+50	; 0x32
    1dfc:	ab a9       	ldd	r26, Y+51	; 0x33
    1dfe:	bc a9       	ldd	r27, Y+52	; 0x34
    1e00:	89 af       	std	Y+57, r24	; 0x39
    1e02:	9a af       	std	Y+58, r25	; 0x3a
    1e04:	ab af       	std	Y+59, r26	; 0x3b
    1e06:	bc af       	std	Y+60, r27	; 0x3c
                    + pow(p.y, 2) * (-253 + 2 *
                    pow(p.z, 2)) + pow(p.x, 2) * (-227 - 12 * p.y + 2 *
                    pow(p.y, 2) + 2 * pow(p.z, 2)) + 2 * sqrt(3) * p.x * (-314 +
                    13 * p.y + 2 * pow(p.y, 2) + 2 * pow(p.z, 2)))))/(5 * (48 +
                    pow(p.x, 2) - 2 * sqrt(3) * p.x * (-4 + p.y) - 24 * p.y + 3
                    * pow(p.y, 2) + 4 * pow(p.z, 2)));
    1e08:	25 96       	adiw	r28, 0x05	; 5
    1e0a:	6c ad       	ldd	r22, Y+60	; 0x3c
    1e0c:	7d ad       	ldd	r23, Y+61	; 0x3d
    1e0e:	8e ad       	ldd	r24, Y+62	; 0x3e
    1e10:	9f ad       	ldd	r25, Y+63	; 0x3f
    1e12:	25 97       	sbiw	r28, 0x05	; 5
    1e14:	20 e0       	ldi	r18, 0x00	; 0
    1e16:	30 e0       	ldi	r19, 0x00	; 0
    1e18:	40 e4       	ldi	r20, 0x40	; 64
    1e1a:	50 e4       	ldi	r21, 0x40	; 64
    1e1c:	0e 94 fc 1f 	call	0x3ff8	; 0x3ff8 <pow>
    1e20:	6e 96       	adiw	r28, 0x1e	; 30
    1e22:	6f af       	std	Y+63, r22	; 0x3f
    1e24:	6e 97       	sbiw	r28, 0x1e	; 30
    1e26:	6f 96       	adiw	r28, 0x1f	; 31
    1e28:	7f af       	std	Y+63, r23	; 0x3f
    1e2a:	6f 97       	sbiw	r28, 0x1f	; 31
    1e2c:	a0 96       	adiw	r28, 0x20	; 32
    1e2e:	8f af       	std	Y+63, r24	; 0x3f
    1e30:	a0 97       	sbiw	r28, 0x20	; 32
    1e32:	a1 96       	adiw	r28, 0x21	; 33
    1e34:	9f af       	std	Y+63, r25	; 0x3f
    1e36:	a1 97       	sbiw	r28, 0x21	; 33
    1e38:	25 96       	adiw	r28, 0x05	; 5
    1e3a:	6c ad       	ldd	r22, Y+60	; 0x3c
    1e3c:	7d ad       	ldd	r23, Y+61	; 0x3d
    1e3e:	8e ad       	ldd	r24, Y+62	; 0x3e
    1e40:	9f ad       	ldd	r25, Y+63	; 0x3f
    1e42:	25 97       	sbiw	r28, 0x05	; 5
    1e44:	9b 01       	movw	r18, r22
    1e46:	ac 01       	movw	r20, r24
    1e48:	0e 94 99 1f 	call	0x3f32	; 0x3f32 <__mulsf3>
    1e4c:	a2 96       	adiw	r28, 0x22	; 34
    1e4e:	6f af       	std	Y+63, r22	; 0x3f
    1e50:	a2 97       	sbiw	r28, 0x22	; 34
    1e52:	a3 96       	adiw	r28, 0x23	; 35
    1e54:	7f af       	std	Y+63, r23	; 0x3f
    1e56:	a3 97       	sbiw	r28, 0x23	; 35
    1e58:	a4 96       	adiw	r28, 0x24	; 36
    1e5a:	8f af       	std	Y+63, r24	; 0x3f
    1e5c:	a4 97       	sbiw	r28, 0x24	; 36
    1e5e:	a5 96       	adiw	r28, 0x25	; 37
    1e60:	9f af       	std	Y+63, r25	; 0x3f
    1e62:	a5 97       	sbiw	r28, 0x25	; 37
    1e64:	21 96       	adiw	r28, 0x01	; 1
    1e66:	6c ad       	ldd	r22, Y+60	; 0x3c
    1e68:	7d ad       	ldd	r23, Y+61	; 0x3d
    1e6a:	8e ad       	ldd	r24, Y+62	; 0x3e
    1e6c:	9f ad       	ldd	r25, Y+63	; 0x3f
    1e6e:	21 97       	sbiw	r28, 0x01	; 1
    1e70:	9b 01       	movw	r18, r22
    1e72:	ac 01       	movw	r20, r24
    1e74:	0e 94 99 1f 	call	0x3f32	; 0x3f32 <__mulsf3>
    1e78:	a6 96       	adiw	r28, 0x26	; 38
    1e7a:	6f af       	std	Y+63, r22	; 0x3f
    1e7c:	a6 97       	sbiw	r28, 0x26	; 38
    1e7e:	a7 96       	adiw	r28, 0x27	; 39
    1e80:	7f af       	std	Y+63, r23	; 0x3f
    1e82:	a7 97       	sbiw	r28, 0x27	; 39
    1e84:	a8 96       	adiw	r28, 0x28	; 40
    1e86:	8f af       	std	Y+63, r24	; 0x3f
    1e88:	a8 97       	sbiw	r28, 0x28	; 40
    1e8a:	a9 96       	adiw	r28, 0x29	; 41
    1e8c:	9f af       	std	Y+63, r25	; 0x3f
    1e8e:	a9 97       	sbiw	r28, 0x29	; 41
    1e90:	21 96       	adiw	r28, 0x01	; 1
    1e92:	6c ad       	ldd	r22, Y+60	; 0x3c
    1e94:	7d ad       	ldd	r23, Y+61	; 0x3d
    1e96:	8e ad       	ldd	r24, Y+62	; 0x3e
    1e98:	9f ad       	ldd	r25, Y+63	; 0x3f
    1e9a:	21 97       	sbiw	r28, 0x01	; 1
    1e9c:	20 e0       	ldi	r18, 0x00	; 0
    1e9e:	30 e0       	ldi	r19, 0x00	; 0
    1ea0:	40 e4       	ldi	r20, 0x40	; 64
    1ea2:	50 e4       	ldi	r21, 0x40	; 64
    1ea4:	0e 94 fc 1f 	call	0x3ff8	; 0x3ff8 <pow>
    1ea8:	aa 96       	adiw	r28, 0x2a	; 42
    1eaa:	6f af       	std	Y+63, r22	; 0x3f
    1eac:	aa 97       	sbiw	r28, 0x2a	; 42
    1eae:	ab 96       	adiw	r28, 0x2b	; 43
    1eb0:	7f af       	std	Y+63, r23	; 0x3f
    1eb2:	ab 97       	sbiw	r28, 0x2b	; 43
    1eb4:	ac 96       	adiw	r28, 0x2c	; 44
    1eb6:	8f af       	std	Y+63, r24	; 0x3f
    1eb8:	ac 97       	sbiw	r28, 0x2c	; 44
    1eba:	ad 96       	adiw	r28, 0x2d	; 45
    1ebc:	9f af       	std	Y+63, r25	; 0x3f
    1ebe:	ad 97       	sbiw	r28, 0x2d	; 45
    1ec0:	69 ad       	ldd	r22, Y+57	; 0x39
    1ec2:	7a ad       	ldd	r23, Y+58	; 0x3a
    1ec4:	8b ad       	ldd	r24, Y+59	; 0x3b
    1ec6:	9c ad       	ldd	r25, Y+60	; 0x3c
    1ec8:	9b 01       	movw	r18, r22
    1eca:	ac 01       	movw	r20, r24
    1ecc:	0e 94 99 1f 	call	0x3f32	; 0x3f32 <__mulsf3>
    1ed0:	26 2e       	mov	r2, r22
    1ed2:	37 2e       	mov	r3, r23
    1ed4:	48 2e       	mov	r4, r24
    1ed6:	59 2e       	mov	r5, r25
    1ed8:	29 96       	adiw	r28, 0x09	; 9
    1eda:	2c ae       	std	Y+60, r2	; 0x3c
    1edc:	3d ae       	std	Y+61, r3	; 0x3d
    1ede:	4e ae       	std	Y+62, r4	; 0x3e
    1ee0:	5f ae       	std	Y+63, r5	; 0x3f
    1ee2:	29 97       	sbiw	r28, 0x09	; 9
    1ee4:	21 96       	adiw	r28, 0x01	; 1
    1ee6:	6c ad       	ldd	r22, Y+60	; 0x3c
    1ee8:	7d ad       	ldd	r23, Y+61	; 0x3d
    1eea:	8e ad       	ldd	r24, Y+62	; 0x3e
    1eec:	9f ad       	ldd	r25, Y+63	; 0x3f
    1eee:	21 97       	sbiw	r28, 0x01	; 1
    1ef0:	20 e0       	ldi	r18, 0x00	; 0
    1ef2:	30 e0       	ldi	r19, 0x00	; 0
    1ef4:	40 e4       	ldi	r20, 0x40	; 64
    1ef6:	51 ec       	ldi	r21, 0xC1	; 193
    1ef8:	0e 94 99 1f 	call	0x3f32	; 0x3f32 <__mulsf3>
    1efc:	2d 96       	adiw	r28, 0x0d	; 13
    1efe:	6c af       	std	Y+60, r22	; 0x3c
    1f00:	7d af       	std	Y+61, r23	; 0x3d
    1f02:	8e af       	std	Y+62, r24	; 0x3e
    1f04:	9f af       	std	Y+63, r25	; 0x3f
    1f06:	2d 97       	sbiw	r28, 0x0d	; 13
    1f08:	a1 96       	adiw	r28, 0x21	; 33
    1f0a:	6c ad       	ldd	r22, Y+60	; 0x3c
    1f0c:	7d ad       	ldd	r23, Y+61	; 0x3d
    1f0e:	8e ad       	ldd	r24, Y+62	; 0x3e
    1f10:	9f ad       	ldd	r25, Y+63	; 0x3f
    1f12:	a1 97       	sbiw	r28, 0x21	; 33
    1f14:	26 e5       	ldi	r18, 0x56	; 86
    1f16:	34 e5       	ldi	r19, 0x54	; 84
    1f18:	49 e3       	ldi	r20, 0x39	; 57
    1f1a:	54 e4       	ldi	r21, 0x44	; 68
    1f1c:	0e 94 65 1d 	call	0x3aca	; 0x3aca <__subsf3>
    1f20:	5b 01       	movw	r10, r22
    1f22:	6c 01       	movw	r12, r24
    1f24:	a5 96       	adiw	r28, 0x25	; 37
    1f26:	6c ad       	ldd	r22, Y+60	; 0x3c
    1f28:	7d ad       	ldd	r23, Y+61	; 0x3d
    1f2a:	8e ad       	ldd	r24, Y+62	; 0x3e
    1f2c:	9f ad       	ldd	r25, Y+63	; 0x3f
    1f2e:	a5 97       	sbiw	r28, 0x25	; 37
    1f30:	27 ed       	ldi	r18, 0xD7	; 215
    1f32:	33 eb       	ldi	r19, 0xB3	; 179
    1f34:	4d ed       	ldi	r20, 0xDD	; 221
    1f36:	5f eb       	ldi	r21, 0xBF	; 191
    1f38:	0e 94 99 1f 	call	0x3f32	; 0x3f32 <__mulsf3>
    1f3c:	7b 01       	movw	r14, r22
    1f3e:	8c 01       	movw	r16, r24
    1f40:	21 96       	adiw	r28, 0x01	; 1
    1f42:	6c ad       	ldd	r22, Y+60	; 0x3c
    1f44:	7d ad       	ldd	r23, Y+61	; 0x3d
    1f46:	8e ad       	ldd	r24, Y+62	; 0x3e
    1f48:	9f ad       	ldd	r25, Y+63	; 0x3f
    1f4a:	21 97       	sbiw	r28, 0x01	; 1
    1f4c:	20 e0       	ldi	r18, 0x00	; 0
    1f4e:	30 e0       	ldi	r19, 0x00	; 0
    1f50:	40 ec       	ldi	r20, 0xC0	; 192
    1f52:	50 e4       	ldi	r21, 0x40	; 64
    1f54:	0e 94 65 1d 	call	0x3aca	; 0x3aca <__subsf3>
    1f58:	9b 01       	movw	r18, r22
    1f5a:	ac 01       	movw	r20, r24
    1f5c:	c8 01       	movw	r24, r16
    1f5e:	b7 01       	movw	r22, r14
    1f60:	0e 94 99 1f 	call	0x3f32	; 0x3f32 <__mulsf3>
    1f64:	9b 01       	movw	r18, r22
    1f66:	ac 01       	movw	r20, r24
    1f68:	c6 01       	movw	r24, r12
    1f6a:	b5 01       	movw	r22, r10
    1f6c:	0e 94 66 1d 	call	0x3acc	; 0x3acc <__addsf3>
    1f70:	7b 01       	movw	r14, r22
    1f72:	8c 01       	movw	r16, r24
    1f74:	21 96       	adiw	r28, 0x01	; 1
    1f76:	6c ad       	ldd	r22, Y+60	; 0x3c
    1f78:	7d ad       	ldd	r23, Y+61	; 0x3d
    1f7a:	8e ad       	ldd	r24, Y+62	; 0x3e
    1f7c:	9f ad       	ldd	r25, Y+63	; 0x3f
    1f7e:	21 97       	sbiw	r28, 0x01	; 1
    1f80:	2d e9       	ldi	r18, 0x9D	; 157
    1f82:	32 ec       	ldi	r19, 0xC2	; 194
    1f84:	4f e0       	ldi	r20, 0x0F	; 15
    1f86:	53 e4       	ldi	r21, 0x43	; 67
    1f88:	0e 94 99 1f 	call	0x3f32	; 0x3f32 <__mulsf3>
    1f8c:	9b 01       	movw	r18, r22
    1f8e:	ac 01       	movw	r20, r24
    1f90:	c8 01       	movw	r24, r16
    1f92:	b7 01       	movw	r22, r14
    1f94:	0e 94 66 1d 	call	0x3acc	; 0x3acc <__addsf3>
    1f98:	7b 01       	movw	r14, r22
    1f9a:	8c 01       	movw	r16, r24
    1f9c:	a9 96       	adiw	r28, 0x29	; 41
    1f9e:	6c ad       	ldd	r22, Y+60	; 0x3c
    1fa0:	7d ad       	ldd	r23, Y+61	; 0x3d
    1fa2:	8e ad       	ldd	r24, Y+62	; 0x3e
    1fa4:	9f ad       	ldd	r25, Y+63	; 0x3f
    1fa6:	a9 97       	sbiw	r28, 0x29	; 41
    1fa8:	26 e6       	ldi	r18, 0x66	; 102
    1faa:	30 e9       	ldi	r19, 0x90	; 144
    1fac:	4a e8       	ldi	r20, 0x8A	; 138
    1fae:	51 e4       	ldi	r21, 0x41	; 65
    1fb0:	0e 94 99 1f 	call	0x3f32	; 0x3f32 <__mulsf3>
    1fb4:	9b 01       	movw	r18, r22
    1fb6:	ac 01       	movw	r20, r24
    1fb8:	c8 01       	movw	r24, r16
    1fba:	b7 01       	movw	r22, r14
    1fbc:	0e 94 66 1d 	call	0x3acc	; 0x3acc <__addsf3>
    1fc0:	7b 01       	movw	r14, r22
    1fc2:	8c 01       	movw	r16, r24
    1fc4:	ad 96       	adiw	r28, 0x2d	; 45
    1fc6:	6c ad       	ldd	r22, Y+60	; 0x3c
    1fc8:	7d ad       	ldd	r23, Y+61	; 0x3d
    1fca:	8e ad       	ldd	r24, Y+62	; 0x3e
    1fcc:	9f ad       	ldd	r25, Y+63	; 0x3f
    1fce:	ad 97       	sbiw	r28, 0x2d	; 45
    1fd0:	27 ed       	ldi	r18, 0xD7	; 215
    1fd2:	33 eb       	ldi	r19, 0xB3	; 179
    1fd4:	4d ed       	ldi	r20, 0xDD	; 221
    1fd6:	5f eb       	ldi	r21, 0xBF	; 191
    1fd8:	0e 94 99 1f 	call	0x3f32	; 0x3f32 <__mulsf3>
    1fdc:	9b 01       	movw	r18, r22
    1fde:	ac 01       	movw	r20, r24
    1fe0:	c8 01       	movw	r24, r16
    1fe2:	b7 01       	movw	r22, r14
    1fe4:	0e 94 66 1d 	call	0x3acc	; 0x3acc <__addsf3>
    1fe8:	7b 01       	movw	r14, r22
    1fea:	8c 01       	movw	r16, r24
    1fec:	c2 01       	movw	r24, r4
    1fee:	b1 01       	movw	r22, r2
    1ff0:	27 ed       	ldi	r18, 0xD7	; 215
    1ff2:	33 eb       	ldi	r19, 0xB3	; 179
    1ff4:	4d ed       	ldi	r20, 0xDD	; 221
    1ff6:	50 e4       	ldi	r21, 0x40	; 64
    1ff8:	0e 94 99 1f 	call	0x3f32	; 0x3f32 <__mulsf3>
    1ffc:	9b 01       	movw	r18, r22
    1ffe:	ac 01       	movw	r20, r24
    2000:	c8 01       	movw	r24, r16
    2002:	b7 01       	movw	r22, r14
    2004:	0e 94 66 1d 	call	0x3acc	; 0x3acc <__addsf3>
    2008:	7b 01       	movw	r14, r22
    200a:	8c 01       	movw	r16, r24
    200c:	21 96       	adiw	r28, 0x01	; 1
    200e:	6c ad       	ldd	r22, Y+60	; 0x3c
    2010:	7d ad       	ldd	r23, Y+61	; 0x3d
    2012:	8e ad       	ldd	r24, Y+62	; 0x3e
    2014:	9f ad       	ldd	r25, Y+63	; 0x3f
    2016:	21 97       	sbiw	r28, 0x01	; 1
    2018:	27 ed       	ldi	r18, 0xD7	; 215
    201a:	33 eb       	ldi	r19, 0xB3	; 179
    201c:	4d ed       	ldi	r20, 0xDD	; 221
    201e:	5f eb       	ldi	r21, 0xBF	; 191
    2020:	0e 94 99 1f 	call	0x3f32	; 0x3f32 <__mulsf3>
    2024:	9b 01       	movw	r18, r22
    2026:	ac 01       	movw	r20, r24
    2028:	c2 01       	movw	r24, r4
    202a:	b1 01       	movw	r22, r2
    202c:	0e 94 99 1f 	call	0x3f32	; 0x3f32 <__mulsf3>
    2030:	9b 01       	movw	r18, r22
    2032:	ac 01       	movw	r20, r24
    2034:	c8 01       	movw	r24, r16
    2036:	b7 01       	movw	r22, r14
    2038:	0e 94 66 1d 	call	0x3acc	; 0x3acc <__addsf3>
    203c:	7b 01       	movw	r14, r22
    203e:	8c 01       	movw	r16, r24
    2040:	2d 96       	adiw	r28, 0x0d	; 13
    2042:	6c ad       	ldd	r22, Y+60	; 0x3c
    2044:	7d ad       	ldd	r23, Y+61	; 0x3d
    2046:	8e ad       	ldd	r24, Y+62	; 0x3e
    2048:	9f ad       	ldd	r25, Y+63	; 0x3f
    204a:	2d 97       	sbiw	r28, 0x0d	; 13
    204c:	20 e0       	ldi	r18, 0x00	; 0
    204e:	30 e0       	ldi	r19, 0x00	; 0
    2050:	46 ea       	ldi	r20, 0xA6	; 166
    2052:	52 e4       	ldi	r21, 0x42	; 66
    2054:	0e 94 65 1d 	call	0x3aca	; 0x3aca <__subsf3>
    2058:	9b 01       	movw	r18, r22
    205a:	ac 01       	movw	r20, r24
    205c:	a9 96       	adiw	r28, 0x29	; 41
    205e:	6c ad       	ldd	r22, Y+60	; 0x3c
    2060:	7d ad       	ldd	r23, Y+61	; 0x3d
    2062:	8e ad       	ldd	r24, Y+62	; 0x3e
    2064:	9f ad       	ldd	r25, Y+63	; 0x3f
    2066:	a9 97       	sbiw	r28, 0x29	; 41
    2068:	0e 94 66 1d 	call	0x3acc	; 0x3acc <__addsf3>
    206c:	9b 01       	movw	r18, r22
    206e:	ac 01       	movw	r20, r24
    2070:	c2 01       	movw	r24, r4
    2072:	b1 01       	movw	r22, r2
    2074:	0e 94 66 1d 	call	0x3acc	; 0x3acc <__addsf3>
    2078:	9b 01       	movw	r18, r22
    207a:	ac 01       	movw	r20, r24
    207c:	25 96       	adiw	r28, 0x05	; 5
    207e:	6c ad       	ldd	r22, Y+60	; 0x3c
    2080:	7d ad       	ldd	r23, Y+61	; 0x3d
    2082:	8e ad       	ldd	r24, Y+62	; 0x3e
    2084:	9f ad       	ldd	r25, Y+63	; 0x3f
    2086:	25 97       	sbiw	r28, 0x05	; 5
    2088:	0e 94 99 1f 	call	0x3f32	; 0x3f32 <__mulsf3>
    208c:	9b 01       	movw	r18, r22
    208e:	ac 01       	movw	r20, r24
    2090:	c8 01       	movw	r24, r16
    2092:	b7 01       	movw	r22, r14
    2094:	0e 94 66 1d 	call	0x3acc	; 0x3acc <__addsf3>
    2098:	61 96       	adiw	r28, 0x11	; 17
    209a:	6c af       	std	Y+60, r22	; 0x3c
    209c:	7d af       	std	Y+61, r23	; 0x3d
    209e:	8e af       	std	Y+62, r24	; 0x3e
    20a0:	9f af       	std	Y+63, r25	; 0x3f
    20a2:	61 97       	sbiw	r28, 0x11	; 17
    20a4:	25 96       	adiw	r28, 0x05	; 5
    20a6:	6c ad       	ldd	r22, Y+60	; 0x3c
    20a8:	7d ad       	ldd	r23, Y+61	; 0x3d
    20aa:	8e ad       	ldd	r24, Y+62	; 0x3e
    20ac:	9f ad       	ldd	r25, Y+63	; 0x3f
    20ae:	25 97       	sbiw	r28, 0x05	; 5
    20b0:	20 e0       	ldi	r18, 0x00	; 0
    20b2:	30 e0       	ldi	r19, 0x00	; 0
    20b4:	40 e8       	ldi	r20, 0x80	; 128
    20b6:	50 e4       	ldi	r21, 0x40	; 64
    20b8:	0e 94 fc 1f 	call	0x3ff8	; 0x3ff8 <pow>
    20bc:	e6 2e       	mov	r14, r22
    20be:	f7 2e       	mov	r15, r23
    20c0:	08 2f       	mov	r16, r24
    20c2:	19 2f       	mov	r17, r25
    20c4:	21 96       	adiw	r28, 0x01	; 1
    20c6:	6c ad       	ldd	r22, Y+60	; 0x3c
    20c8:	7d ad       	ldd	r23, Y+61	; 0x3d
    20ca:	8e ad       	ldd	r24, Y+62	; 0x3e
    20cc:	9f ad       	ldd	r25, Y+63	; 0x3f
    20ce:	21 97       	sbiw	r28, 0x01	; 1
    20d0:	20 e0       	ldi	r18, 0x00	; 0
    20d2:	30 e0       	ldi	r19, 0x00	; 0
    20d4:	40 e8       	ldi	r20, 0x80	; 128
    20d6:	50 e4       	ldi	r21, 0x40	; 64
    20d8:	0e 94 fc 1f 	call	0x3ff8	; 0x3ff8 <pow>
    20dc:	a6 2e       	mov	r10, r22
    20de:	b7 2e       	mov	r11, r23
    20e0:	c8 2e       	mov	r12, r24
    20e2:	d9 2e       	mov	r13, r25
    20e4:	69 ad       	ldd	r22, Y+57	; 0x39
    20e6:	7a ad       	ldd	r23, Y+58	; 0x3a
    20e8:	8b ad       	ldd	r24, Y+59	; 0x3b
    20ea:	9c ad       	ldd	r25, Y+60	; 0x3c
    20ec:	20 e0       	ldi	r18, 0x00	; 0
    20ee:	30 e0       	ldi	r19, 0x00	; 0
    20f0:	40 e8       	ldi	r20, 0x80	; 128
    20f2:	50 e4       	ldi	r21, 0x40	; 64
    20f4:	0e 94 fc 1f 	call	0x3ff8	; 0x3ff8 <pow>
    20f8:	66 2e       	mov	r6, r22
    20fa:	77 2e       	mov	r7, r23
    20fc:	88 2e       	mov	r8, r24
    20fe:	99 2e       	mov	r9, r25
    2100:	c2 01       	movw	r24, r4
    2102:	b1 01       	movw	r22, r2
    2104:	a2 01       	movw	r20, r4
    2106:	91 01       	movw	r18, r2
    2108:	0e 94 66 1d 	call	0x3acc	; 0x3acc <__addsf3>
    210c:	65 96       	adiw	r28, 0x15	; 21
    210e:	6c af       	std	Y+60, r22	; 0x3c
    2110:	7d af       	std	Y+61, r23	; 0x3d
    2112:	8e af       	std	Y+62, r24	; 0x3e
    2114:	9f af       	std	Y+63, r25	; 0x3f
    2116:	65 97       	sbiw	r28, 0x15	; 21
    2118:	a9 96       	adiw	r28, 0x29	; 41
    211a:	6c ad       	ldd	r22, Y+60	; 0x3c
    211c:	7d ad       	ldd	r23, Y+61	; 0x3d
    211e:	8e ad       	ldd	r24, Y+62	; 0x3e
    2120:	9f ad       	ldd	r25, Y+63	; 0x3f
    2122:	a9 97       	sbiw	r28, 0x29	; 41
    2124:	9b 01       	movw	r18, r22
    2126:	ac 01       	movw	r20, r24
    2128:	0e 94 66 1d 	call	0x3acc	; 0x3acc <__addsf3>
    212c:	69 96       	adiw	r28, 0x19	; 25
    212e:	6c af       	std	Y+60, r22	; 0x3c
    2130:	7d af       	std	Y+61, r23	; 0x3d
    2132:	8e af       	std	Y+62, r24	; 0x3e
    2134:	9f af       	std	Y+63, r25	; 0x3f
    2136:	69 97       	sbiw	r28, 0x19	; 25
    2138:	d2 01       	movw	r26, r4
    213a:	c1 01       	movw	r24, r2
    213c:	b0 58       	subi	r27, 0x80	; 128
    213e:	6d 96       	adiw	r28, 0x1d	; 29
    2140:	8c af       	std	Y+60, r24	; 0x3c
    2142:	9d af       	std	Y+61, r25	; 0x3d
    2144:	ae af       	std	Y+62, r26	; 0x3e
    2146:	bf af       	std	Y+63, r27	; 0x3f
    2148:	6d 97       	sbiw	r28, 0x1d	; 29
    214a:	a1 96       	adiw	r28, 0x21	; 33
    214c:	6c ad       	ldd	r22, Y+60	; 0x3c
    214e:	7d ad       	ldd	r23, Y+61	; 0x3d
    2150:	8e ad       	ldd	r24, Y+62	; 0x3e
    2152:	9f ad       	ldd	r25, Y+63	; 0x3f
    2154:	a1 97       	sbiw	r28, 0x21	; 33
    2156:	27 ed       	ldi	r18, 0xD7	; 215
    2158:	33 eb       	ldi	r19, 0xB3	; 179
    215a:	4d ed       	ldi	r20, 0xDD	; 221
    215c:	50 e4       	ldi	r21, 0x40	; 64
    215e:	0e 94 99 1f 	call	0x3f32	; 0x3f32 <__mulsf3>
    2162:	20 e0       	ldi	r18, 0x00	; 0
    2164:	34 e2       	ldi	r19, 0x24	; 36
    2166:	40 e2       	ldi	r20, 0x20	; 32
    2168:	56 e4       	ldi	r21, 0x46	; 70
    216a:	0e 94 66 1d 	call	0x3acc	; 0x3acc <__addsf3>
    216e:	a8 01       	movw	r20, r16
    2170:	97 01       	movw	r18, r14
    2172:	0e 94 66 1d 	call	0x3acc	; 0x3acc <__addsf3>
    2176:	7b 01       	movw	r14, r22
    2178:	8c 01       	movw	r16, r24
    217a:	ad 96       	adiw	r28, 0x2d	; 45
    217c:	6c ad       	ldd	r22, Y+60	; 0x3c
    217e:	7d ad       	ldd	r23, Y+61	; 0x3d
    2180:	8e ad       	ldd	r24, Y+62	; 0x3e
    2182:	9f ad       	ldd	r25, Y+63	; 0x3f
    2184:	ad 97       	sbiw	r28, 0x2d	; 45
    2186:	20 e0       	ldi	r18, 0x00	; 0
    2188:	30 e0       	ldi	r19, 0x00	; 0
    218a:	40 e4       	ldi	r20, 0x40	; 64
    218c:	51 ec       	ldi	r21, 0xC1	; 193
    218e:	0e 94 99 1f 	call	0x3f32	; 0x3f32 <__mulsf3>
    2192:	9b 01       	movw	r18, r22
    2194:	ac 01       	movw	r20, r24
    2196:	c8 01       	movw	r24, r16
    2198:	b7 01       	movw	r22, r14
    219a:	0e 94 66 1d 	call	0x3acc	; 0x3acc <__addsf3>
    219e:	a6 01       	movw	r20, r12
    21a0:	95 01       	movw	r18, r10
    21a2:	0e 94 66 1d 	call	0x3acc	; 0x3acc <__addsf3>
    21a6:	7b 01       	movw	r14, r22
    21a8:	8c 01       	movw	r16, r24
    21aa:	c2 01       	movw	r24, r4
    21ac:	b1 01       	movw	r22, r2
    21ae:	20 e0       	ldi	r18, 0x00	; 0
    21b0:	30 e0       	ldi	r19, 0x00	; 0
    21b2:	4d e9       	ldi	r20, 0x9D	; 157
    21b4:	53 ec       	ldi	r21, 0xC3	; 195
    21b6:	0e 94 99 1f 	call	0x3f32	; 0x3f32 <__mulsf3>
    21ba:	9b 01       	movw	r18, r22
    21bc:	ac 01       	movw	r20, r24
    21be:	c8 01       	movw	r24, r16
    21c0:	b7 01       	movw	r22, r14
    21c2:	0e 94 66 1d 	call	0x3acc	; 0x3acc <__addsf3>
    21c6:	a4 01       	movw	r20, r8
    21c8:	93 01       	movw	r18, r6
    21ca:	0e 94 66 1d 	call	0x3acc	; 0x3acc <__addsf3>
    21ce:	7b 01       	movw	r14, r22
    21d0:	8c 01       	movw	r16, r24
    21d2:	c2 01       	movw	r24, r4
    21d4:	b1 01       	movw	r22, r2
    21d6:	20 e0       	ldi	r18, 0x00	; 0
    21d8:	30 e0       	ldi	r19, 0x00	; 0
    21da:	4d e1       	ldi	r20, 0x1D	; 29
    21dc:	53 e4       	ldi	r21, 0x43	; 67
    21de:	0e 94 65 1d 	call	0x3aca	; 0x3aca <__subsf3>
    21e2:	9b 01       	movw	r18, r22
    21e4:	ac 01       	movw	r20, r24
    21e6:	2d 96       	adiw	r28, 0x0d	; 13
    21e8:	6c ad       	ldd	r22, Y+60	; 0x3c
    21ea:	7d ad       	ldd	r23, Y+61	; 0x3d
    21ec:	8e ad       	ldd	r24, Y+62	; 0x3e
    21ee:	9f ad       	ldd	r25, Y+63	; 0x3f
    21f0:	2d 97       	sbiw	r28, 0x0d	; 13
    21f2:	0e 94 99 1f 	call	0x3f32	; 0x3f32 <__mulsf3>
    21f6:	9b 01       	movw	r18, r22
    21f8:	ac 01       	movw	r20, r24
    21fa:	c8 01       	movw	r24, r16
    21fc:	b7 01       	movw	r22, r14
    21fe:	0e 94 66 1d 	call	0x3acc	; 0x3acc <__addsf3>
    2202:	7b 01       	movw	r14, r22
    2204:	8c 01       	movw	r16, r24
    2206:	65 96       	adiw	r28, 0x15	; 21
    2208:	6c ad       	ldd	r22, Y+60	; 0x3c
    220a:	7d ad       	ldd	r23, Y+61	; 0x3d
    220c:	8e ad       	ldd	r24, Y+62	; 0x3e
    220e:	9f ad       	ldd	r25, Y+63	; 0x3f
    2210:	65 97       	sbiw	r28, 0x15	; 21
    2212:	20 e0       	ldi	r18, 0x00	; 0
    2214:	30 e0       	ldi	r19, 0x00	; 0
    2216:	4d e7       	ldi	r20, 0x7D	; 125
    2218:	53 e4       	ldi	r21, 0x43	; 67
    221a:	0e 94 65 1d 	call	0x3aca	; 0x3aca <__subsf3>
    221e:	9b 01       	movw	r18, r22
    2220:	ac 01       	movw	r20, r24
    2222:	a9 96       	adiw	r28, 0x29	; 41
    2224:	6c ad       	ldd	r22, Y+60	; 0x3c
    2226:	7d ad       	ldd	r23, Y+61	; 0x3d
    2228:	8e ad       	ldd	r24, Y+62	; 0x3e
    222a:	9f ad       	ldd	r25, Y+63	; 0x3f
    222c:	a9 97       	sbiw	r28, 0x29	; 41
    222e:	0e 94 99 1f 	call	0x3f32	; 0x3f32 <__mulsf3>
    2232:	9b 01       	movw	r18, r22
    2234:	ac 01       	movw	r20, r24
    2236:	c8 01       	movw	r24, r16
    2238:	b7 01       	movw	r22, r14
    223a:	0e 94 66 1d 	call	0x3acc	; 0x3acc <__addsf3>
    223e:	7b 01       	movw	r14, r22
    2240:	8c 01       	movw	r16, r24
    2242:	2d 96       	adiw	r28, 0x0d	; 13
    2244:	6c ad       	ldd	r22, Y+60	; 0x3c
    2246:	7d ad       	ldd	r23, Y+61	; 0x3d
    2248:	8e ad       	ldd	r24, Y+62	; 0x3e
    224a:	9f ad       	ldd	r25, Y+63	; 0x3f
    224c:	2d 97       	sbiw	r28, 0x0d	; 13
    224e:	20 e0       	ldi	r18, 0x00	; 0
    2250:	30 e0       	ldi	r19, 0x00	; 0
    2252:	43 e6       	ldi	r20, 0x63	; 99
    2254:	53 e4       	ldi	r21, 0x43	; 67
    2256:	0e 94 65 1d 	call	0x3aca	; 0x3aca <__subsf3>
    225a:	69 96       	adiw	r28, 0x19	; 25
    225c:	2c ad       	ldd	r18, Y+60	; 0x3c
    225e:	3d ad       	ldd	r19, Y+61	; 0x3d
    2260:	4e ad       	ldd	r20, Y+62	; 0x3e
    2262:	5f ad       	ldd	r21, Y+63	; 0x3f
    2264:	69 97       	sbiw	r28, 0x19	; 25
    2266:	0e 94 66 1d 	call	0x3acc	; 0x3acc <__addsf3>
    226a:	9b 01       	movw	r18, r22
    226c:	ac 01       	movw	r20, r24
    226e:	65 96       	adiw	r28, 0x15	; 21
    2270:	6c ad       	ldd	r22, Y+60	; 0x3c
    2272:	7d ad       	ldd	r23, Y+61	; 0x3d
    2274:	8e ad       	ldd	r24, Y+62	; 0x3e
    2276:	9f ad       	ldd	r25, Y+63	; 0x3f
    2278:	65 97       	sbiw	r28, 0x15	; 21
    227a:	0e 94 66 1d 	call	0x3acc	; 0x3acc <__addsf3>
    227e:	9b 01       	movw	r18, r22
    2280:	ac 01       	movw	r20, r24
    2282:	a5 96       	adiw	r28, 0x25	; 37
    2284:	6c ad       	ldd	r22, Y+60	; 0x3c
    2286:	7d ad       	ldd	r23, Y+61	; 0x3d
    2288:	8e ad       	ldd	r24, Y+62	; 0x3e
    228a:	9f ad       	ldd	r25, Y+63	; 0x3f
    228c:	a5 97       	sbiw	r28, 0x25	; 37
    228e:	0e 94 99 1f 	call	0x3f32	; 0x3f32 <__mulsf3>
    2292:	9b 01       	movw	r18, r22
    2294:	ac 01       	movw	r20, r24
    2296:	c8 01       	movw	r24, r16
    2298:	b7 01       	movw	r22, r14
    229a:	0e 94 66 1d 	call	0x3acc	; 0x3acc <__addsf3>
    229e:	5b 01       	movw	r10, r22
    22a0:	6c 01       	movw	r12, r24
    22a2:	25 96       	adiw	r28, 0x05	; 5
    22a4:	6c ad       	ldd	r22, Y+60	; 0x3c
    22a6:	7d ad       	ldd	r23, Y+61	; 0x3d
    22a8:	8e ad       	ldd	r24, Y+62	; 0x3e
    22aa:	9f ad       	ldd	r25, Y+63	; 0x3f
    22ac:	25 97       	sbiw	r28, 0x05	; 5
    22ae:	27 ed       	ldi	r18, 0xD7	; 215
    22b0:	33 eb       	ldi	r19, 0xB3	; 179
    22b2:	4d e5       	ldi	r20, 0x5D	; 93
    22b4:	50 e4       	ldi	r21, 0x40	; 64
    22b6:	0e 94 99 1f 	call	0x3f32	; 0x3f32 <__mulsf3>
    22ba:	7b 01       	movw	r14, r22
    22bc:	8c 01       	movw	r16, r24
    22be:	21 96       	adiw	r28, 0x01	; 1
    22c0:	6c ad       	ldd	r22, Y+60	; 0x3c
    22c2:	7d ad       	ldd	r23, Y+61	; 0x3d
    22c4:	8e ad       	ldd	r24, Y+62	; 0x3e
    22c6:	9f ad       	ldd	r25, Y+63	; 0x3f
    22c8:	21 97       	sbiw	r28, 0x01	; 1
    22ca:	20 e0       	ldi	r18, 0x00	; 0
    22cc:	30 e0       	ldi	r19, 0x00	; 0
    22ce:	40 e5       	ldi	r20, 0x50	; 80
    22d0:	51 e4       	ldi	r21, 0x41	; 65
    22d2:	0e 94 99 1f 	call	0x3f32	; 0x3f32 <__mulsf3>
    22d6:	20 e0       	ldi	r18, 0x00	; 0
    22d8:	30 e0       	ldi	r19, 0x00	; 0
    22da:	4d e9       	ldi	r20, 0x9D	; 157
    22dc:	53 e4       	ldi	r21, 0x43	; 67
    22de:	0e 94 65 1d 	call	0x3aca	; 0x3aca <__subsf3>
    22e2:	9b 01       	movw	r18, r22
    22e4:	ac 01       	movw	r20, r24
    22e6:	69 96       	adiw	r28, 0x19	; 25
    22e8:	6c ad       	ldd	r22, Y+60	; 0x3c
    22ea:	7d ad       	ldd	r23, Y+61	; 0x3d
    22ec:	8e ad       	ldd	r24, Y+62	; 0x3e
    22ee:	9f ad       	ldd	r25, Y+63	; 0x3f
    22f0:	69 97       	sbiw	r28, 0x19	; 25
    22f2:	0e 94 66 1d 	call	0x3acc	; 0x3acc <__addsf3>
    22f6:	9b 01       	movw	r18, r22
    22f8:	ac 01       	movw	r20, r24
    22fa:	65 96       	adiw	r28, 0x15	; 21
    22fc:	6c ad       	ldd	r22, Y+60	; 0x3c
    22fe:	7d ad       	ldd	r23, Y+61	; 0x3d
    2300:	8e ad       	ldd	r24, Y+62	; 0x3e
    2302:	9f ad       	ldd	r25, Y+63	; 0x3f
    2304:	65 97       	sbiw	r28, 0x15	; 21
    2306:	0e 94 66 1d 	call	0x3acc	; 0x3acc <__addsf3>
    230a:	9b 01       	movw	r18, r22
    230c:	ac 01       	movw	r20, r24
    230e:	c8 01       	movw	r24, r16
    2310:	b7 01       	movw	r22, r14
    2312:	0e 94 99 1f 	call	0x3f32	; 0x3f32 <__mulsf3>
    2316:	9b 01       	movw	r18, r22
    2318:	ac 01       	movw	r20, r24
    231a:	c6 01       	movw	r24, r12
    231c:	b5 01       	movw	r22, r10
    231e:	0e 94 66 1d 	call	0x3acc	; 0x3acc <__addsf3>
    2322:	9b 01       	movw	r18, r22
    2324:	ac 01       	movw	r20, r24
    2326:	6d 96       	adiw	r28, 0x1d	; 29
    2328:	6c ad       	ldd	r22, Y+60	; 0x3c
    232a:	7d ad       	ldd	r23, Y+61	; 0x3d
    232c:	8e ad       	ldd	r24, Y+62	; 0x3e
    232e:	9f ad       	ldd	r25, Y+63	; 0x3f
    2330:	6d 97       	sbiw	r28, 0x1d	; 29
    2332:	0e 94 99 1f 	call	0x3f32	; 0x3f32 <__mulsf3>
    2336:	0e 94 52 20 	call	0x40a4	; 0x40a4 <sqrt>
    233a:	3b 01       	movw	r6, r22
    233c:	4c 01       	movw	r8, r24
    233e:	a5 96       	adiw	r28, 0x25	; 37
    2340:	6c ad       	ldd	r22, Y+60	; 0x3c
    2342:	7d ad       	ldd	r23, Y+61	; 0x3d
    2344:	8e ad       	ldd	r24, Y+62	; 0x3e
    2346:	9f ad       	ldd	r25, Y+63	; 0x3f
    2348:	a5 97       	sbiw	r28, 0x25	; 37
    234a:	20 e0       	ldi	r18, 0x00	; 0
    234c:	30 e0       	ldi	r19, 0x00	; 0
    234e:	40 e4       	ldi	r20, 0x40	; 64
    2350:	52 e4       	ldi	r21, 0x42	; 66
    2352:	0e 94 66 1d 	call	0x3acc	; 0x3acc <__addsf3>
    2356:	5b 01       	movw	r10, r22
    2358:	6c 01       	movw	r12, r24
    235a:	25 96       	adiw	r28, 0x05	; 5
    235c:	6c ad       	ldd	r22, Y+60	; 0x3c
    235e:	7d ad       	ldd	r23, Y+61	; 0x3d
    2360:	8e ad       	ldd	r24, Y+62	; 0x3e
    2362:	9f ad       	ldd	r25, Y+63	; 0x3f
    2364:	25 97       	sbiw	r28, 0x05	; 5
    2366:	27 ed       	ldi	r18, 0xD7	; 215
    2368:	33 eb       	ldi	r19, 0xB3	; 179
    236a:	4d e5       	ldi	r20, 0x5D	; 93
    236c:	50 ec       	ldi	r21, 0xC0	; 192
    236e:	0e 94 99 1f 	call	0x3f32	; 0x3f32 <__mulsf3>
    2372:	7b 01       	movw	r14, r22
    2374:	8c 01       	movw	r16, r24
    2376:	21 96       	adiw	r28, 0x01	; 1
    2378:	6c ad       	ldd	r22, Y+60	; 0x3c
    237a:	7d ad       	ldd	r23, Y+61	; 0x3d
    237c:	8e ad       	ldd	r24, Y+62	; 0x3e
    237e:	9f ad       	ldd	r25, Y+63	; 0x3f
    2380:	21 97       	sbiw	r28, 0x01	; 1
    2382:	20 e0       	ldi	r18, 0x00	; 0
    2384:	30 e0       	ldi	r19, 0x00	; 0
    2386:	40 e8       	ldi	r20, 0x80	; 128
    2388:	50 e4       	ldi	r21, 0x40	; 64
    238a:	0e 94 65 1d 	call	0x3aca	; 0x3aca <__subsf3>
    238e:	9b 01       	movw	r18, r22
    2390:	ac 01       	movw	r20, r24
    2392:	c8 01       	movw	r24, r16
    2394:	b7 01       	movw	r22, r14
    2396:	0e 94 99 1f 	call	0x3f32	; 0x3f32 <__mulsf3>
    239a:	9b 01       	movw	r18, r22
    239c:	ac 01       	movw	r20, r24
    239e:	c6 01       	movw	r24, r12
    23a0:	b5 01       	movw	r22, r10
    23a2:	0e 94 66 1d 	call	0x3acc	; 0x3acc <__addsf3>
    23a6:	7b 01       	movw	r14, r22
    23a8:	8c 01       	movw	r16, r24
    23aa:	21 96       	adiw	r28, 0x01	; 1
    23ac:	6c ad       	ldd	r22, Y+60	; 0x3c
    23ae:	7d ad       	ldd	r23, Y+61	; 0x3d
    23b0:	8e ad       	ldd	r24, Y+62	; 0x3e
    23b2:	9f ad       	ldd	r25, Y+63	; 0x3f
    23b4:	21 97       	sbiw	r28, 0x01	; 1
    23b6:	20 e0       	ldi	r18, 0x00	; 0
    23b8:	30 e0       	ldi	r19, 0x00	; 0
    23ba:	40 ec       	ldi	r20, 0xC0	; 192
    23bc:	51 ec       	ldi	r21, 0xC1	; 193
    23be:	0e 94 99 1f 	call	0x3f32	; 0x3f32 <__mulsf3>
    23c2:	9b 01       	movw	r18, r22
    23c4:	ac 01       	movw	r20, r24
    23c6:	c8 01       	movw	r24, r16
    23c8:	b7 01       	movw	r22, r14
    23ca:	0e 94 66 1d 	call	0x3acc	; 0x3acc <__addsf3>
    23ce:	7b 01       	movw	r14, r22
    23d0:	8c 01       	movw	r16, r24
    23d2:	a9 96       	adiw	r28, 0x29	; 41
    23d4:	6c ad       	ldd	r22, Y+60	; 0x3c
    23d6:	7d ad       	ldd	r23, Y+61	; 0x3d
    23d8:	8e ad       	ldd	r24, Y+62	; 0x3e
    23da:	9f ad       	ldd	r25, Y+63	; 0x3f
    23dc:	a9 97       	sbiw	r28, 0x29	; 41
    23de:	20 e0       	ldi	r18, 0x00	; 0
    23e0:	30 e0       	ldi	r19, 0x00	; 0
    23e2:	40 e4       	ldi	r20, 0x40	; 64
    23e4:	50 e4       	ldi	r21, 0x40	; 64
    23e6:	0e 94 99 1f 	call	0x3f32	; 0x3f32 <__mulsf3>
    23ea:	9b 01       	movw	r18, r22
    23ec:	ac 01       	movw	r20, r24
    23ee:	c8 01       	movw	r24, r16
    23f0:	b7 01       	movw	r22, r14
    23f2:	0e 94 66 1d 	call	0x3acc	; 0x3acc <__addsf3>
    23f6:	7b 01       	movw	r14, r22
    23f8:	8c 01       	movw	r16, r24
    23fa:	c2 01       	movw	r24, r4
    23fc:	b1 01       	movw	r22, r2
    23fe:	20 e0       	ldi	r18, 0x00	; 0
    2400:	30 e0       	ldi	r19, 0x00	; 0
    2402:	40 e8       	ldi	r20, 0x80	; 128
    2404:	50 e4       	ldi	r21, 0x40	; 64
    2406:	0e 94 99 1f 	call	0x3f32	; 0x3f32 <__mulsf3>
    240a:	9b 01       	movw	r18, r22
    240c:	ac 01       	movw	r20, r24
    240e:	c8 01       	movw	r24, r16
    2410:	b7 01       	movw	r22, r14
    2412:	0e 94 66 1d 	call	0x3acc	; 0x3acc <__addsf3>
    2416:	20 e0       	ldi	r18, 0x00	; 0
    2418:	30 e0       	ldi	r19, 0x00	; 0
    241a:	40 ea       	ldi	r20, 0xA0	; 160
    241c:	50 ec       	ldi	r21, 0xC0	; 192
    241e:	0e 94 99 1f 	call	0x3f32	; 0x3f32 <__mulsf3>
    2422:	7b 01       	movw	r14, r22
    2424:	8c 01       	movw	r16, r24
    2426:	c4 01       	movw	r24, r8
    2428:	b3 01       	movw	r22, r6
    242a:	a4 01       	movw	r20, r8
    242c:	93 01       	movw	r18, r6
    242e:	0e 94 66 1d 	call	0x3acc	; 0x3acc <__addsf3>
    2432:	9b 01       	movw	r18, r22
    2434:	ac 01       	movw	r20, r24
    2436:	61 96       	adiw	r28, 0x11	; 17
    2438:	6c ad       	ldd	r22, Y+60	; 0x3c
    243a:	7d ad       	ldd	r23, Y+61	; 0x3d
    243c:	8e ad       	ldd	r24, Y+62	; 0x3e
    243e:	9f ad       	ldd	r25, Y+63	; 0x3f
    2440:	61 97       	sbiw	r28, 0x11	; 17
    2442:	0e 94 66 1d 	call	0x3acc	; 0x3acc <__addsf3>
    2446:	a8 01       	movw	r20, r16
    2448:	97 01       	movw	r18, r14
    244a:	0e 94 d1 1d 	call	0x3ba2	; 0x3ba2 <__divsf3>
    244e:	1b 01       	movw	r2, r22
    2450:	2c 01       	movw	r4, r24
                    + pow(p.y, 2) * (-253 + 2 *
                    pow(p.z, 2)) + pow(p.x, 2) * (-227 - 12 * p.y + 2 *
                    pow(p.y, 2) + 2 * pow(p.z, 2)) + 2 * sqrt(3) * p.x * (-314 +
                    13 * p.y + 2 * pow(p.y, 2) + 2 * pow(p.z, 2)))))/(5 * (48 +
                    pow(p.x, 2) - 2 * sqrt(3) * p.x * (-4 + p.y) - 24 * p.y + 3
                    * pow(p.y, 2) + 4 * pow(p.z, 2)));
    2452:	c4 01       	movw	r24, r8
    2454:	b3 01       	movw	r22, r6
    2456:	20 e0       	ldi	r18, 0x00	; 0
    2458:	30 e0       	ldi	r19, 0x00	; 0
    245a:	40 e0       	ldi	r20, 0x00	; 0
    245c:	50 ec       	ldi	r21, 0xC0	; 192
    245e:	0e 94 99 1f 	call	0x3f32	; 0x3f32 <__mulsf3>
    2462:	9b 01       	movw	r18, r22
    2464:	ac 01       	movw	r20, r24
    2466:	61 96       	adiw	r28, 0x11	; 17
    2468:	6c ad       	ldd	r22, Y+60	; 0x3c
    246a:	7d ad       	ldd	r23, Y+61	; 0x3d
    246c:	8e ad       	ldd	r24, Y+62	; 0x3e
    246e:	9f ad       	ldd	r25, Y+63	; 0x3f
    2470:	61 97       	sbiw	r28, 0x11	; 17
    2472:	0e 94 66 1d 	call	0x3acc	; 0x3acc <__addsf3>
    2476:	a8 01       	movw	r20, r16
    2478:	97 01       	movw	r18, r14
    247a:	0e 94 d1 1d 	call	0x3ba2	; 0x3ba2 <__divsf3>
    247e:	7b 01       	movw	r14, r22
    2480:	8c 01       	movw	r16, r24

    if (fabs(arg1) > 1.0)
    2482:	c2 01       	movw	r24, r4
    2484:	b1 01       	movw	r22, r2
    2486:	9f 77       	andi	r25, 0x7F	; 127
    2488:	20 e0       	ldi	r18, 0x00	; 0
    248a:	30 e0       	ldi	r19, 0x00	; 0
    248c:	40 e8       	ldi	r20, 0x80	; 128
    248e:	5f e3       	ldi	r21, 0x3F	; 63
    2490:	0e 94 95 1f 	call	0x3f2a	; 0x3f2a <__gesf2>
    2494:	18 16       	cp	r1, r24
    2496:	0c f0       	brlt	.+2      	; 0x249a <__stack+0x29b>
    2498:	4d c0       	rjmp	.+154    	; 0x2534 <__stack+0x335>
    {
	    if (fabs(arg1 - 1.0) < 0.0001) /* Slightly over 1 (from rounding error) */
    249a:	c2 01       	movw	r24, r4
    249c:	b1 01       	movw	r22, r2
    249e:	20 e0       	ldi	r18, 0x00	; 0
    24a0:	30 e0       	ldi	r19, 0x00	; 0
    24a2:	40 e8       	ldi	r20, 0x80	; 128
    24a4:	5f e3       	ldi	r21, 0x3F	; 63
    24a6:	0e 94 65 1d 	call	0x3aca	; 0x3aca <__subsf3>
    24aa:	9f 77       	andi	r25, 0x7F	; 127
    24ac:	27 e1       	ldi	r18, 0x17	; 23
    24ae:	37 eb       	ldi	r19, 0xB7	; 183
    24b0:	41 ed       	ldi	r20, 0xD1	; 209
    24b2:	58 e3       	ldi	r21, 0x38	; 56
    24b4:	0e 94 ca 1d 	call	0x3b94	; 0x3b94 <__cmpsf2>
    24b8:	88 23       	and	r24, r24
    24ba:	6c f4       	brge	.+26     	; 0x24d6 <__stack+0x2d7>
	    {
		    options[0] = 0;
    24bc:	80 e0       	ldi	r24, 0x00	; 0
    24be:	90 e0       	ldi	r25, 0x00	; 0
    24c0:	a0 e0       	ldi	r26, 0x00	; 0
    24c2:	b0 e0       	ldi	r27, 0x00	; 0
    24c4:	89 83       	std	Y+1, r24	; 0x01
    24c6:	9a 83       	std	Y+2, r25	; 0x02
    24c8:	ab 83       	std	Y+3, r26	; 0x03
    24ca:	bc 83       	std	Y+4, r27	; 0x04
		    options[1] = 0;
    24cc:	8d 83       	std	Y+5, r24	; 0x05
    24ce:	9e 83       	std	Y+6, r25	; 0x06
    24d0:	af 83       	std	Y+7, r26	; 0x07
    24d2:	b8 87       	std	Y+8, r27	; 0x08
    24d4:	3c c0       	rjmp	.+120    	; 0x254e <__stack+0x34f>
	    }
	    else if (fabs(arg1 - (-1.0)) < 0.0001) /* Slightly less than 1 (from rounding error) */
    24d6:	c2 01       	movw	r24, r4
    24d8:	b1 01       	movw	r22, r2
    24da:	20 e0       	ldi	r18, 0x00	; 0
    24dc:	30 e0       	ldi	r19, 0x00	; 0
    24de:	40 e8       	ldi	r20, 0x80	; 128
    24e0:	5f e3       	ldi	r21, 0x3F	; 63
    24e2:	0e 94 66 1d 	call	0x3acc	; 0x3acc <__addsf3>
    24e6:	9f 77       	andi	r25, 0x7F	; 127
    24e8:	27 e1       	ldi	r18, 0x17	; 23
    24ea:	37 eb       	ldi	r19, 0xB7	; 183
    24ec:	41 ed       	ldi	r20, 0xD1	; 209
    24ee:	58 e3       	ldi	r21, 0x38	; 56
    24f0:	0e 94 ca 1d 	call	0x3b94	; 0x3b94 <__cmpsf2>
    24f4:	88 23       	and	r24, r24
    24f6:	8c f4       	brge	.+34     	; 0x251a <__stack+0x31b>
	    {
		    options[0] = M_PI;
    24f8:	8b ed       	ldi	r24, 0xDB	; 219
    24fa:	9f e0       	ldi	r25, 0x0F	; 15
    24fc:	a9 e4       	ldi	r26, 0x49	; 73
    24fe:	b0 e4       	ldi	r27, 0x40	; 64
    2500:	89 83       	std	Y+1, r24	; 0x01
    2502:	9a 83       	std	Y+2, r25	; 0x02
    2504:	ab 83       	std	Y+3, r26	; 0x03
    2506:	bc 83       	std	Y+4, r27	; 0x04
		    options[1] = -M_PI;
    2508:	8b ed       	ldi	r24, 0xDB	; 219
    250a:	9f e0       	ldi	r25, 0x0F	; 15
    250c:	a9 e4       	ldi	r26, 0x49	; 73
    250e:	b0 ec       	ldi	r27, 0xC0	; 192
    2510:	8d 83       	std	Y+5, r24	; 0x05
    2512:	9e 83       	std	Y+6, r25	; 0x06
    2514:	af 83       	std	Y+7, r26	; 0x07
    2516:	b8 87       	std	Y+8, r27	; 0x08
    2518:	1a c0       	rjmp	.+52     	; 0x254e <__stack+0x34f>
	    }
	    else
	    {
		    options[0] = NAN;
    251a:	80 e0       	ldi	r24, 0x00	; 0
    251c:	90 e0       	ldi	r25, 0x00	; 0
    251e:	a0 ec       	ldi	r26, 0xC0	; 192
    2520:	bf e7       	ldi	r27, 0x7F	; 127
    2522:	89 83       	std	Y+1, r24	; 0x01
    2524:	9a 83       	std	Y+2, r25	; 0x02
    2526:	ab 83       	std	Y+3, r26	; 0x03
    2528:	bc 83       	std	Y+4, r27	; 0x04
		    options[1] = NAN;
    252a:	8d 83       	std	Y+5, r24	; 0x05
    252c:	9e 83       	std	Y+6, r25	; 0x06
    252e:	af 83       	std	Y+7, r26	; 0x07
    2530:	b8 87       	std	Y+8, r27	; 0x08
    2532:	0d c0       	rjmp	.+26     	; 0x254e <__stack+0x34f>
	    }
    }
    else
    {
	    options[0] = acos(arg1);
    2534:	c2 01       	movw	r24, r4
    2536:	b1 01       	movw	r22, r2
    2538:	0e 94 57 1d 	call	0x3aae	; 0x3aae <acos>
    253c:	69 83       	std	Y+1, r22	; 0x01
    253e:	7a 83       	std	Y+2, r23	; 0x02
    2540:	8b 83       	std	Y+3, r24	; 0x03
    2542:	9c 83       	std	Y+4, r25	; 0x04
	    options[1] = -acos(arg1);
    2544:	90 58       	subi	r25, 0x80	; 128
    2546:	6d 83       	std	Y+5, r22	; 0x05
    2548:	7e 83       	std	Y+6, r23	; 0x06
    254a:	8f 83       	std	Y+7, r24	; 0x07
    254c:	98 87       	std	Y+8, r25	; 0x08
    }
    
    if (fabs(arg2) > 1.0)
    254e:	c8 01       	movw	r24, r16
    2550:	b7 01       	movw	r22, r14
    2552:	9f 77       	andi	r25, 0x7F	; 127
    2554:	20 e0       	ldi	r18, 0x00	; 0
    2556:	30 e0       	ldi	r19, 0x00	; 0
    2558:	40 e8       	ldi	r20, 0x80	; 128
    255a:	5f e3       	ldi	r21, 0x3F	; 63
    255c:	0e 94 95 1f 	call	0x3f2a	; 0x3f2a <__gesf2>
    2560:	18 16       	cp	r1, r24
    2562:	0c f0       	brlt	.+2      	; 0x2566 <__stack+0x367>
    2564:	59 c0       	rjmp	.+178    	; 0x2618 <__stack+0x419>
    {
	    if (fabs(arg2 - 1.0) < 0.0001) /* Slightly over 1 (from rounding error) */
    2566:	c8 01       	movw	r24, r16
    2568:	b7 01       	movw	r22, r14
    256a:	20 e0       	ldi	r18, 0x00	; 0
    256c:	30 e0       	ldi	r19, 0x00	; 0
    256e:	40 e8       	ldi	r20, 0x80	; 128
    2570:	5f e3       	ldi	r21, 0x3F	; 63
    2572:	0e 94 65 1d 	call	0x3aca	; 0x3aca <__subsf3>
    2576:	9f 77       	andi	r25, 0x7F	; 127
    2578:	27 e1       	ldi	r18, 0x17	; 23
    257a:	37 eb       	ldi	r19, 0xB7	; 183
    257c:	41 ed       	ldi	r20, 0xD1	; 209
    257e:	58 e3       	ldi	r21, 0x38	; 56
    2580:	0e 94 ca 1d 	call	0x3b94	; 0x3b94 <__cmpsf2>
    2584:	88 23       	and	r24, r24
    2586:	cc f4       	brge	.+50     	; 0x25ba <__stack+0x3bb>
	    {
		    options[2] = 0;
    2588:	80 e0       	ldi	r24, 0x00	; 0
    258a:	90 e0       	ldi	r25, 0x00	; 0
    258c:	a0 e0       	ldi	r26, 0x00	; 0
    258e:	b0 e0       	ldi	r27, 0x00	; 0
    2590:	89 87       	std	Y+9, r24	; 0x09
    2592:	9a 87       	std	Y+10, r25	; 0x0a
    2594:	ab 87       	std	Y+11, r26	; 0x0b
    2596:	bc 87       	std	Y+12, r27	; 0x0c
		    options[3] = 0;
    2598:	8d 87       	std	Y+13, r24	; 0x0d
    259a:	9e 87       	std	Y+14, r25	; 0x0e
    259c:	af 87       	std	Y+15, r26	; 0x0f
    259e:	b8 8b       	std	Y+16, r27	; 0x10
    25a0:	de 01       	movw	r26, r28
    25a2:	11 96       	adiw	r26, 0x01	; 1
    25a4:	b8 af       	std	Y+56, r27	; 0x38
    25a6:	af ab       	std	Y+55, r26	; 0x37
    25a8:	fe 01       	movw	r30, r28
    25aa:	71 96       	adiw	r30, 0x11	; 17
    25ac:	fe ab       	std	Y+54, r31	; 0x36
    25ae:	ed ab       	std	Y+53, r30	; 0x35
    }
    
    /* REMOVE INVALID SOLUTIONS */
    double values [4]; /* One val for each option; pick 2 smallest. */
    int i; /* Iterate over options. */
    for (i = 0; i < 4; i++)
    25b0:	af 96       	adiw	r28, 0x2f	; 47
    25b2:	ff af       	std	Y+63, r31	; 0x3f
    25b4:	ee af       	std	Y+62, r30	; 0x3e
    25b6:	af 97       	sbiw	r28, 0x2f	; 47
    25b8:	3d c0       	rjmp	.+122    	; 0x2634 <__stack+0x435>
	    if (fabs(arg2 - 1.0) < 0.0001) /* Slightly over 1 (from rounding error) */
	    {
		    options[2] = 0;
		    options[3] = 0;
	    }
	    else if (fabs(arg2 - (-1.0)) < 0.0001) /* Slightly less than 1 (from rounding error) */
    25ba:	c8 01       	movw	r24, r16
    25bc:	b7 01       	movw	r22, r14
    25be:	20 e0       	ldi	r18, 0x00	; 0
    25c0:	30 e0       	ldi	r19, 0x00	; 0
    25c2:	40 e8       	ldi	r20, 0x80	; 128
    25c4:	5f e3       	ldi	r21, 0x3F	; 63
    25c6:	0e 94 66 1d 	call	0x3acc	; 0x3acc <__addsf3>
    25ca:	9f 77       	andi	r25, 0x7F	; 127
    25cc:	27 e1       	ldi	r18, 0x17	; 23
    25ce:	37 eb       	ldi	r19, 0xB7	; 183
    25d0:	41 ed       	ldi	r20, 0xD1	; 209
    25d2:	58 e3       	ldi	r21, 0x38	; 56
    25d4:	0e 94 ca 1d 	call	0x3b94	; 0x3b94 <__cmpsf2>
    25d8:	88 23       	and	r24, r24
    25da:	8c f4       	brge	.+34     	; 0x25fe <__stack+0x3ff>
	    {
		    options[2] = M_PI;
    25dc:	8b ed       	ldi	r24, 0xDB	; 219
    25de:	9f e0       	ldi	r25, 0x0F	; 15
    25e0:	a9 e4       	ldi	r26, 0x49	; 73
    25e2:	b0 e4       	ldi	r27, 0x40	; 64
    25e4:	89 87       	std	Y+9, r24	; 0x09
    25e6:	9a 87       	std	Y+10, r25	; 0x0a
    25e8:	ab 87       	std	Y+11, r26	; 0x0b
    25ea:	bc 87       	std	Y+12, r27	; 0x0c
		    options[3] = -M_PI;
    25ec:	8b ed       	ldi	r24, 0xDB	; 219
    25ee:	9f e0       	ldi	r25, 0x0F	; 15
    25f0:	a9 e4       	ldi	r26, 0x49	; 73
    25f2:	b0 ec       	ldi	r27, 0xC0	; 192
    25f4:	8d 87       	std	Y+13, r24	; 0x0d
    25f6:	9e 87       	std	Y+14, r25	; 0x0e
    25f8:	af 87       	std	Y+15, r26	; 0x0f
    25fa:	b8 8b       	std	Y+16, r27	; 0x10
    25fc:	d1 cf       	rjmp	.-94     	; 0x25a0 <__stack+0x3a1>
	    }
	    else
	    {
		    options[2] = NAN;
    25fe:	80 e0       	ldi	r24, 0x00	; 0
    2600:	90 e0       	ldi	r25, 0x00	; 0
    2602:	a0 ec       	ldi	r26, 0xC0	; 192
    2604:	bf e7       	ldi	r27, 0x7F	; 127
    2606:	89 87       	std	Y+9, r24	; 0x09
    2608:	9a 87       	std	Y+10, r25	; 0x0a
    260a:	ab 87       	std	Y+11, r26	; 0x0b
    260c:	bc 87       	std	Y+12, r27	; 0x0c
		    options[3] = NAN;
    260e:	8d 87       	std	Y+13, r24	; 0x0d
    2610:	9e 87       	std	Y+14, r25	; 0x0e
    2612:	af 87       	std	Y+15, r26	; 0x0f
    2614:	b8 8b       	std	Y+16, r27	; 0x10
    2616:	c4 cf       	rjmp	.-120    	; 0x25a0 <__stack+0x3a1>
	    }
    }
    else
    {
	    options[2] = acos(arg2);
    2618:	c8 01       	movw	r24, r16
    261a:	b7 01       	movw	r22, r14
    261c:	0e 94 57 1d 	call	0x3aae	; 0x3aae <acos>
    2620:	69 87       	std	Y+9, r22	; 0x09
    2622:	7a 87       	std	Y+10, r23	; 0x0a
    2624:	8b 87       	std	Y+11, r24	; 0x0b
    2626:	9c 87       	std	Y+12, r25	; 0x0c
	    options[3] = -acos(arg2);
    2628:	90 58       	subi	r25, 0x80	; 128
    262a:	6d 87       	std	Y+13, r22	; 0x0d
    262c:	7e 87       	std	Y+14, r23	; 0x0e
    262e:	8f 87       	std	Y+15, r24	; 0x0f
    2630:	98 8b       	std	Y+16, r25	; 0x10
    2632:	b6 cf       	rjmp	.-148    	; 0x25a0 <__stack+0x3a1>
    /* REMOVE INVALID SOLUTIONS */
    double values [4]; /* One val for each option; pick 2 smallest. */
    int i; /* Iterate over options. */
    for (i = 0; i < 4; i++)
    {
        if (isnan(options[i]))
    2634:	af a9       	ldd	r26, Y+55	; 0x37
    2636:	b8 ad       	ldd	r27, Y+56	; 0x38
    2638:	2d 90       	ld	r2, X+
    263a:	3d 90       	ld	r3, X+
    263c:	4d 90       	ld	r4, X+
    263e:	5c 90       	ld	r5, X
    2640:	c2 01       	movw	r24, r4
    2642:	b1 01       	movw	r22, r2
    2644:	a2 01       	movw	r20, r4
    2646:	91 01       	movw	r18, r2
    2648:	0e 94 90 20 	call	0x4120	; 0x4120 <__unordsf2>
    264c:	88 23       	and	r24, r24
    264e:	59 f0       	breq	.+22     	; 0x2666 <__stack+0x467>
            values[i] = DBL_MAX;
    2650:	8f ef       	ldi	r24, 0xFF	; 255
    2652:	9f ef       	ldi	r25, 0xFF	; 255
    2654:	af e7       	ldi	r26, 0x7F	; 127
    2656:	bf e7       	ldi	r27, 0x7F	; 127
    2658:	ed a9       	ldd	r30, Y+53	; 0x35
    265a:	fe a9       	ldd	r31, Y+54	; 0x36
    265c:	80 83       	st	Z, r24
    265e:	91 83       	std	Z+1, r25	; 0x01
    2660:	a2 83       	std	Z+2, r26	; 0x02
    2662:	b3 83       	std	Z+3, r27	; 0x03
    2664:	86 c0       	rjmp	.+268    	; 0x2772 <__stack+0x573>
        else
            values[i] = fabs(pow(p.x + (10 - 4) / (2 * sqrt(3)) + 5 *
    2666:	c2 01       	movw	r24, r4
    2668:	b1 01       	movw	r22, r2
    266a:	0e 94 ce 1d 	call	0x3b9c	; 0x3b9c <cos>
    266e:	5b 01       	movw	r10, r22
    2670:	6c 01       	movw	r12, r24
    2672:	25 96       	adiw	r28, 0x05	; 5
    2674:	6c ad       	ldd	r22, Y+60	; 0x3c
    2676:	7d ad       	ldd	r23, Y+61	; 0x3d
    2678:	8e ad       	ldd	r24, Y+62	; 0x3e
    267a:	9f ad       	ldd	r25, Y+63	; 0x3f
    267c:	25 97       	sbiw	r28, 0x05	; 5
    267e:	28 ed       	ldi	r18, 0xD8	; 216
    2680:	33 eb       	ldi	r19, 0xB3	; 179
    2682:	4d ed       	ldi	r20, 0xDD	; 221
    2684:	5f e3       	ldi	r21, 0x3F	; 63
    2686:	0e 94 66 1d 	call	0x3acc	; 0x3acc <__addsf3>
    268a:	7b 01       	movw	r14, r22
    268c:	8c 01       	movw	r16, r24
    268e:	c6 01       	movw	r24, r12
    2690:	b5 01       	movw	r22, r10
    2692:	20 e0       	ldi	r18, 0x00	; 0
    2694:	30 e0       	ldi	r19, 0x00	; 0
    2696:	40 ea       	ldi	r20, 0xA0	; 160
    2698:	50 e4       	ldi	r21, 0x40	; 64
    269a:	0e 94 99 1f 	call	0x3f32	; 0x3f32 <__mulsf3>
    269e:	20 e0       	ldi	r18, 0x00	; 0
    26a0:	30 e0       	ldi	r19, 0x00	; 0
    26a2:	40 e0       	ldi	r20, 0x00	; 0
    26a4:	5f e3       	ldi	r21, 0x3F	; 63
    26a6:	0e 94 99 1f 	call	0x3f32	; 0x3f32 <__mulsf3>
    26aa:	9b 01       	movw	r18, r22
    26ac:	ac 01       	movw	r20, r24
    26ae:	c8 01       	movw	r24, r16
    26b0:	b7 01       	movw	r22, r14
    26b2:	0e 94 66 1d 	call	0x3acc	; 0x3acc <__addsf3>
    26b6:	9b 01       	movw	r18, r22
    26b8:	ac 01       	movw	r20, r24
    26ba:	0e 94 99 1f 	call	0x3f32	; 0x3f32 <__mulsf3>
    26be:	66 2e       	mov	r6, r22
    26c0:	77 2e       	mov	r7, r23
    26c2:	88 2e       	mov	r8, r24
    26c4:	99 2e       	mov	r9, r25
    26c6:	c6 01       	movw	r24, r12
    26c8:	b5 01       	movw	r22, r10
    26ca:	26 e6       	ldi	r18, 0x66	; 102
    26cc:	30 e9       	ldi	r19, 0x90	; 144
    26ce:	4a e0       	ldi	r20, 0x0A	; 10
    26d0:	51 ec       	ldi	r21, 0xC1	; 193
    26d2:	0e 94 99 1f 	call	0x3f32	; 0x3f32 <__mulsf3>
    26d6:	20 e0       	ldi	r18, 0x00	; 0
    26d8:	30 e0       	ldi	r19, 0x00	; 0
    26da:	40 ec       	ldi	r20, 0xC0	; 192
    26dc:	50 e4       	ldi	r21, 0x40	; 64
    26de:	0e 94 65 1d 	call	0x3aca	; 0x3aca <__subsf3>
    26e2:	20 e0       	ldi	r18, 0x00	; 0
    26e4:	30 e0       	ldi	r19, 0x00	; 0
    26e6:	40 e0       	ldi	r20, 0x00	; 0
    26e8:	5f e3       	ldi	r21, 0x3F	; 63
    26ea:	0e 94 99 1f 	call	0x3f32	; 0x3f32 <__mulsf3>
    26ee:	21 96       	adiw	r28, 0x01	; 1
    26f0:	2c ad       	ldd	r18, Y+60	; 0x3c
    26f2:	3d ad       	ldd	r19, Y+61	; 0x3d
    26f4:	4e ad       	ldd	r20, Y+62	; 0x3e
    26f6:	5f ad       	ldd	r21, Y+63	; 0x3f
    26f8:	21 97       	sbiw	r28, 0x01	; 1
    26fa:	0e 94 66 1d 	call	0x3acc	; 0x3acc <__addsf3>
    26fe:	9b 01       	movw	r18, r22
    2700:	ac 01       	movw	r20, r24
    2702:	0e 94 99 1f 	call	0x3f32	; 0x3f32 <__mulsf3>
    2706:	a6 2e       	mov	r10, r22
    2708:	b7 2e       	mov	r11, r23
    270a:	c8 2e       	mov	r12, r24
    270c:	d9 2e       	mov	r13, r25
    270e:	c2 01       	movw	r24, r4
    2710:	b1 01       	movw	r22, r2
    2712:	0e 94 48 20 	call	0x4090	; 0x4090 <sin>
    2716:	20 e0       	ldi	r18, 0x00	; 0
    2718:	30 e0       	ldi	r19, 0x00	; 0
    271a:	40 ea       	ldi	r20, 0xA0	; 160
    271c:	50 ec       	ldi	r21, 0xC0	; 192
    271e:	0e 94 99 1f 	call	0x3f32	; 0x3f32 <__mulsf3>
    2722:	9b 01       	movw	r18, r22
    2724:	ac 01       	movw	r20, r24
    2726:	69 ad       	ldd	r22, Y+57	; 0x39
    2728:	7a ad       	ldd	r23, Y+58	; 0x3a
    272a:	8b ad       	ldd	r24, Y+59	; 0x3b
    272c:	9c ad       	ldd	r25, Y+60	; 0x3c
    272e:	0e 94 66 1d 	call	0x3acc	; 0x3acc <__addsf3>
    2732:	9b 01       	movw	r18, r22
    2734:	ac 01       	movw	r20, r24
    2736:	0e 94 99 1f 	call	0x3f32	; 0x3f32 <__mulsf3>
    273a:	e6 2e       	mov	r14, r22
    273c:	f7 2e       	mov	r15, r23
    273e:	08 2f       	mov	r16, r24
    2740:	19 2f       	mov	r17, r25
    2742:	c4 01       	movw	r24, r8
    2744:	b3 01       	movw	r22, r6
    2746:	a6 01       	movw	r20, r12
    2748:	95 01       	movw	r18, r10
    274a:	0e 94 66 1d 	call	0x3acc	; 0x3acc <__addsf3>
    274e:	a8 01       	movw	r20, r16
    2750:	97 01       	movw	r18, r14
    2752:	0e 94 66 1d 	call	0x3acc	; 0x3acc <__addsf3>
    2756:	20 e0       	ldi	r18, 0x00	; 0
    2758:	30 e0       	ldi	r19, 0x00	; 0
    275a:	40 e1       	ldi	r20, 0x10	; 16
    275c:	53 e4       	ldi	r21, 0x43	; 67
    275e:	0e 94 65 1d 	call	0x3aca	; 0x3aca <__subsf3>
    2762:	9f 77       	andi	r25, 0x7F	; 127
    2764:	ad a9       	ldd	r26, Y+53	; 0x35
    2766:	be a9       	ldd	r27, Y+54	; 0x36
    2768:	6d 93       	st	X+, r22
    276a:	7d 93       	st	X+, r23
    276c:	8d 93       	st	X+, r24
    276e:	9c 93       	st	X, r25
    2770:	13 97       	sbiw	r26, 0x03	; 3
    2772:	ef a9       	ldd	r30, Y+55	; 0x37
    2774:	f8 ad       	ldd	r31, Y+56	; 0x38
    2776:	34 96       	adiw	r30, 0x04	; 4
    2778:	f8 af       	std	Y+56, r31	; 0x38
    277a:	ef ab       	std	Y+55, r30	; 0x37
    277c:	2d a9       	ldd	r18, Y+53	; 0x35
    277e:	3e a9       	ldd	r19, Y+54	; 0x36
    2780:	2c 5f       	subi	r18, 0xFC	; 252
    2782:	3f 4f       	sbci	r19, 0xFF	; 255
    2784:	3e ab       	std	Y+54, r19	; 0x36
    2786:	2d ab       	std	Y+53, r18	; 0x35
    }
    
    /* REMOVE INVALID SOLUTIONS */
    double values [4]; /* One val for each option; pick 2 smallest. */
    int i; /* Iterate over options. */
    for (i = 0; i < 4; i++)
    2788:	af 96       	adiw	r28, 0x2f	; 47
    278a:	8e ad       	ldd	r24, Y+62	; 0x3e
    278c:	9f ad       	ldd	r25, Y+63	; 0x3f
    278e:	af 97       	sbiw	r28, 0x2f	; 47
    2790:	e8 17       	cp	r30, r24
    2792:	f9 07       	cpc	r31, r25
    2794:	09 f0       	breq	.+2      	; 0x2798 <__stack+0x599>
    2796:	4e cf       	rjmp	.-356    	; 0x2634 <__stack+0x435>
                        sqrt(3) * cos(options[i])) / 2.0, 2) + pow(p.z - 5 *
                        sin(options[i]), 2) - 144);
        /* Above expression comes from original kinematics equation. */
    }
    /* Find desired indices of 'options'. */
    int ind1 = minInd1(values, sizeof(values) / sizeof(values[0]));
    2798:	8e 01       	movw	r16, r28
    279a:	0f 5e       	subi	r16, 0xEF	; 239
    279c:	1f 4f       	sbci	r17, 0xFF	; 255
    279e:	c8 01       	movw	r24, r16
    27a0:	64 e0       	ldi	r22, 0x04	; 4
    27a2:	70 e0       	ldi	r23, 0x00	; 0
    27a4:	0e 94 c7 07 	call	0xf8e	; 0xf8e <minInd1>
    27a8:	7c 01       	movw	r14, r24
    int ind2 = minInd2(values, sizeof(values) / sizeof(values[0]));
    27aa:	c8 01       	movw	r24, r16
    27ac:	64 e0       	ldi	r22, 0x04	; 4
    27ae:	70 e0       	ldi	r23, 0x00	; 0
    27b0:	0e 94 3c 08 	call	0x1078	; 0x1078 <minInd2>
    27b4:	bc 01       	movw	r22, r24
    /* Pick the two closest options to the original equation. */
    double viableOptions [2];
    viableOptions[0] = (ind1 == -1) ? NAN : options[ind1];
    27b6:	9f ef       	ldi	r25, 0xFF	; 255
    27b8:	e9 16       	cp	r14, r25
    27ba:	9f ef       	ldi	r25, 0xFF	; 255
    27bc:	f9 06       	cpc	r15, r25
    27be:	29 f4       	brne	.+10     	; 0x27ca <__stack+0x5cb>
    27c0:	20 e0       	ldi	r18, 0x00	; 0
    27c2:	30 e0       	ldi	r19, 0x00	; 0
    27c4:	40 ec       	ldi	r20, 0xC0	; 192
    27c6:	5f e7       	ldi	r21, 0x7F	; 127
    27c8:	0c c0       	rjmp	.+24     	; 0x27e2 <__stack+0x5e3>
    27ca:	c7 01       	movw	r24, r14
    27cc:	88 0f       	add	r24, r24
    27ce:	99 1f       	adc	r25, r25
    27d0:	88 0f       	add	r24, r24
    27d2:	99 1f       	adc	r25, r25
    27d4:	fe 01       	movw	r30, r28
    27d6:	e8 0f       	add	r30, r24
    27d8:	f9 1f       	adc	r31, r25
    27da:	21 81       	ldd	r18, Z+1	; 0x01
    27dc:	32 81       	ldd	r19, Z+2	; 0x02
    27de:	43 81       	ldd	r20, Z+3	; 0x03
    27e0:	54 81       	ldd	r21, Z+4	; 0x04
    viableOptions[1] = (ind2 == -1) ? NAN : options[ind2];
    27e2:	af ef       	ldi	r26, 0xFF	; 255
    27e4:	6f 3f       	cpi	r22, 0xFF	; 255
    27e6:	7a 07       	cpc	r23, r26
    27e8:	29 f4       	brne	.+10     	; 0x27f4 <__stack+0x5f5>
    27ea:	80 e0       	ldi	r24, 0x00	; 0
    27ec:	90 e0       	ldi	r25, 0x00	; 0
    27ee:	a0 ec       	ldi	r26, 0xC0	; 192
    27f0:	bf e7       	ldi	r27, 0x7F	; 127
    27f2:	0c c0       	rjmp	.+24     	; 0x280c <__stack+0x60d>
    27f4:	cb 01       	movw	r24, r22
    27f6:	88 0f       	add	r24, r24
    27f8:	99 1f       	adc	r25, r25
    27fa:	88 0f       	add	r24, r24
    27fc:	99 1f       	adc	r25, r25
    27fe:	fe 01       	movw	r30, r28
    2800:	e8 0f       	add	r30, r24
    2802:	f9 1f       	adc	r31, r25
    2804:	81 81       	ldd	r24, Z+1	; 0x01
    2806:	92 81       	ldd	r25, Z+2	; 0x02
    2808:	a3 81       	ldd	r26, Z+3	; 0x03
    280a:	b4 81       	ldd	r27, Z+4	; 0x04
    /* Find desired indices of 'options'. */
    int ind1 = minInd1(values, sizeof(values) / sizeof(values[0]));
    int ind2 = minInd2(values, sizeof(values) / sizeof(values[0]));
    /* Pick the two closest options to the original equation. */
    double viableOptions [2];
    viableOptions[0] = (ind1 == -1) ? NAN : options[ind1];
    280c:	29 a3       	std	Y+33, r18	; 0x21
    280e:	3a a3       	std	Y+34, r19	; 0x22
    2810:	4b a3       	std	Y+35, r20	; 0x23
    2812:	5c a3       	std	Y+36, r21	; 0x24
    viableOptions[1] = (ind2 == -1) ? NAN : options[ind2];
    2814:	8d a3       	std	Y+37, r24	; 0x25
    2816:	9e a3       	std	Y+38, r25	; 0x26
    2818:	af a3       	std	Y+39, r26	; 0x27
    281a:	b8 a7       	std	Y+40, r27	; 0x28
    /* REMOVE EXTRANEOUS SOLUTION + CONVERT ANGLE*/
    return modAngle(removeExtraneous(viableOptions));
    281c:	ce 01       	movw	r24, r28
    281e:	81 96       	adiw	r24, 0x21	; 33
    2820:	0e 94 01 07 	call	0xe02	; 0xe02 <removeExtraneous>
    2824:	0e 94 94 07 	call	0xf28	; 0xf28 <modAngle>
}
    2828:	c2 59       	subi	r28, 0x92	; 146
    282a:	df 4f       	sbci	r29, 0xFF	; 255
    282c:	0f b6       	in	r0, 0x3f	; 63
    282e:	f8 94       	cli
    2830:	de bf       	out	0x3e, r29	; 62
    2832:	0f be       	out	0x3f, r0	; 63
    2834:	cd bf       	out	0x3d, r28	; 61
    2836:	cf 91       	pop	r28
    2838:	df 91       	pop	r29
    283a:	1f 91       	pop	r17
    283c:	0f 91       	pop	r16
    283e:	ff 90       	pop	r15
    2840:	ef 90       	pop	r14
    2842:	df 90       	pop	r13
    2844:	cf 90       	pop	r12
    2846:	bf 90       	pop	r11
    2848:	af 90       	pop	r10
    284a:	9f 90       	pop	r9
    284c:	8f 90       	pop	r8
    284e:	7f 90       	pop	r7
    2850:	6f 90       	pop	r6
    2852:	5f 90       	pop	r5
    2854:	4f 90       	pop	r4
    2856:	3f 90       	pop	r3
    2858:	2f 90       	pop	r2
    285a:	08 95       	ret

0000285c <getAngle1>:
/**
 * Returns the required angle of servo actuator 1 to get to a desired point 'p'
 * in degrees and servo coordinates. If no solution exists, returns NAN.
 */
double getAngle1(struct point p)
{
    285c:	2f 92       	push	r2
    285e:	3f 92       	push	r3
    2860:	4f 92       	push	r4
    2862:	5f 92       	push	r5
    2864:	6f 92       	push	r6
    2866:	7f 92       	push	r7
    2868:	8f 92       	push	r8
    286a:	9f 92       	push	r9
    286c:	af 92       	push	r10
    286e:	bf 92       	push	r11
    2870:	cf 92       	push	r12
    2872:	df 92       	push	r13
    2874:	ef 92       	push	r14
    2876:	ff 92       	push	r15
    2878:	0f 93       	push	r16
    287a:	1f 93       	push	r17
    287c:	df 93       	push	r29
    287e:	cf 93       	push	r28
    2880:	cd b7       	in	r28, 0x3d	; 61
    2882:	de b7       	in	r29, 0x3e	; 62
    2884:	ca 55       	subi	r28, 0x5A	; 90
    2886:	d0 40       	sbci	r29, 0x00	; 0
    2888:	0f b6       	in	r0, 0x3f	; 63
    288a:	f8 94       	cli
    288c:	de bf       	out	0x3e, r29	; 62
    288e:	0f be       	out	0x3f, r0	; 63
    2890:	cd bf       	out	0x3d, r28	; 61
    2892:	e9 a6       	std	Y+41, r14	; 0x29
    2894:	fa a6       	std	Y+42, r15	; 0x2a
    2896:	0b a7       	std	Y+43, r16	; 0x2b
    2898:	1c a7       	std	Y+44, r17	; 0x2c
    289a:	2d a7       	std	Y+45, r18	; 0x2d
    289c:	3e a7       	std	Y+46, r19	; 0x2e
    289e:	4f a7       	std	Y+47, r20	; 0x2f
    28a0:	58 ab       	std	Y+48, r21	; 0x30
    28a2:	69 ab       	std	Y+49, r22	; 0x31
    28a4:	7a ab       	std	Y+50, r23	; 0x32
    28a6:	8b ab       	std	Y+51, r24	; 0x33
    28a8:	9c ab       	std	Y+52, r25	; 0x34
    28aa:	89 a5       	ldd	r24, Y+41	; 0x29
    28ac:	9a a5       	ldd	r25, Y+42	; 0x2a
    28ae:	ab a5       	ldd	r26, Y+43	; 0x2b
    28b0:	bc a5       	ldd	r27, Y+44	; 0x2c
    28b2:	89 af       	std	Y+57, r24	; 0x39
    28b4:	9a af       	std	Y+58, r25	; 0x3a
    28b6:	ab af       	std	Y+59, r26	; 0x3b
    28b8:	bc af       	std	Y+60, r27	; 0x3c
    28ba:	ad a4       	ldd	r10, Y+45	; 0x2d
    28bc:	be a4       	ldd	r11, Y+46	; 0x2e
    28be:	cf a4       	ldd	r12, Y+47	; 0x2f
    28c0:	d8 a8       	ldd	r13, Y+48	; 0x30
    28c2:	89 a9       	ldd	r24, Y+49	; 0x31
    28c4:	9a a9       	ldd	r25, Y+50	; 0x32
    28c6:	ab a9       	ldd	r26, Y+51	; 0x33
    28c8:	bc a9       	ldd	r27, Y+52	; 0x34
    28ca:	8d ab       	std	Y+53, r24	; 0x35
    28cc:	9e ab       	std	Y+54, r25	; 0x36
    28ce:	af ab       	std	Y+55, r26	; 0x37
    28d0:	b8 af       	std	Y+56, r27	; 0x38
                  + pow(p.x, 4) + pow(p.y, 4) - 314 * pow(p.z, 2) +
                  pow(p.z, 4) + 2 * pow(p.y, 2) * (-107 + pow(p.z, 2)) -
                  8 * sqrt(3) * p.x * (-157 + pow(p.y, 2) + pow(p.z, 2))
                  + 2 * pow(p.x, 2) * (-133 + pow(p.y, 2) +
                  pow(p.z, 2))))) / (10 * (12 - 4 * sqrt(3) * p.x +
                  pow(p.x, 2) + pow(p.z, 2)));
    28d2:	69 ad       	ldd	r22, Y+57	; 0x39
    28d4:	7a ad       	ldd	r23, Y+58	; 0x3a
    28d6:	8b ad       	ldd	r24, Y+59	; 0x3b
    28d8:	9c ad       	ldd	r25, Y+60	; 0x3c
    28da:	9b 01       	movw	r18, r22
    28dc:	ac 01       	movw	r20, r24
    28de:	0e 94 99 1f 	call	0x3f32	; 0x3f32 <__mulsf3>
    28e2:	2e 96       	adiw	r28, 0x0e	; 14
    28e4:	6f af       	std	Y+63, r22	; 0x3f
    28e6:	2e 97       	sbiw	r28, 0x0e	; 14
    28e8:	2f 96       	adiw	r28, 0x0f	; 15
    28ea:	7f af       	std	Y+63, r23	; 0x3f
    28ec:	2f 97       	sbiw	r28, 0x0f	; 15
    28ee:	60 96       	adiw	r28, 0x10	; 16
    28f0:	8f af       	std	Y+63, r24	; 0x3f
    28f2:	60 97       	sbiw	r28, 0x10	; 16
    28f4:	61 96       	adiw	r28, 0x11	; 17
    28f6:	9f af       	std	Y+63, r25	; 0x3f
    28f8:	61 97       	sbiw	r28, 0x11	; 17
    28fa:	69 ad       	ldd	r22, Y+57	; 0x39
    28fc:	7a ad       	ldd	r23, Y+58	; 0x3a
    28fe:	8b ad       	ldd	r24, Y+59	; 0x3b
    2900:	9c ad       	ldd	r25, Y+60	; 0x3c
    2902:	20 e0       	ldi	r18, 0x00	; 0
    2904:	30 e0       	ldi	r19, 0x00	; 0
    2906:	40 e4       	ldi	r20, 0x40	; 64
    2908:	50 e4       	ldi	r21, 0x40	; 64
    290a:	0e 94 fc 1f 	call	0x3ff8	; 0x3ff8 <pow>
    290e:	62 96       	adiw	r28, 0x12	; 18
    2910:	6f af       	std	Y+63, r22	; 0x3f
    2912:	62 97       	sbiw	r28, 0x12	; 18
    2914:	63 96       	adiw	r28, 0x13	; 19
    2916:	7f af       	std	Y+63, r23	; 0x3f
    2918:	63 97       	sbiw	r28, 0x13	; 19
    291a:	64 96       	adiw	r28, 0x14	; 20
    291c:	8f af       	std	Y+63, r24	; 0x3f
    291e:	64 97       	sbiw	r28, 0x14	; 20
    2920:	65 96       	adiw	r28, 0x15	; 21
    2922:	9f af       	std	Y+63, r25	; 0x3f
    2924:	65 97       	sbiw	r28, 0x15	; 21
    2926:	c6 01       	movw	r24, r12
    2928:	b5 01       	movw	r22, r10
    292a:	a6 01       	movw	r20, r12
    292c:	95 01       	movw	r18, r10
    292e:	0e 94 99 1f 	call	0x3f32	; 0x3f32 <__mulsf3>
    2932:	26 2e       	mov	r2, r22
    2934:	37 2e       	mov	r3, r23
    2936:	48 2e       	mov	r4, r24
    2938:	59 2e       	mov	r5, r25
    293a:	25 96       	adiw	r28, 0x05	; 5
    293c:	2c ae       	std	Y+60, r2	; 0x3c
    293e:	3d ae       	std	Y+61, r3	; 0x3d
    2940:	4e ae       	std	Y+62, r4	; 0x3e
    2942:	5f ae       	std	Y+63, r5	; 0x3f
    2944:	25 97       	sbiw	r28, 0x05	; 5
    2946:	6d a9       	ldd	r22, Y+53	; 0x35
    2948:	7e a9       	ldd	r23, Y+54	; 0x36
    294a:	8f a9       	ldd	r24, Y+55	; 0x37
    294c:	98 ad       	ldd	r25, Y+56	; 0x38
    294e:	9b 01       	movw	r18, r22
    2950:	ac 01       	movw	r20, r24
    2952:	0e 94 99 1f 	call	0x3f32	; 0x3f32 <__mulsf3>
    2956:	66 96       	adiw	r28, 0x16	; 22
    2958:	6f af       	std	Y+63, r22	; 0x3f
    295a:	66 97       	sbiw	r28, 0x16	; 22
    295c:	67 96       	adiw	r28, 0x17	; 23
    295e:	7f af       	std	Y+63, r23	; 0x3f
    2960:	67 97       	sbiw	r28, 0x17	; 23
    2962:	68 96       	adiw	r28, 0x18	; 24
    2964:	8f af       	std	Y+63, r24	; 0x3f
    2966:	68 97       	sbiw	r28, 0x18	; 24
    2968:	69 96       	adiw	r28, 0x19	; 25
    296a:	9f af       	std	Y+63, r25	; 0x3f
    296c:	69 97       	sbiw	r28, 0x19	; 25
    296e:	69 96       	adiw	r28, 0x19	; 25
    2970:	8c ad       	ldd	r24, Y+60	; 0x3c
    2972:	9d ad       	ldd	r25, Y+61	; 0x3d
    2974:	ae ad       	ldd	r26, Y+62	; 0x3e
    2976:	bf ad       	ldd	r27, Y+63	; 0x3f
    2978:	69 97       	sbiw	r28, 0x19	; 25
    297a:	21 96       	adiw	r28, 0x01	; 1
    297c:	8c af       	std	Y+60, r24	; 0x3c
    297e:	9d af       	std	Y+61, r25	; 0x3d
    2980:	ae af       	std	Y+62, r26	; 0x3e
    2982:	bf af       	std	Y+63, r27	; 0x3f
    2984:	21 97       	sbiw	r28, 0x01	; 1
    2986:	61 96       	adiw	r28, 0x11	; 17
    2988:	6c ad       	ldd	r22, Y+60	; 0x3c
    298a:	7d ad       	ldd	r23, Y+61	; 0x3d
    298c:	8e ad       	ldd	r24, Y+62	; 0x3e
    298e:	9f ad       	ldd	r25, Y+63	; 0x3f
    2990:	61 97       	sbiw	r28, 0x11	; 17
    2992:	21 ee       	ldi	r18, 0xE1	; 225
    2994:	36 e4       	ldi	r19, 0x46	; 70
    2996:	46 e2       	ldi	r20, 0x26	; 38
    2998:	51 e4       	ldi	r21, 0x41	; 65
    299a:	0e 94 99 1f 	call	0x3f32	; 0x3f32 <__mulsf3>
    299e:	26 e5       	ldi	r18, 0x56	; 86
    29a0:	34 e5       	ldi	r19, 0x54	; 84
    29a2:	49 eb       	ldi	r20, 0xB9	; 185
    29a4:	53 e4       	ldi	r21, 0x43	; 67
    29a6:	0e 94 65 1d 	call	0x3aca	; 0x3aca <__subsf3>
    29aa:	65 96       	adiw	r28, 0x15	; 21
    29ac:	2c ad       	ldd	r18, Y+60	; 0x3c
    29ae:	3d ad       	ldd	r19, Y+61	; 0x3d
    29b0:	4e ad       	ldd	r20, Y+62	; 0x3e
    29b2:	5f ad       	ldd	r21, Y+63	; 0x3f
    29b4:	65 97       	sbiw	r28, 0x15	; 21
    29b6:	0e 94 65 1d 	call	0x3aca	; 0x3aca <__subsf3>
    29ba:	7b 01       	movw	r14, r22
    29bc:	8c 01       	movw	r16, r24
    29be:	c2 01       	movw	r24, r4
    29c0:	b1 01       	movw	r22, r2
    29c2:	27 ed       	ldi	r18, 0xD7	; 215
    29c4:	33 eb       	ldi	r19, 0xB3	; 179
    29c6:	4d e5       	ldi	r20, 0x5D	; 93
    29c8:	50 e4       	ldi	r21, 0x40	; 64
    29ca:	0e 94 99 1f 	call	0x3f32	; 0x3f32 <__mulsf3>
    29ce:	9b 01       	movw	r18, r22
    29d0:	ac 01       	movw	r20, r24
    29d2:	c8 01       	movw	r24, r16
    29d4:	b7 01       	movw	r22, r14
    29d6:	0e 94 66 1d 	call	0x3acc	; 0x3acc <__addsf3>
    29da:	7b 01       	movw	r14, r22
    29dc:	8c 01       	movw	r16, r24
    29de:	69 96       	adiw	r28, 0x19	; 25
    29e0:	6c ad       	ldd	r22, Y+60	; 0x3c
    29e2:	7d ad       	ldd	r23, Y+61	; 0x3d
    29e4:	8e ad       	ldd	r24, Y+62	; 0x3e
    29e6:	9f ad       	ldd	r25, Y+63	; 0x3f
    29e8:	69 97       	sbiw	r28, 0x19	; 25
    29ea:	27 ed       	ldi	r18, 0xD7	; 215
    29ec:	33 eb       	ldi	r19, 0xB3	; 179
    29ee:	4d e5       	ldi	r20, 0x5D	; 93
    29f0:	50 e4       	ldi	r21, 0x40	; 64
    29f2:	0e 94 99 1f 	call	0x3f32	; 0x3f32 <__mulsf3>
    29f6:	9b 01       	movw	r18, r22
    29f8:	ac 01       	movw	r20, r24
    29fa:	c8 01       	movw	r24, r16
    29fc:	b7 01       	movw	r22, r14
    29fe:	0e 94 66 1d 	call	0x3acc	; 0x3acc <__addsf3>
    2a02:	7b 01       	movw	r14, r22
    2a04:	8c 01       	movw	r16, r24
    2a06:	c2 01       	movw	r24, r4
    2a08:	b1 01       	movw	r22, r2
    2a0a:	20 e0       	ldi	r18, 0x00	; 0
    2a0c:	30 e0       	ldi	r19, 0x00	; 0
    2a0e:	46 ea       	ldi	r20, 0xA6	; 166
    2a10:	52 e4       	ldi	r21, 0x42	; 66
    2a12:	0e 94 65 1d 	call	0x3aca	; 0x3aca <__subsf3>
    2a16:	9b 01       	movw	r18, r22
    2a18:	ac 01       	movw	r20, r24
    2a1a:	69 96       	adiw	r28, 0x19	; 25
    2a1c:	6c ad       	ldd	r22, Y+60	; 0x3c
    2a1e:	7d ad       	ldd	r23, Y+61	; 0x3d
    2a20:	8e ad       	ldd	r24, Y+62	; 0x3e
    2a22:	9f ad       	ldd	r25, Y+63	; 0x3f
    2a24:	69 97       	sbiw	r28, 0x19	; 25
    2a26:	0e 94 66 1d 	call	0x3acc	; 0x3acc <__addsf3>
    2a2a:	9b 01       	movw	r18, r22
    2a2c:	ac 01       	movw	r20, r24
    2a2e:	69 ad       	ldd	r22, Y+57	; 0x39
    2a30:	7a ad       	ldd	r23, Y+58	; 0x3a
    2a32:	8b ad       	ldd	r24, Y+59	; 0x3b
    2a34:	9c ad       	ldd	r25, Y+60	; 0x3c
    2a36:	0e 94 99 1f 	call	0x3f32	; 0x3f32 <__mulsf3>
    2a3a:	9b 01       	movw	r18, r22
    2a3c:	ac 01       	movw	r20, r24
    2a3e:	c8 01       	movw	r24, r16
    2a40:	b7 01       	movw	r22, r14
    2a42:	0e 94 65 1d 	call	0x3aca	; 0x3aca <__subsf3>
    2a46:	29 96       	adiw	r28, 0x09	; 9
    2a48:	6c af       	std	Y+60, r22	; 0x3c
    2a4a:	7d af       	std	Y+61, r23	; 0x3d
    2a4c:	8e af       	std	Y+62, r24	; 0x3e
    2a4e:	9f af       	std	Y+63, r25	; 0x3f
    2a50:	29 97       	sbiw	r28, 0x09	; 9
    2a52:	69 ad       	ldd	r22, Y+57	; 0x39
    2a54:	7a ad       	ldd	r23, Y+58	; 0x3a
    2a56:	8b ad       	ldd	r24, Y+59	; 0x3b
    2a58:	9c ad       	ldd	r25, Y+60	; 0x3c
    2a5a:	20 e0       	ldi	r18, 0x00	; 0
    2a5c:	30 e0       	ldi	r19, 0x00	; 0
    2a5e:	40 e8       	ldi	r20, 0x80	; 128
    2a60:	50 e4       	ldi	r21, 0x40	; 64
    2a62:	0e 94 fc 1f 	call	0x3ff8	; 0x3ff8 <pow>
    2a66:	66 2e       	mov	r6, r22
    2a68:	77 2e       	mov	r7, r23
    2a6a:	88 2e       	mov	r8, r24
    2a6c:	99 2e       	mov	r9, r25
    2a6e:	c6 01       	movw	r24, r12
    2a70:	b5 01       	movw	r22, r10
    2a72:	20 e0       	ldi	r18, 0x00	; 0
    2a74:	30 e0       	ldi	r19, 0x00	; 0
    2a76:	40 e8       	ldi	r20, 0x80	; 128
    2a78:	50 e4       	ldi	r21, 0x40	; 64
    2a7a:	0e 94 fc 1f 	call	0x3ff8	; 0x3ff8 <pow>
    2a7e:	e6 2e       	mov	r14, r22
    2a80:	f7 2e       	mov	r15, r23
    2a82:	08 2f       	mov	r16, r24
    2a84:	19 2f       	mov	r17, r25
    2a86:	6d a9       	ldd	r22, Y+53	; 0x35
    2a88:	7e a9       	ldd	r23, Y+54	; 0x36
    2a8a:	8f a9       	ldd	r24, Y+55	; 0x37
    2a8c:	98 ad       	ldd	r25, Y+56	; 0x38
    2a8e:	20 e0       	ldi	r18, 0x00	; 0
    2a90:	30 e0       	ldi	r19, 0x00	; 0
    2a92:	40 e8       	ldi	r20, 0x80	; 128
    2a94:	50 e4       	ldi	r21, 0x40	; 64
    2a96:	0e 94 fc 1f 	call	0x3ff8	; 0x3ff8 <pow>
    2a9a:	a6 2e       	mov	r10, r22
    2a9c:	b7 2e       	mov	r11, r23
    2a9e:	c8 2e       	mov	r12, r24
    2aa0:	d9 2e       	mov	r13, r25
    2aa2:	21 96       	adiw	r28, 0x01	; 1
    2aa4:	8c ad       	ldd	r24, Y+60	; 0x3c
    2aa6:	9d ad       	ldd	r25, Y+61	; 0x3d
    2aa8:	ae ad       	ldd	r26, Y+62	; 0x3e
    2aaa:	bf ad       	ldd	r27, Y+63	; 0x3f
    2aac:	21 97       	sbiw	r28, 0x01	; 1
    2aae:	b0 58       	subi	r27, 0x80	; 128
    2ab0:	2d 96       	adiw	r28, 0x0d	; 13
    2ab2:	8c af       	std	Y+60, r24	; 0x3c
    2ab4:	9d af       	std	Y+61, r25	; 0x3d
    2ab6:	ae af       	std	Y+62, r26	; 0x3e
    2ab8:	bf af       	std	Y+63, r27	; 0x3f
    2aba:	2d 97       	sbiw	r28, 0x0d	; 13
    2abc:	65 96       	adiw	r28, 0x15	; 21
    2abe:	6c ad       	ldd	r22, Y+60	; 0x3c
    2ac0:	7d ad       	ldd	r23, Y+61	; 0x3d
    2ac2:	8e ad       	ldd	r24, Y+62	; 0x3e
    2ac4:	9f ad       	ldd	r25, Y+63	; 0x3f
    2ac6:	65 97       	sbiw	r28, 0x15	; 21
    2ac8:	27 ed       	ldi	r18, 0xD7	; 215
    2aca:	33 eb       	ldi	r19, 0xB3	; 179
    2acc:	4d e5       	ldi	r20, 0x5D	; 93
    2ace:	51 ec       	ldi	r21, 0xC1	; 193
    2ad0:	0e 94 99 1f 	call	0x3f32	; 0x3f32 <__mulsf3>
    2ad4:	20 e0       	ldi	r18, 0x00	; 0
    2ad6:	34 e2       	ldi	r19, 0x24	; 36
    2ad8:	40 e2       	ldi	r20, 0x20	; 32
    2ada:	56 e4       	ldi	r21, 0x46	; 70
    2adc:	f7 d7       	rcall	.+4078   	; 0x3acc <__addsf3>
    2ade:	a4 01       	movw	r20, r8
    2ae0:	93 01       	movw	r18, r6
    2ae2:	f4 d7       	rcall	.+4072   	; 0x3acc <__addsf3>
    2ae4:	a8 01       	movw	r20, r16
    2ae6:	97 01       	movw	r18, r14
    2ae8:	f1 d7       	rcall	.+4066   	; 0x3acc <__addsf3>
    2aea:	7b 01       	movw	r14, r22
    2aec:	8c 01       	movw	r16, r24
    2aee:	69 96       	adiw	r28, 0x19	; 25
    2af0:	6c ad       	ldd	r22, Y+60	; 0x3c
    2af2:	7d ad       	ldd	r23, Y+61	; 0x3d
    2af4:	8e ad       	ldd	r24, Y+62	; 0x3e
    2af6:	9f ad       	ldd	r25, Y+63	; 0x3f
    2af8:	69 97       	sbiw	r28, 0x19	; 25
    2afa:	20 e0       	ldi	r18, 0x00	; 0
    2afc:	30 e0       	ldi	r19, 0x00	; 0
    2afe:	4d e9       	ldi	r20, 0x9D	; 157
    2b00:	53 ec       	ldi	r21, 0xC3	; 195
    2b02:	0e 94 99 1f 	call	0x3f32	; 0x3f32 <__mulsf3>
    2b06:	9b 01       	movw	r18, r22
    2b08:	ac 01       	movw	r20, r24
    2b0a:	c8 01       	movw	r24, r16
    2b0c:	b7 01       	movw	r22, r14
    2b0e:	de d7       	rcall	.+4028   	; 0x3acc <__addsf3>
    2b10:	a6 01       	movw	r20, r12
    2b12:	95 01       	movw	r18, r10
    2b14:	db d7       	rcall	.+4022   	; 0x3acc <__addsf3>
    2b16:	5b 01       	movw	r10, r22
    2b18:	6c 01       	movw	r12, r24
    2b1a:	c2 01       	movw	r24, r4
    2b1c:	b1 01       	movw	r22, r2
    2b1e:	a2 01       	movw	r20, r4
    2b20:	91 01       	movw	r18, r2
    2b22:	d4 d7       	rcall	.+4008   	; 0x3acc <__addsf3>
    2b24:	7b 01       	movw	r14, r22
    2b26:	8c 01       	movw	r16, r24
    2b28:	69 96       	adiw	r28, 0x19	; 25
    2b2a:	6c ad       	ldd	r22, Y+60	; 0x3c
    2b2c:	7d ad       	ldd	r23, Y+61	; 0x3d
    2b2e:	8e ad       	ldd	r24, Y+62	; 0x3e
    2b30:	9f ad       	ldd	r25, Y+63	; 0x3f
    2b32:	69 97       	sbiw	r28, 0x19	; 25
    2b34:	20 e0       	ldi	r18, 0x00	; 0
    2b36:	30 e0       	ldi	r19, 0x00	; 0
    2b38:	46 ed       	ldi	r20, 0xD6	; 214
    2b3a:	52 e4       	ldi	r21, 0x42	; 66
    2b3c:	c6 d7       	rcall	.+3980   	; 0x3aca <__subsf3>
    2b3e:	9b 01       	movw	r18, r22
    2b40:	ac 01       	movw	r20, r24
    2b42:	c8 01       	movw	r24, r16
    2b44:	b7 01       	movw	r22, r14
    2b46:	0e 94 99 1f 	call	0x3f32	; 0x3f32 <__mulsf3>
    2b4a:	9b 01       	movw	r18, r22
    2b4c:	ac 01       	movw	r20, r24
    2b4e:	c6 01       	movw	r24, r12
    2b50:	b5 01       	movw	r22, r10
    2b52:	bc d7       	rcall	.+3960   	; 0x3acc <__addsf3>
    2b54:	5b 01       	movw	r10, r22
    2b56:	6c 01       	movw	r12, r24
    2b58:	69 ad       	ldd	r22, Y+57	; 0x39
    2b5a:	7a ad       	ldd	r23, Y+58	; 0x3a
    2b5c:	8b ad       	ldd	r24, Y+59	; 0x3b
    2b5e:	9c ad       	ldd	r25, Y+60	; 0x3c
    2b60:	27 ed       	ldi	r18, 0xD7	; 215
    2b62:	33 eb       	ldi	r19, 0xB3	; 179
    2b64:	4d e5       	ldi	r20, 0x5D	; 93
    2b66:	51 ec       	ldi	r21, 0xC1	; 193
    2b68:	0e 94 99 1f 	call	0x3f32	; 0x3f32 <__mulsf3>
    2b6c:	7b 01       	movw	r14, r22
    2b6e:	8c 01       	movw	r16, r24
    2b70:	c2 01       	movw	r24, r4
    2b72:	b1 01       	movw	r22, r2
    2b74:	20 e0       	ldi	r18, 0x00	; 0
    2b76:	30 e0       	ldi	r19, 0x00	; 0
    2b78:	4d e1       	ldi	r20, 0x1D	; 29
    2b7a:	53 e4       	ldi	r21, 0x43	; 67
    2b7c:	a6 d7       	rcall	.+3916   	; 0x3aca <__subsf3>
    2b7e:	9b 01       	movw	r18, r22
    2b80:	ac 01       	movw	r20, r24
    2b82:	69 96       	adiw	r28, 0x19	; 25
    2b84:	6c ad       	ldd	r22, Y+60	; 0x3c
    2b86:	7d ad       	ldd	r23, Y+61	; 0x3d
    2b88:	8e ad       	ldd	r24, Y+62	; 0x3e
    2b8a:	9f ad       	ldd	r25, Y+63	; 0x3f
    2b8c:	69 97       	sbiw	r28, 0x19	; 25
    2b8e:	9e d7       	rcall	.+3900   	; 0x3acc <__addsf3>
    2b90:	9b 01       	movw	r18, r22
    2b92:	ac 01       	movw	r20, r24
    2b94:	c8 01       	movw	r24, r16
    2b96:	b7 01       	movw	r22, r14
    2b98:	0e 94 99 1f 	call	0x3f32	; 0x3f32 <__mulsf3>
    2b9c:	9b 01       	movw	r18, r22
    2b9e:	ac 01       	movw	r20, r24
    2ba0:	c6 01       	movw	r24, r12
    2ba2:	b5 01       	movw	r22, r10
    2ba4:	93 d7       	rcall	.+3878   	; 0x3acc <__addsf3>
    2ba6:	5b 01       	movw	r10, r22
    2ba8:	6c 01       	movw	r12, r24
    2baa:	61 96       	adiw	r28, 0x11	; 17
    2bac:	6c ad       	ldd	r22, Y+60	; 0x3c
    2bae:	7d ad       	ldd	r23, Y+61	; 0x3d
    2bb0:	8e ad       	ldd	r24, Y+62	; 0x3e
    2bb2:	9f ad       	ldd	r25, Y+63	; 0x3f
    2bb4:	61 97       	sbiw	r28, 0x11	; 17
    2bb6:	9b 01       	movw	r18, r22
    2bb8:	ac 01       	movw	r20, r24
    2bba:	88 d7       	rcall	.+3856   	; 0x3acc <__addsf3>
    2bbc:	7b 01       	movw	r14, r22
    2bbe:	8c 01       	movw	r16, r24
    2bc0:	c2 01       	movw	r24, r4
    2bc2:	b1 01       	movw	r22, r2
    2bc4:	20 e0       	ldi	r18, 0x00	; 0
    2bc6:	30 e0       	ldi	r19, 0x00	; 0
    2bc8:	45 e0       	ldi	r20, 0x05	; 5
    2bca:	53 e4       	ldi	r21, 0x43	; 67
    2bcc:	7e d7       	rcall	.+3836   	; 0x3aca <__subsf3>
    2bce:	9b 01       	movw	r18, r22
    2bd0:	ac 01       	movw	r20, r24
    2bd2:	69 96       	adiw	r28, 0x19	; 25
    2bd4:	6c ad       	ldd	r22, Y+60	; 0x3c
    2bd6:	7d ad       	ldd	r23, Y+61	; 0x3d
    2bd8:	8e ad       	ldd	r24, Y+62	; 0x3e
    2bda:	9f ad       	ldd	r25, Y+63	; 0x3f
    2bdc:	69 97       	sbiw	r28, 0x19	; 25
    2bde:	76 d7       	rcall	.+3820   	; 0x3acc <__addsf3>
    2be0:	9b 01       	movw	r18, r22
    2be2:	ac 01       	movw	r20, r24
    2be4:	c8 01       	movw	r24, r16
    2be6:	b7 01       	movw	r22, r14
    2be8:	0e 94 99 1f 	call	0x3f32	; 0x3f32 <__mulsf3>
    2bec:	9b 01       	movw	r18, r22
    2bee:	ac 01       	movw	r20, r24
    2bf0:	c6 01       	movw	r24, r12
    2bf2:	b5 01       	movw	r22, r10
    2bf4:	6b d7       	rcall	.+3798   	; 0x3acc <__addsf3>
    2bf6:	9b 01       	movw	r18, r22
    2bf8:	ac 01       	movw	r20, r24
    2bfa:	2d 96       	adiw	r28, 0x0d	; 13
    2bfc:	6c ad       	ldd	r22, Y+60	; 0x3c
    2bfe:	7d ad       	ldd	r23, Y+61	; 0x3d
    2c00:	8e ad       	ldd	r24, Y+62	; 0x3e
    2c02:	9f ad       	ldd	r25, Y+63	; 0x3f
    2c04:	2d 97       	sbiw	r28, 0x0d	; 13
    2c06:	0e 94 99 1f 	call	0x3f32	; 0x3f32 <__mulsf3>
    2c0a:	0e 94 52 20 	call	0x40a4	; 0x40a4 <sqrt>
    2c0e:	5b 01       	movw	r10, r22
    2c10:	6c 01       	movw	r12, r24
    2c12:	69 ad       	ldd	r22, Y+57	; 0x39
    2c14:	7a ad       	ldd	r23, Y+58	; 0x3a
    2c16:	8b ad       	ldd	r24, Y+59	; 0x3b
    2c18:	9c ad       	ldd	r25, Y+60	; 0x3c
    2c1a:	27 ed       	ldi	r18, 0xD7	; 215
    2c1c:	33 eb       	ldi	r19, 0xB3	; 179
    2c1e:	4d ed       	ldi	r20, 0xDD	; 221
    2c20:	50 ec       	ldi	r21, 0xC0	; 192
    2c22:	0e 94 99 1f 	call	0x3f32	; 0x3f32 <__mulsf3>
    2c26:	20 e0       	ldi	r18, 0x00	; 0
    2c28:	30 e0       	ldi	r19, 0x00	; 0
    2c2a:	40 e4       	ldi	r20, 0x40	; 64
    2c2c:	51 e4       	ldi	r21, 0x41	; 65
    2c2e:	4e d7       	rcall	.+3740   	; 0x3acc <__addsf3>
    2c30:	9b 01       	movw	r18, r22
    2c32:	ac 01       	movw	r20, r24
    2c34:	61 96       	adiw	r28, 0x11	; 17
    2c36:	6c ad       	ldd	r22, Y+60	; 0x3c
    2c38:	7d ad       	ldd	r23, Y+61	; 0x3d
    2c3a:	8e ad       	ldd	r24, Y+62	; 0x3e
    2c3c:	9f ad       	ldd	r25, Y+63	; 0x3f
    2c3e:	61 97       	sbiw	r28, 0x11	; 17
    2c40:	45 d7       	rcall	.+3722   	; 0x3acc <__addsf3>
    2c42:	9b 01       	movw	r18, r22
    2c44:	ac 01       	movw	r20, r24
    2c46:	69 96       	adiw	r28, 0x19	; 25
    2c48:	6c ad       	ldd	r22, Y+60	; 0x3c
    2c4a:	7d ad       	ldd	r23, Y+61	; 0x3d
    2c4c:	8e ad       	ldd	r24, Y+62	; 0x3e
    2c4e:	9f ad       	ldd	r25, Y+63	; 0x3f
    2c50:	69 97       	sbiw	r28, 0x19	; 25
    2c52:	3c d7       	rcall	.+3704   	; 0x3acc <__addsf3>
    2c54:	20 e0       	ldi	r18, 0x00	; 0
    2c56:	30 e0       	ldi	r19, 0x00	; 0
    2c58:	40 e2       	ldi	r20, 0x20	; 32
    2c5a:	51 ec       	ldi	r21, 0xC1	; 193
    2c5c:	0e 94 99 1f 	call	0x3f32	; 0x3f32 <__mulsf3>
    2c60:	7b 01       	movw	r14, r22
    2c62:	8c 01       	movw	r16, r24
    2c64:	29 96       	adiw	r28, 0x09	; 9
    2c66:	6c ad       	ldd	r22, Y+60	; 0x3c
    2c68:	7d ad       	ldd	r23, Y+61	; 0x3d
    2c6a:	8e ad       	ldd	r24, Y+62	; 0x3e
    2c6c:	9f ad       	ldd	r25, Y+63	; 0x3f
    2c6e:	29 97       	sbiw	r28, 0x09	; 9
    2c70:	a6 01       	movw	r20, r12
    2c72:	95 01       	movw	r18, r10
    2c74:	2b d7       	rcall	.+3670   	; 0x3acc <__addsf3>
    2c76:	a8 01       	movw	r20, r16
    2c78:	97 01       	movw	r18, r14
    2c7a:	93 d7       	rcall	.+3878   	; 0x3ba2 <__divsf3>
    2c7c:	3b 01       	movw	r6, r22
    2c7e:	4c 01       	movw	r8, r24
                  + pow(p.x, 4) + pow(p.y, 4) - 314 * pow(p.z, 2) +
                  pow(p.z, 4) + 2 * pow(p.y, 2) * (-107 + pow(p.z, 2)) -
                  8 * sqrt(3) * p.x * (-157 + pow(p.y, 2) + pow(p.z, 2))
                  + 2 * pow(p.x, 2) * (-133 + pow(p.y, 2) +
                  pow(p.z, 2))))) / (10 * (12 - 4 * sqrt(3) * p.x +
                  pow(p.x, 2) + pow(p.z, 2)));
    2c80:	29 96       	adiw	r28, 0x09	; 9
    2c82:	6c ad       	ldd	r22, Y+60	; 0x3c
    2c84:	7d ad       	ldd	r23, Y+61	; 0x3d
    2c86:	8e ad       	ldd	r24, Y+62	; 0x3e
    2c88:	9f ad       	ldd	r25, Y+63	; 0x3f
    2c8a:	29 97       	sbiw	r28, 0x09	; 9
    2c8c:	a6 01       	movw	r20, r12
    2c8e:	95 01       	movw	r18, r10
    2c90:	1c d7       	rcall	.+3640   	; 0x3aca <__subsf3>
    2c92:	a8 01       	movw	r20, r16
    2c94:	97 01       	movw	r18, r14
    2c96:	85 d7       	rcall	.+3850   	; 0x3ba2 <__divsf3>
    2c98:	7b 01       	movw	r14, r22
    2c9a:	8c 01       	movw	r16, r24
    
	if (fabs(arg1) > 1.0)
    2c9c:	c4 01       	movw	r24, r8
    2c9e:	b3 01       	movw	r22, r6
    2ca0:	9f 77       	andi	r25, 0x7F	; 127
    2ca2:	20 e0       	ldi	r18, 0x00	; 0
    2ca4:	30 e0       	ldi	r19, 0x00	; 0
    2ca6:	40 e8       	ldi	r20, 0x80	; 128
    2ca8:	5f e3       	ldi	r21, 0x3F	; 63
    2caa:	0e 94 95 1f 	call	0x3f2a	; 0x3f2a <__gesf2>
    2cae:	18 16       	cp	r1, r24
    2cb0:	0c f0       	brlt	.+2      	; 0x2cb4 <getAngle1+0x458>
    2cb2:	49 c0       	rjmp	.+146    	; 0x2d46 <getAngle1+0x4ea>
    {
        if (fabs(arg1 - 1.0) < 0.0001) /* Slightly over 1 (from rounding error) */
    2cb4:	c4 01       	movw	r24, r8
    2cb6:	b3 01       	movw	r22, r6
    2cb8:	20 e0       	ldi	r18, 0x00	; 0
    2cba:	30 e0       	ldi	r19, 0x00	; 0
    2cbc:	40 e8       	ldi	r20, 0x80	; 128
    2cbe:	5f e3       	ldi	r21, 0x3F	; 63
    2cc0:	04 d7       	rcall	.+3592   	; 0x3aca <__subsf3>
    2cc2:	9f 77       	andi	r25, 0x7F	; 127
    2cc4:	27 e1       	ldi	r18, 0x17	; 23
    2cc6:	37 eb       	ldi	r19, 0xB7	; 183
    2cc8:	41 ed       	ldi	r20, 0xD1	; 209
    2cca:	58 e3       	ldi	r21, 0x38	; 56
    2ccc:	63 d7       	rcall	.+3782   	; 0x3b94 <__cmpsf2>
    2cce:	88 23       	and	r24, r24
    2cd0:	6c f4       	brge	.+26     	; 0x2cec <getAngle1+0x490>
		{
			options[0] = 0;
    2cd2:	80 e0       	ldi	r24, 0x00	; 0
    2cd4:	90 e0       	ldi	r25, 0x00	; 0
    2cd6:	a0 e0       	ldi	r26, 0x00	; 0
    2cd8:	b0 e0       	ldi	r27, 0x00	; 0
    2cda:	89 83       	std	Y+1, r24	; 0x01
    2cdc:	9a 83       	std	Y+2, r25	; 0x02
    2cde:	ab 83       	std	Y+3, r26	; 0x03
    2ce0:	bc 83       	std	Y+4, r27	; 0x04
			options[1] = 0;
    2ce2:	8d 83       	std	Y+5, r24	; 0x05
    2ce4:	9e 83       	std	Y+6, r25	; 0x06
    2ce6:	af 83       	std	Y+7, r26	; 0x07
    2ce8:	b8 87       	std	Y+8, r27	; 0x08
    2cea:	39 c0       	rjmp	.+114    	; 0x2d5e <getAngle1+0x502>
		}
		else if (fabs(arg1 - (-1.0)) < 0.0001) /* Slightly less than 1 (from rounding error) */
    2cec:	c4 01       	movw	r24, r8
    2cee:	b3 01       	movw	r22, r6
    2cf0:	20 e0       	ldi	r18, 0x00	; 0
    2cf2:	30 e0       	ldi	r19, 0x00	; 0
    2cf4:	40 e8       	ldi	r20, 0x80	; 128
    2cf6:	5f e3       	ldi	r21, 0x3F	; 63
    2cf8:	e9 d6       	rcall	.+3538   	; 0x3acc <__addsf3>
    2cfa:	9f 77       	andi	r25, 0x7F	; 127
    2cfc:	27 e1       	ldi	r18, 0x17	; 23
    2cfe:	37 eb       	ldi	r19, 0xB7	; 183
    2d00:	41 ed       	ldi	r20, 0xD1	; 209
    2d02:	58 e3       	ldi	r21, 0x38	; 56
    2d04:	47 d7       	rcall	.+3726   	; 0x3b94 <__cmpsf2>
    2d06:	88 23       	and	r24, r24
    2d08:	8c f4       	brge	.+34     	; 0x2d2c <getAngle1+0x4d0>
		{
			options[0] = M_PI;
    2d0a:	8b ed       	ldi	r24, 0xDB	; 219
    2d0c:	9f e0       	ldi	r25, 0x0F	; 15
    2d0e:	a9 e4       	ldi	r26, 0x49	; 73
    2d10:	b0 e4       	ldi	r27, 0x40	; 64
    2d12:	89 83       	std	Y+1, r24	; 0x01
    2d14:	9a 83       	std	Y+2, r25	; 0x02
    2d16:	ab 83       	std	Y+3, r26	; 0x03
    2d18:	bc 83       	std	Y+4, r27	; 0x04
			options[1] = -M_PI;
    2d1a:	8b ed       	ldi	r24, 0xDB	; 219
    2d1c:	9f e0       	ldi	r25, 0x0F	; 15
    2d1e:	a9 e4       	ldi	r26, 0x49	; 73
    2d20:	b0 ec       	ldi	r27, 0xC0	; 192
    2d22:	8d 83       	std	Y+5, r24	; 0x05
    2d24:	9e 83       	std	Y+6, r25	; 0x06
    2d26:	af 83       	std	Y+7, r26	; 0x07
    2d28:	b8 87       	std	Y+8, r27	; 0x08
    2d2a:	19 c0       	rjmp	.+50     	; 0x2d5e <getAngle1+0x502>
		}
		else
		{
		    options[0] = NAN;
    2d2c:	80 e0       	ldi	r24, 0x00	; 0
    2d2e:	90 e0       	ldi	r25, 0x00	; 0
    2d30:	a0 ec       	ldi	r26, 0xC0	; 192
    2d32:	bf e7       	ldi	r27, 0x7F	; 127
    2d34:	89 83       	std	Y+1, r24	; 0x01
    2d36:	9a 83       	std	Y+2, r25	; 0x02
    2d38:	ab 83       	std	Y+3, r26	; 0x03
    2d3a:	bc 83       	std	Y+4, r27	; 0x04
		    options[1] = NAN;			
    2d3c:	8d 83       	std	Y+5, r24	; 0x05
    2d3e:	9e 83       	std	Y+6, r25	; 0x06
    2d40:	af 83       	std	Y+7, r26	; 0x07
    2d42:	b8 87       	std	Y+8, r27	; 0x08
    2d44:	0c c0       	rjmp	.+24     	; 0x2d5e <getAngle1+0x502>
		}
    }
    else
    {
        options[0] = acos(arg1);
    2d46:	c4 01       	movw	r24, r8
    2d48:	b3 01       	movw	r22, r6
    2d4a:	b1 d6       	rcall	.+3426   	; 0x3aae <acos>
    2d4c:	69 83       	std	Y+1, r22	; 0x01
    2d4e:	7a 83       	std	Y+2, r23	; 0x02
    2d50:	8b 83       	std	Y+3, r24	; 0x03
    2d52:	9c 83       	std	Y+4, r25	; 0x04
        options[1] = -acos(arg1);
    2d54:	90 58       	subi	r25, 0x80	; 128
    2d56:	6d 83       	std	Y+5, r22	; 0x05
    2d58:	7e 83       	std	Y+6, r23	; 0x06
    2d5a:	8f 83       	std	Y+7, r24	; 0x07
    2d5c:	98 87       	std	Y+8, r25	; 0x08
    }
	
    if (fabs(arg2) > 1.0)
    2d5e:	c8 01       	movw	r24, r16
    2d60:	b7 01       	movw	r22, r14
    2d62:	9f 77       	andi	r25, 0x7F	; 127
    2d64:	20 e0       	ldi	r18, 0x00	; 0
    2d66:	30 e0       	ldi	r19, 0x00	; 0
    2d68:	40 e8       	ldi	r20, 0x80	; 128
    2d6a:	5f e3       	ldi	r21, 0x3F	; 63
    2d6c:	0e 94 95 1f 	call	0x3f2a	; 0x3f2a <__gesf2>
    2d70:	18 16       	cp	r1, r24
    2d72:	0c f0       	brlt	.+2      	; 0x2d76 <getAngle1+0x51a>
    2d74:	58 c0       	rjmp	.+176    	; 0x2e26 <getAngle1+0x5ca>
    {
	    if (fabs(arg2 - 1.0) < 0.0001) /* Slightly over 1 (from rounding error) */
    2d76:	c8 01       	movw	r24, r16
    2d78:	b7 01       	movw	r22, r14
    2d7a:	20 e0       	ldi	r18, 0x00	; 0
    2d7c:	30 e0       	ldi	r19, 0x00	; 0
    2d7e:	40 e8       	ldi	r20, 0x80	; 128
    2d80:	5f e3       	ldi	r21, 0x3F	; 63
    2d82:	a3 d6       	rcall	.+3398   	; 0x3aca <__subsf3>
    2d84:	9f 77       	andi	r25, 0x7F	; 127
    2d86:	27 e1       	ldi	r18, 0x17	; 23
    2d88:	37 eb       	ldi	r19, 0xB7	; 183
    2d8a:	41 ed       	ldi	r20, 0xD1	; 209
    2d8c:	58 e3       	ldi	r21, 0x38	; 56
    2d8e:	02 d7       	rcall	.+3588   	; 0x3b94 <__cmpsf2>
    2d90:	88 23       	and	r24, r24
    2d92:	e4 f4       	brge	.+56     	; 0x2dcc <getAngle1+0x570>
	    {
		    options[2] = 0;
    2d94:	80 e0       	ldi	r24, 0x00	; 0
    2d96:	90 e0       	ldi	r25, 0x00	; 0
    2d98:	a0 e0       	ldi	r26, 0x00	; 0
    2d9a:	b0 e0       	ldi	r27, 0x00	; 0
    2d9c:	89 87       	std	Y+9, r24	; 0x09
    2d9e:	9a 87       	std	Y+10, r25	; 0x0a
    2da0:	ab 87       	std	Y+11, r26	; 0x0b
    2da2:	bc 87       	std	Y+12, r27	; 0x0c
		    options[3] = 0;
    2da4:	8d 87       	std	Y+13, r24	; 0x0d
    2da6:	9e 87       	std	Y+14, r25	; 0x0e
    2da8:	af 87       	std	Y+15, r26	; 0x0f
    2daa:	b8 8b       	std	Y+16, r27	; 0x10
    2dac:	2e 01       	movw	r4, r28
    2dae:	08 94       	sec
    2db0:	41 1c       	adc	r4, r1
    2db2:	51 1c       	adc	r5, r1
    2db4:	0f 2e       	mov	r0, r31
    2db6:	f1 e1       	ldi	r31, 0x11	; 17
    2db8:	2f 2e       	mov	r2, r31
    2dba:	33 24       	eor	r3, r3
    2dbc:	f0 2d       	mov	r31, r0
    2dbe:	2c 0e       	add	r2, r28
    2dc0:	3d 1e       	adc	r3, r29
    }
	
    /* REMOVE INVALID SOLUTIONS */
    double values [4]; /* One val for each option; pick 2 smallest. */
    int i; /* Iterate over options. */
    for (i = 0; i < 4; i++)
    2dc2:	6b 96       	adiw	r28, 0x1b	; 27
    2dc4:	3f ae       	std	Y+63, r3	; 0x3f
    2dc6:	2e ae       	std	Y+62, r2	; 0x3e
    2dc8:	6b 97       	sbiw	r28, 0x1b	; 27
    2dca:	3a c0       	rjmp	.+116    	; 0x2e40 <getAngle1+0x5e4>
	    if (fabs(arg2 - 1.0) < 0.0001) /* Slightly over 1 (from rounding error) */
	    {
		    options[2] = 0;
		    options[3] = 0;
	    }
	    else if (fabs(arg2 - (-1.0)) < 0.0001) /* Slightly less than 1 (from rounding error) */
    2dcc:	c8 01       	movw	r24, r16
    2dce:	b7 01       	movw	r22, r14
    2dd0:	20 e0       	ldi	r18, 0x00	; 0
    2dd2:	30 e0       	ldi	r19, 0x00	; 0
    2dd4:	40 e8       	ldi	r20, 0x80	; 128
    2dd6:	5f e3       	ldi	r21, 0x3F	; 63
    2dd8:	79 d6       	rcall	.+3314   	; 0x3acc <__addsf3>
    2dda:	9f 77       	andi	r25, 0x7F	; 127
    2ddc:	27 e1       	ldi	r18, 0x17	; 23
    2dde:	37 eb       	ldi	r19, 0xB7	; 183
    2de0:	41 ed       	ldi	r20, 0xD1	; 209
    2de2:	58 e3       	ldi	r21, 0x38	; 56
    2de4:	d7 d6       	rcall	.+3502   	; 0x3b94 <__cmpsf2>
    2de6:	88 23       	and	r24, r24
    2de8:	8c f4       	brge	.+34     	; 0x2e0c <getAngle1+0x5b0>
	    {
		    options[2] = M_PI;
    2dea:	8b ed       	ldi	r24, 0xDB	; 219
    2dec:	9f e0       	ldi	r25, 0x0F	; 15
    2dee:	a9 e4       	ldi	r26, 0x49	; 73
    2df0:	b0 e4       	ldi	r27, 0x40	; 64
    2df2:	89 87       	std	Y+9, r24	; 0x09
    2df4:	9a 87       	std	Y+10, r25	; 0x0a
    2df6:	ab 87       	std	Y+11, r26	; 0x0b
    2df8:	bc 87       	std	Y+12, r27	; 0x0c
		    options[3] = -M_PI;
    2dfa:	8b ed       	ldi	r24, 0xDB	; 219
    2dfc:	9f e0       	ldi	r25, 0x0F	; 15
    2dfe:	a9 e4       	ldi	r26, 0x49	; 73
    2e00:	b0 ec       	ldi	r27, 0xC0	; 192
    2e02:	8d 87       	std	Y+13, r24	; 0x0d
    2e04:	9e 87       	std	Y+14, r25	; 0x0e
    2e06:	af 87       	std	Y+15, r26	; 0x0f
    2e08:	b8 8b       	std	Y+16, r27	; 0x10
    2e0a:	d0 cf       	rjmp	.-96     	; 0x2dac <getAngle1+0x550>
	    }
	    else
	    {
		    options[2] = NAN;
    2e0c:	80 e0       	ldi	r24, 0x00	; 0
    2e0e:	90 e0       	ldi	r25, 0x00	; 0
    2e10:	a0 ec       	ldi	r26, 0xC0	; 192
    2e12:	bf e7       	ldi	r27, 0x7F	; 127
    2e14:	89 87       	std	Y+9, r24	; 0x09
    2e16:	9a 87       	std	Y+10, r25	; 0x0a
    2e18:	ab 87       	std	Y+11, r26	; 0x0b
    2e1a:	bc 87       	std	Y+12, r27	; 0x0c
		    options[3] = NAN;
    2e1c:	8d 87       	std	Y+13, r24	; 0x0d
    2e1e:	9e 87       	std	Y+14, r25	; 0x0e
    2e20:	af 87       	std	Y+15, r26	; 0x0f
    2e22:	b8 8b       	std	Y+16, r27	; 0x10
    2e24:	c3 cf       	rjmp	.-122    	; 0x2dac <getAngle1+0x550>
	    }
    }
    else
    {
        options[2] = acos(arg2);
    2e26:	c8 01       	movw	r24, r16
    2e28:	b7 01       	movw	r22, r14
    2e2a:	41 d6       	rcall	.+3202   	; 0x3aae <acos>
    2e2c:	69 87       	std	Y+9, r22	; 0x09
    2e2e:	7a 87       	std	Y+10, r23	; 0x0a
    2e30:	8b 87       	std	Y+11, r24	; 0x0b
    2e32:	9c 87       	std	Y+12, r25	; 0x0c
        options[3] = -acos(arg2);
    2e34:	90 58       	subi	r25, 0x80	; 128
    2e36:	6d 87       	std	Y+13, r22	; 0x0d
    2e38:	7e 87       	std	Y+14, r23	; 0x0e
    2e3a:	8f 87       	std	Y+15, r24	; 0x0f
    2e3c:	98 8b       	std	Y+16, r25	; 0x10
    2e3e:	b6 cf       	rjmp	.-148    	; 0x2dac <getAngle1+0x550>
    /* REMOVE INVALID SOLUTIONS */
    double values [4]; /* One val for each option; pick 2 smallest. */
    int i; /* Iterate over options. */
    for (i = 0; i < 4; i++)
    {
        if (isnan(options[i]))
    2e40:	f2 01       	movw	r30, r4
    2e42:	60 80       	ld	r6, Z
    2e44:	71 80       	ldd	r7, Z+1	; 0x01
    2e46:	82 80       	ldd	r8, Z+2	; 0x02
    2e48:	93 80       	ldd	r9, Z+3	; 0x03
    2e4a:	c4 01       	movw	r24, r8
    2e4c:	b3 01       	movw	r22, r6
    2e4e:	a4 01       	movw	r20, r8
    2e50:	93 01       	movw	r18, r6
    2e52:	0e 94 90 20 	call	0x4120	; 0x4120 <__unordsf2>
    2e56:	88 23       	and	r24, r24
    2e58:	51 f0       	breq	.+20     	; 0x2e6e <getAngle1+0x612>
            values[i] = DBL_MAX;
    2e5a:	8f ef       	ldi	r24, 0xFF	; 255
    2e5c:	9f ef       	ldi	r25, 0xFF	; 255
    2e5e:	af e7       	ldi	r26, 0x7F	; 127
    2e60:	bf e7       	ldi	r27, 0x7F	; 127
    2e62:	f1 01       	movw	r30, r2
    2e64:	80 83       	st	Z, r24
    2e66:	91 83       	std	Z+1, r25	; 0x01
    2e68:	a2 83       	std	Z+2, r26	; 0x02
    2e6a:	b3 83       	std	Z+3, r27	; 0x03
    2e6c:	56 c0       	rjmp	.+172    	; 0x2f1a <getAngle1+0x6be>
        else
            values[i] =
    2e6e:	c4 01       	movw	r24, r8
    2e70:	b3 01       	movw	r22, r6
    2e72:	94 d6       	rcall	.+3368   	; 0x3b9c <cos>
    2e74:	7b 01       	movw	r14, r22
    2e76:	8c 01       	movw	r16, r24
    2e78:	69 ad       	ldd	r22, Y+57	; 0x39
    2e7a:	7a ad       	ldd	r23, Y+58	; 0x3a
    2e7c:	8b ad       	ldd	r24, Y+59	; 0x3b
    2e7e:	9c ad       	ldd	r25, Y+60	; 0x3c
    2e80:	28 ed       	ldi	r18, 0xD8	; 216
    2e82:	33 eb       	ldi	r19, 0xB3	; 179
    2e84:	4d e5       	ldi	r20, 0x5D	; 93
    2e86:	50 e4       	ldi	r21, 0x40	; 64
    2e88:	20 d6       	rcall	.+3136   	; 0x3aca <__subsf3>
    2e8a:	5b 01       	movw	r10, r22
    2e8c:	6c 01       	movw	r12, r24
    2e8e:	c8 01       	movw	r24, r16
    2e90:	b7 01       	movw	r22, r14
    2e92:	20 e0       	ldi	r18, 0x00	; 0
    2e94:	30 e0       	ldi	r19, 0x00	; 0
    2e96:	40 ea       	ldi	r20, 0xA0	; 160
    2e98:	50 ec       	ldi	r21, 0xC0	; 192
    2e9a:	0e 94 99 1f 	call	0x3f32	; 0x3f32 <__mulsf3>
    2e9e:	9b 01       	movw	r18, r22
    2ea0:	ac 01       	movw	r20, r24
    2ea2:	c6 01       	movw	r24, r12
    2ea4:	b5 01       	movw	r22, r10
    2ea6:	12 d6       	rcall	.+3108   	; 0x3acc <__addsf3>
    2ea8:	9b 01       	movw	r18, r22
    2eaa:	ac 01       	movw	r20, r24
    2eac:	0e 94 99 1f 	call	0x3f32	; 0x3f32 <__mulsf3>
    2eb0:	a6 2e       	mov	r10, r22
    2eb2:	b7 2e       	mov	r11, r23
    2eb4:	c8 2e       	mov	r12, r24
    2eb6:	d9 2e       	mov	r13, r25
    2eb8:	c4 01       	movw	r24, r8
    2eba:	b3 01       	movw	r22, r6
    2ebc:	0e 94 48 20 	call	0x4090	; 0x4090 <sin>
    2ec0:	20 e0       	ldi	r18, 0x00	; 0
    2ec2:	30 e0       	ldi	r19, 0x00	; 0
    2ec4:	40 ea       	ldi	r20, 0xA0	; 160
    2ec6:	50 ec       	ldi	r21, 0xC0	; 192
    2ec8:	0e 94 99 1f 	call	0x3f32	; 0x3f32 <__mulsf3>
    2ecc:	9b 01       	movw	r18, r22
    2ece:	ac 01       	movw	r20, r24
    2ed0:	6d a9       	ldd	r22, Y+53	; 0x35
    2ed2:	7e a9       	ldd	r23, Y+54	; 0x36
    2ed4:	8f a9       	ldd	r24, Y+55	; 0x37
    2ed6:	98 ad       	ldd	r25, Y+56	; 0x38
    2ed8:	f9 d5       	rcall	.+3058   	; 0x3acc <__addsf3>
    2eda:	9b 01       	movw	r18, r22
    2edc:	ac 01       	movw	r20, r24
    2ede:	0e 94 99 1f 	call	0x3f32	; 0x3f32 <__mulsf3>
    2ee2:	e6 2e       	mov	r14, r22
    2ee4:	f7 2e       	mov	r15, r23
    2ee6:	08 2f       	mov	r16, r24
    2ee8:	19 2f       	mov	r17, r25
    2eea:	25 96       	adiw	r28, 0x05	; 5
    2eec:	6c ad       	ldd	r22, Y+60	; 0x3c
    2eee:	7d ad       	ldd	r23, Y+61	; 0x3d
    2ef0:	8e ad       	ldd	r24, Y+62	; 0x3e
    2ef2:	9f ad       	ldd	r25, Y+63	; 0x3f
    2ef4:	25 97       	sbiw	r28, 0x05	; 5
    2ef6:	a6 01       	movw	r20, r12
    2ef8:	95 01       	movw	r18, r10
    2efa:	e8 d5       	rcall	.+3024   	; 0x3acc <__addsf3>
    2efc:	a8 01       	movw	r20, r16
    2efe:	97 01       	movw	r18, r14
    2f00:	e5 d5       	rcall	.+3018   	; 0x3acc <__addsf3>
    2f02:	20 e0       	ldi	r18, 0x00	; 0
    2f04:	30 e0       	ldi	r19, 0x00	; 0
    2f06:	40 e1       	ldi	r20, 0x10	; 16
    2f08:	53 e4       	ldi	r21, 0x43	; 67
    2f0a:	df d5       	rcall	.+3006   	; 0x3aca <__subsf3>
    2f0c:	9f 77       	andi	r25, 0x7F	; 127
    2f0e:	d1 01       	movw	r26, r2
    2f10:	6d 93       	st	X+, r22
    2f12:	7d 93       	st	X+, r23
    2f14:	8d 93       	st	X+, r24
    2f16:	9c 93       	st	X, r25
    2f18:	13 97       	sbiw	r26, 0x03	; 3
    2f1a:	e4 e0       	ldi	r30, 0x04	; 4
    2f1c:	f0 e0       	ldi	r31, 0x00	; 0
    2f1e:	4e 0e       	add	r4, r30
    2f20:	5f 1e       	adc	r5, r31
    2f22:	2e 0e       	add	r2, r30
    2f24:	3f 1e       	adc	r3, r31
    }
	
    /* REMOVE INVALID SOLUTIONS */
    double values [4]; /* One val for each option; pick 2 smallest. */
    int i; /* Iterate over options. */
    for (i = 0; i < 4; i++)
    2f26:	6b 96       	adiw	r28, 0x1b	; 27
    2f28:	8e ad       	ldd	r24, Y+62	; 0x3e
    2f2a:	9f ad       	ldd	r25, Y+63	; 0x3f
    2f2c:	6b 97       	sbiw	r28, 0x1b	; 27
    2f2e:	48 16       	cp	r4, r24
    2f30:	59 06       	cpc	r5, r25
    2f32:	09 f0       	breq	.+2      	; 0x2f36 <getAngle1+0x6da>
    2f34:	85 cf       	rjmp	.-246    	; 0x2e40 <getAngle1+0x5e4>
                + pow(p.z - 5 * sin(options[i]), 2)
                - 144);
        /* Above expression comes from original kinematics equation. */
    }
    /* Find desired indices of 'options'. */
    int ind1 = minInd1(values, sizeof(values) / sizeof(values[0]));
    2f36:	8e 01       	movw	r16, r28
    2f38:	0f 5e       	subi	r16, 0xEF	; 239
    2f3a:	1f 4f       	sbci	r17, 0xFF	; 255
    2f3c:	c8 01       	movw	r24, r16
    2f3e:	64 e0       	ldi	r22, 0x04	; 4
    2f40:	70 e0       	ldi	r23, 0x00	; 0
    2f42:	0e 94 c7 07 	call	0xf8e	; 0xf8e <minInd1>
    2f46:	7c 01       	movw	r14, r24
    int ind2 = minInd2(values, sizeof(values) / sizeof(values[0]));
    2f48:	c8 01       	movw	r24, r16
    2f4a:	64 e0       	ldi	r22, 0x04	; 4
    2f4c:	70 e0       	ldi	r23, 0x00	; 0
    2f4e:	0e 94 3c 08 	call	0x1078	; 0x1078 <minInd2>
    2f52:	bc 01       	movw	r22, r24
    /* Pick the two closest options to the original equation. */
    double viableOptions [2];
    viableOptions[0] = (ind1 == -1) ? NAN : options[ind1];
    2f54:	9f ef       	ldi	r25, 0xFF	; 255
    2f56:	e9 16       	cp	r14, r25
    2f58:	9f ef       	ldi	r25, 0xFF	; 255
    2f5a:	f9 06       	cpc	r15, r25
    2f5c:	29 f4       	brne	.+10     	; 0x2f68 <getAngle1+0x70c>
    2f5e:	20 e0       	ldi	r18, 0x00	; 0
    2f60:	30 e0       	ldi	r19, 0x00	; 0
    2f62:	40 ec       	ldi	r20, 0xC0	; 192
    2f64:	5f e7       	ldi	r21, 0x7F	; 127
    2f66:	0c c0       	rjmp	.+24     	; 0x2f80 <getAngle1+0x724>
    2f68:	c7 01       	movw	r24, r14
    2f6a:	88 0f       	add	r24, r24
    2f6c:	99 1f       	adc	r25, r25
    2f6e:	88 0f       	add	r24, r24
    2f70:	99 1f       	adc	r25, r25
    2f72:	fe 01       	movw	r30, r28
    2f74:	e8 0f       	add	r30, r24
    2f76:	f9 1f       	adc	r31, r25
    2f78:	21 81       	ldd	r18, Z+1	; 0x01
    2f7a:	32 81       	ldd	r19, Z+2	; 0x02
    2f7c:	43 81       	ldd	r20, Z+3	; 0x03
    2f7e:	54 81       	ldd	r21, Z+4	; 0x04
    viableOptions[1] = (ind2 == -1) ? NAN : options[ind2];
    2f80:	af ef       	ldi	r26, 0xFF	; 255
    2f82:	6f 3f       	cpi	r22, 0xFF	; 255
    2f84:	7a 07       	cpc	r23, r26
    2f86:	29 f4       	brne	.+10     	; 0x2f92 <getAngle1+0x736>
    2f88:	80 e0       	ldi	r24, 0x00	; 0
    2f8a:	90 e0       	ldi	r25, 0x00	; 0
    2f8c:	a0 ec       	ldi	r26, 0xC0	; 192
    2f8e:	bf e7       	ldi	r27, 0x7F	; 127
    2f90:	0c c0       	rjmp	.+24     	; 0x2faa <getAngle1+0x74e>
    2f92:	cb 01       	movw	r24, r22
    2f94:	88 0f       	add	r24, r24
    2f96:	99 1f       	adc	r25, r25
    2f98:	88 0f       	add	r24, r24
    2f9a:	99 1f       	adc	r25, r25
    2f9c:	fe 01       	movw	r30, r28
    2f9e:	e8 0f       	add	r30, r24
    2fa0:	f9 1f       	adc	r31, r25
    2fa2:	81 81       	ldd	r24, Z+1	; 0x01
    2fa4:	92 81       	ldd	r25, Z+2	; 0x02
    2fa6:	a3 81       	ldd	r26, Z+3	; 0x03
    2fa8:	b4 81       	ldd	r27, Z+4	; 0x04
    /* Find desired indices of 'options'. */
    int ind1 = minInd1(values, sizeof(values) / sizeof(values[0]));
    int ind2 = minInd2(values, sizeof(values) / sizeof(values[0]));
    /* Pick the two closest options to the original equation. */
    double viableOptions [2];
    viableOptions[0] = (ind1 == -1) ? NAN : options[ind1];
    2faa:	29 a3       	std	Y+33, r18	; 0x21
    2fac:	3a a3       	std	Y+34, r19	; 0x22
    2fae:	4b a3       	std	Y+35, r20	; 0x23
    2fb0:	5c a3       	std	Y+36, r21	; 0x24
    viableOptions[1] = (ind2 == -1) ? NAN : options[ind2];
    2fb2:	8d a3       	std	Y+37, r24	; 0x25
    2fb4:	9e a3       	std	Y+38, r25	; 0x26
    2fb6:	af a3       	std	Y+39, r26	; 0x27
    2fb8:	b8 a7       	std	Y+40, r27	; 0x28
    /* REMOVE EXTRANEOUS SOLUTION + CONVERT ANGLE*/
    return modAngle(removeExtraneous(viableOptions));
    2fba:	ce 01       	movw	r24, r28
    2fbc:	81 96       	adiw	r24, 0x21	; 33
    2fbe:	0e 94 01 07 	call	0xe02	; 0xe02 <removeExtraneous>
    2fc2:	0e 94 94 07 	call	0xf28	; 0xf28 <modAngle>
}
    2fc6:	c6 5a       	subi	r28, 0xA6	; 166
    2fc8:	df 4f       	sbci	r29, 0xFF	; 255
    2fca:	0f b6       	in	r0, 0x3f	; 63
    2fcc:	f8 94       	cli
    2fce:	de bf       	out	0x3e, r29	; 62
    2fd0:	0f be       	out	0x3f, r0	; 63
    2fd2:	cd bf       	out	0x3d, r28	; 61
    2fd4:	cf 91       	pop	r28
    2fd6:	df 91       	pop	r29
    2fd8:	1f 91       	pop	r17
    2fda:	0f 91       	pop	r16
    2fdc:	ff 90       	pop	r15
    2fde:	ef 90       	pop	r14
    2fe0:	df 90       	pop	r13
    2fe2:	cf 90       	pop	r12
    2fe4:	bf 90       	pop	r11
    2fe6:	af 90       	pop	r10
    2fe8:	9f 90       	pop	r9
    2fea:	8f 90       	pop	r8
    2fec:	7f 90       	pop	r7
    2fee:	6f 90       	pop	r6
    2ff0:	5f 90       	pop	r5
    2ff2:	4f 90       	pop	r4
    2ff4:	3f 90       	pop	r3
    2ff6:	2f 90       	pop	r2
    2ff8:	08 95       	ret

00002ffa <getAngles>:
 * to get to a desired point 'p' (in degrees & in servo coordinates), and stores
 * the result in 'angles'. If no solution exists, sets 'angles[0]', 'angles[1]',
 * and 'angles[2]' equal to NAN.
 */
void getAngles(double* angles, struct point p)
{
    2ffa:	6f 92       	push	r6
    2ffc:	7f 92       	push	r7
    2ffe:	8f 92       	push	r8
    3000:	9f 92       	push	r9
    3002:	af 92       	push	r10
    3004:	bf 92       	push	r11
    3006:	cf 92       	push	r12
    3008:	df 92       	push	r13
    300a:	ef 92       	push	r14
    300c:	ff 92       	push	r15
    300e:	0f 93       	push	r16
    3010:	1f 93       	push	r17
    3012:	df 93       	push	r29
    3014:	cf 93       	push	r28
    3016:	cd b7       	in	r28, 0x3d	; 61
    3018:	de b7       	in	r29, 0x3e	; 62
    301a:	2c 97       	sbiw	r28, 0x0c	; 12
    301c:	0f b6       	in	r0, 0x3f	; 63
    301e:	f8 94       	cli
    3020:	de bf       	out	0x3e, r29	; 62
    3022:	0f be       	out	0x3f, r0	; 63
    3024:	cd bf       	out	0x3d, r28	; 61
    3026:	3c 01       	movw	r6, r24
    3028:	8c 2c       	mov	r8, r12
    302a:	c9 82       	std	Y+1, r12	; 0x01
    302c:	9d 2c       	mov	r9, r13
    302e:	da 82       	std	Y+2, r13	; 0x02
    3030:	ae 2c       	mov	r10, r14
    3032:	eb 82       	std	Y+3, r14	; 0x03
    3034:	bf 2c       	mov	r11, r15
    3036:	fc 82       	std	Y+4, r15	; 0x04
    3038:	c0 2e       	mov	r12, r16
    303a:	0d 83       	std	Y+5, r16	; 0x05
    303c:	d1 2e       	mov	r13, r17
    303e:	1e 83       	std	Y+6, r17	; 0x06
    3040:	b2 2f       	mov	r27, r18
    3042:	2f 83       	std	Y+7, r18	; 0x07
    3044:	a3 2f       	mov	r26, r19
    3046:	38 87       	std	Y+8, r19	; 0x08
    3048:	f4 2f       	mov	r31, r20
    304a:	49 87       	std	Y+9, r20	; 0x09
    304c:	e5 2f       	mov	r30, r21
    304e:	5a 87       	std	Y+10, r21	; 0x0a
    3050:	86 2f       	mov	r24, r22
    3052:	6b 87       	std	Y+11, r22	; 0x0b
    3054:	97 2f       	mov	r25, r23
    3056:	7c 87       	std	Y+12, r23	; 0x0c
    angles[0] = getAngle1(p);
    3058:	e8 2c       	mov	r14, r8
    305a:	f9 2c       	mov	r15, r9
    305c:	0a 2d       	mov	r16, r10
    305e:	1b 2d       	mov	r17, r11
    3060:	2c 2d       	mov	r18, r12
    3062:	3d 2d       	mov	r19, r13
    3064:	4b 2f       	mov	r20, r27
    3066:	5a 2f       	mov	r21, r26
    3068:	6f 2f       	mov	r22, r31
    306a:	7e 2f       	mov	r23, r30
    306c:	f7 db       	rcall	.-2066   	; 0x285c <getAngle1>
    306e:	f3 01       	movw	r30, r6
    3070:	61 93       	st	Z+, r22
    3072:	71 93       	st	Z+, r23
    3074:	81 93       	st	Z+, r24
    3076:	91 93       	st	Z+, r25
    3078:	6f 01       	movw	r12, r30
    angles[1] = getAngle2(p);
    307a:	e9 80       	ldd	r14, Y+1	; 0x01
    307c:	fa 80       	ldd	r15, Y+2	; 0x02
    307e:	0b 81       	ldd	r16, Y+3	; 0x03
    3080:	1c 81       	ldd	r17, Y+4	; 0x04
    3082:	2d 81       	ldd	r18, Y+5	; 0x05
    3084:	3e 81       	ldd	r19, Y+6	; 0x06
    3086:	4f 81       	ldd	r20, Y+7	; 0x07
    3088:	58 85       	ldd	r21, Y+8	; 0x08
    308a:	69 85       	ldd	r22, Y+9	; 0x09
    308c:	7a 85       	ldd	r23, Y+10	; 0x0a
    308e:	8b 85       	ldd	r24, Y+11	; 0x0b
    3090:	9c 85       	ldd	r25, Y+12	; 0x0c
    3092:	0e 94 c1 0e 	call	0x1d82	; 0x1d82 <getAngle2>
    3096:	f6 01       	movw	r30, r12
    3098:	60 83       	st	Z, r22
    309a:	71 83       	std	Z+1, r23	; 0x01
    309c:	82 83       	std	Z+2, r24	; 0x02
    309e:	93 83       	std	Z+3, r25	; 0x03
    angles[2] = getAngle3(p);
    30a0:	aa 24       	eor	r10, r10
    30a2:	bb 24       	eor	r11, r11
    30a4:	68 94       	set
    30a6:	a3 f8       	bld	r10, 3
    30a8:	a6 0c       	add	r10, r6
    30aa:	b7 1c       	adc	r11, r7
    30ac:	e9 80       	ldd	r14, Y+1	; 0x01
    30ae:	fa 80       	ldd	r15, Y+2	; 0x02
    30b0:	0b 81       	ldd	r16, Y+3	; 0x03
    30b2:	1c 81       	ldd	r17, Y+4	; 0x04
    30b4:	2d 81       	ldd	r18, Y+5	; 0x05
    30b6:	3e 81       	ldd	r19, Y+6	; 0x06
    30b8:	4f 81       	ldd	r20, Y+7	; 0x07
    30ba:	58 85       	ldd	r21, Y+8	; 0x08
    30bc:	69 85       	ldd	r22, Y+9	; 0x09
    30be:	7a 85       	ldd	r23, Y+10	; 0x0a
    30c0:	8b 85       	ldd	r24, Y+11	; 0x0b
    30c2:	9c 85       	ldd	r25, Y+12	; 0x0c
    30c4:	0e 94 5a 09 	call	0x12b4	; 0x12b4 <getAngle3>
    30c8:	7b 01       	movw	r14, r22
    30ca:	8c 01       	movw	r16, r24
    30cc:	f5 01       	movw	r30, r10
    30ce:	60 83       	st	Z, r22
    30d0:	71 83       	std	Z+1, r23	; 0x01
    30d2:	82 83       	std	Z+2, r24	; 0x02
    30d4:	93 83       	std	Z+3, r25	; 0x03
    if (isnan(angles[0]) || isnan(angles[1]) || isnan(angles[2]))
    30d6:	f3 01       	movw	r30, r6
    30d8:	20 81       	ld	r18, Z
    30da:	31 81       	ldd	r19, Z+1	; 0x01
    30dc:	42 81       	ldd	r20, Z+2	; 0x02
    30de:	53 81       	ldd	r21, Z+3	; 0x03
    30e0:	ca 01       	movw	r24, r20
    30e2:	b9 01       	movw	r22, r18
    30e4:	0e 94 90 20 	call	0x4120	; 0x4120 <__unordsf2>
    30e8:	88 23       	and	r24, r24
    30ea:	99 f4       	brne	.+38     	; 0x3112 <getAngles+0x118>
    30ec:	f6 01       	movw	r30, r12
    30ee:	20 81       	ld	r18, Z
    30f0:	31 81       	ldd	r19, Z+1	; 0x01
    30f2:	42 81       	ldd	r20, Z+2	; 0x02
    30f4:	53 81       	ldd	r21, Z+3	; 0x03
    30f6:	ca 01       	movw	r24, r20
    30f8:	b9 01       	movw	r22, r18
    30fa:	0e 94 90 20 	call	0x4120	; 0x4120 <__unordsf2>
    30fe:	88 23       	and	r24, r24
    3100:	41 f4       	brne	.+16     	; 0x3112 <getAngles+0x118>
    3102:	c8 01       	movw	r24, r16
    3104:	b7 01       	movw	r22, r14
    3106:	a8 01       	movw	r20, r16
    3108:	97 01       	movw	r18, r14
    310a:	0e 94 90 20 	call	0x4120	; 0x4120 <__unordsf2>
    310e:	88 23       	and	r24, r24
    3110:	99 f0       	breq	.+38     	; 0x3138 <getAngles+0x13e>
    {
        angles[0] = NAN;
    3112:	80 e0       	ldi	r24, 0x00	; 0
    3114:	90 e0       	ldi	r25, 0x00	; 0
    3116:	a0 ec       	ldi	r26, 0xC0	; 192
    3118:	bf e7       	ldi	r27, 0x7F	; 127
    311a:	f3 01       	movw	r30, r6
    311c:	80 83       	st	Z, r24
    311e:	91 83       	std	Z+1, r25	; 0x01
    3120:	a2 83       	std	Z+2, r26	; 0x02
    3122:	b3 83       	std	Z+3, r27	; 0x03
        angles[1] = NAN;
    3124:	f6 01       	movw	r30, r12
    3126:	80 83       	st	Z, r24
    3128:	91 83       	std	Z+1, r25	; 0x01
    312a:	a2 83       	std	Z+2, r26	; 0x02
    312c:	b3 83       	std	Z+3, r27	; 0x03
        angles[2] = NAN;
    312e:	f5 01       	movw	r30, r10
    3130:	80 83       	st	Z, r24
    3132:	91 83       	std	Z+1, r25	; 0x01
    3134:	a2 83       	std	Z+2, r26	; 0x02
    3136:	b3 83       	std	Z+3, r27	; 0x03
    }
}
    3138:	2c 96       	adiw	r28, 0x0c	; 12
    313a:	0f b6       	in	r0, 0x3f	; 63
    313c:	f8 94       	cli
    313e:	de bf       	out	0x3e, r29	; 62
    3140:	0f be       	out	0x3f, r0	; 63
    3142:	cd bf       	out	0x3d, r28	; 61
    3144:	cf 91       	pop	r28
    3146:	df 91       	pop	r29
    3148:	1f 91       	pop	r17
    314a:	0f 91       	pop	r16
    314c:	ff 90       	pop	r15
    314e:	ef 90       	pop	r14
    3150:	df 90       	pop	r13
    3152:	cf 90       	pop	r12
    3154:	bf 90       	pop	r11
    3156:	af 90       	pop	r10
    3158:	9f 90       	pop	r9
    315a:	8f 90       	pop	r8
    315c:	7f 90       	pop	r7
    315e:	6f 90       	pop	r6
    3160:	08 95       	ret

00003162 <parseAll>:
	return 1;
}

//Begin general function declarations

int parseAll(char dataIn){
    3162:	ef 92       	push	r14
    3164:	ff 92       	push	r15
    3166:	0f 93       	push	r16
    3168:	1f 93       	push	r17
    316a:	68 2f       	mov	r22, r24
	int parseError = 0;
	
	switch (parseState){
    316c:	80 91 63 05 	lds	r24, 0x0563
    3170:	90 91 64 05 	lds	r25, 0x0564
    3174:	82 30       	cpi	r24, 0x02	; 2
    3176:	91 05       	cpc	r25, r1
    3178:	09 f4       	brne	.+2      	; 0x317c <parseAll+0x1a>
    317a:	67 c0       	rjmp	.+206    	; 0x324a <parseAll+0xe8>
    317c:	83 30       	cpi	r24, 0x03	; 3
    317e:	91 05       	cpc	r25, r1
    3180:	24 f4       	brge	.+8      	; 0x318a <parseAll+0x28>
    3182:	01 97       	sbiw	r24, 0x01	; 1
    3184:	09 f0       	breq	.+2      	; 0x3188 <parseAll+0x26>
    3186:	ef c1       	rjmp	.+990    	; 0x3566 <parseAll+0x404>
    3188:	08 c0       	rjmp	.+16     	; 0x319a <parseAll+0x38>
    318a:	83 30       	cpi	r24, 0x03	; 3
    318c:	91 05       	cpc	r25, r1
    318e:	09 f4       	brne	.+2      	; 0x3192 <parseAll+0x30>
    3190:	df c0       	rjmp	.+446    	; 0x3350 <parseAll+0x1ee>
    3192:	04 97       	sbiw	r24, 0x04	; 4
    3194:	09 f0       	breq	.+2      	; 0x3198 <parseAll+0x36>
    3196:	e7 c1       	rjmp	.+974    	; 0x3566 <parseAll+0x404>
    3198:	5e c1       	rjmp	.+700    	; 0x3456 <parseAll+0x2f4>
		
		case WATCH_BEGIN:
			if(dataIn == '$'){
    319a:	64 32       	cpi	r22, 0x24	; 36
    319c:	69 f5       	brne	.+90     	; 0x31f8 <parseAll+0x96>
				parseState = WATCH_X;
    319e:	82 e0       	ldi	r24, 0x02	; 2
    31a0:	90 e0       	ldi	r25, 0x00	; 0
    31a2:	90 93 64 05 	sts	0x0564, r25
    31a6:	80 93 63 05 	sts	0x0563, r24
				xBuffer = 0;
    31aa:	80 e0       	ldi	r24, 0x00	; 0
    31ac:	90 e0       	ldi	r25, 0x00	; 0
    31ae:	a0 e0       	ldi	r26, 0x00	; 0
    31b0:	b0 e0       	ldi	r27, 0x00	; 0
    31b2:	80 93 de 07 	sts	0x07DE, r24
    31b6:	90 93 df 07 	sts	0x07DF, r25
    31ba:	a0 93 e0 07 	sts	0x07E0, r26
    31be:	b0 93 e1 07 	sts	0x07E1, r27
				yBuffer = 0;
    31c2:	80 93 e2 07 	sts	0x07E2, r24
    31c6:	90 93 e3 07 	sts	0x07E3, r25
    31ca:	a0 93 e4 07 	sts	0x07E4, r26
    31ce:	b0 93 e5 07 	sts	0x07E5, r27
				zBuffer = 0;
    31d2:	80 93 67 05 	sts	0x0567, r24
    31d6:	90 93 68 05 	sts	0x0568, r25
    31da:	a0 93 69 05 	sts	0x0569, r26
    31de:	b0 93 6a 05 	sts	0x056A, r27
				signState = POSITIVE;	
    31e2:	87 e0       	ldi	r24, 0x07	; 7
    31e4:	90 e0       	ldi	r25, 0x00	; 0
    31e6:	90 93 6c 05 	sts	0x056C, r25
    31ea:	80 93 6b 05 	sts	0x056B, r24
				printf("\nReading Packet...\n");
    31ee:	81 eb       	ldi	r24, 0xB1	; 177
    31f0:	93 e0       	ldi	r25, 0x03	; 3
    31f2:	0e 94 eb 26 	call	0x4dd6	; 0x4dd6 <puts>
    31f6:	b7 c1       	rjmp	.+878    	; 0x3566 <parseAll+0x404>
			}
			else if((dataIn == 'y') && (dataState == CONFIRM_DATA)){
    31f8:	69 37       	cpi	r22, 0x79	; 121
    31fa:	69 f4       	brne	.+26     	; 0x3216 <parseAll+0xb4>
    31fc:	80 91 65 05 	lds	r24, 0x0565
    3200:	90 91 66 05 	lds	r25, 0x0566
    3204:	09 97       	sbiw	r24, 0x09	; 9
    3206:	d1 f4       	brne	.+52     	; 0x323c <parseAll+0xda>
				dataState = SEND_DATA;
    3208:	8a e0       	ldi	r24, 0x0A	; 10
    320a:	90 e0       	ldi	r25, 0x00	; 0
    320c:	90 93 66 05 	sts	0x0566, r25
    3210:	80 93 65 05 	sts	0x0565, r24
    3214:	a8 c1       	rjmp	.+848    	; 0x3566 <parseAll+0x404>
			}
			else if((dataIn == 'n') && (dataState == NEW_DATA)){
    3216:	6e 36       	cpi	r22, 0x6E	; 110
    3218:	89 f4       	brne	.+34     	; 0x323c <parseAll+0xda>
    321a:	80 91 65 05 	lds	r24, 0x0565
    321e:	90 91 66 05 	lds	r25, 0x0566
    3222:	06 97       	sbiw	r24, 0x06	; 6
    3224:	59 f4       	brne	.+22     	; 0x323c <parseAll+0xda>
				printf("\nAbort Send!!\n\n");
    3226:	84 ec       	ldi	r24, 0xC4	; 196
    3228:	93 e0       	ldi	r25, 0x03	; 3
    322a:	0e 94 eb 26 	call	0x4dd6	; 0x4dd6 <puts>
				dataState = OLD_DATA;
    322e:	85 e0       	ldi	r24, 0x05	; 5
    3230:	90 e0       	ldi	r25, 0x00	; 0
    3232:	90 93 66 05 	sts	0x0566, r25
    3236:	80 93 65 05 	sts	0x0565, r24
    323a:	95 c1       	rjmp	.+810    	; 0x3566 <parseAll+0x404>
			}
			else{
				dataState = OLD_DATA;
    323c:	85 e0       	ldi	r24, 0x05	; 5
    323e:	90 e0       	ldi	r25, 0x00	; 0
    3240:	90 93 66 05 	sts	0x0566, r25
    3244:	80 93 65 05 	sts	0x0565, r24
    3248:	8e c1       	rjmp	.+796    	; 0x3566 <parseAll+0x404>
				//printf("waiting on input\n");
			}
			break;
			
		case WATCH_X:
			if((dataIn == '0') | (dataIn == '1') | (dataIn == '2') | (dataIn == '3') | (dataIn == '4') | (dataIn == '5') | (dataIn == '6') | (dataIn == '7') | (dataIn == '8') | (dataIn == '9')){
    324a:	86 2f       	mov	r24, r22
    324c:	80 53       	subi	r24, 0x30	; 48
    324e:	8a 30       	cpi	r24, 0x0A	; 10
    3250:	28 f5       	brcc	.+74     	; 0x329c <parseAll+0x13a>
				xBuffer = (dataIn - '0') + xBuffer*10;
    3252:	70 e0       	ldi	r23, 0x00	; 0
    3254:	60 53       	subi	r22, 0x30	; 48
    3256:	70 40       	sbci	r23, 0x00	; 0
    3258:	88 27       	eor	r24, r24
    325a:	77 fd       	sbrc	r23, 7
    325c:	80 95       	com	r24
    325e:	98 2f       	mov	r25, r24
    3260:	3b d5       	rcall	.+2678   	; 0x3cd8 <__floatsisf>
    3262:	7b 01       	movw	r14, r22
    3264:	8c 01       	movw	r16, r24
    3266:	60 91 de 07 	lds	r22, 0x07DE
    326a:	70 91 df 07 	lds	r23, 0x07DF
    326e:	80 91 e0 07 	lds	r24, 0x07E0
    3272:	90 91 e1 07 	lds	r25, 0x07E1
    3276:	20 e0       	ldi	r18, 0x00	; 0
    3278:	30 e0       	ldi	r19, 0x00	; 0
    327a:	40 e2       	ldi	r20, 0x20	; 32
    327c:	51 e4       	ldi	r21, 0x41	; 65
    327e:	59 d6       	rcall	.+3250   	; 0x3f32 <__mulsf3>
    3280:	9b 01       	movw	r18, r22
    3282:	ac 01       	movw	r20, r24
    3284:	c8 01       	movw	r24, r16
    3286:	b7 01       	movw	r22, r14
    3288:	21 d4       	rcall	.+2114   	; 0x3acc <__addsf3>
    328a:	60 93 de 07 	sts	0x07DE, r22
    328e:	70 93 df 07 	sts	0x07DF, r23
    3292:	80 93 e0 07 	sts	0x07E0, r24
    3296:	90 93 e1 07 	sts	0x07E1, r25
    329a:	65 c1       	rjmp	.+714    	; 0x3566 <parseAll+0x404>
			}
			else if(dataIn == ','){
    329c:	6c 32       	cpi	r22, 0x2C	; 44
    329e:	09 f0       	breq	.+2      	; 0x32a2 <parseAll+0x140>
    32a0:	43 c0       	rjmp	.+134    	; 0x3328 <parseAll+0x1c6>
				parseState = WATCH_Y;
    32a2:	83 e0       	ldi	r24, 0x03	; 3
    32a4:	90 e0       	ldi	r25, 0x00	; 0
    32a6:	90 93 64 05 	sts	0x0564, r25
    32aa:	80 93 63 05 	sts	0x0563, r24
				if(signState == NEGATIVE)
    32ae:	80 91 6b 05 	lds	r24, 0x056B
    32b2:	90 91 6c 05 	lds	r25, 0x056C
    32b6:	08 97       	sbiw	r24, 0x08	; 8
    32b8:	89 f4       	brne	.+34     	; 0x32dc <parseAll+0x17a>
					xBuffer = -(xBuffer);
    32ba:	80 91 de 07 	lds	r24, 0x07DE
    32be:	90 91 df 07 	lds	r25, 0x07DF
    32c2:	a0 91 e0 07 	lds	r26, 0x07E0
    32c6:	b0 91 e1 07 	lds	r27, 0x07E1
    32ca:	b0 58       	subi	r27, 0x80	; 128
    32cc:	80 93 de 07 	sts	0x07DE, r24
    32d0:	90 93 df 07 	sts	0x07DF, r25
    32d4:	a0 93 e0 07 	sts	0x07E0, r26
    32d8:	b0 93 e1 07 	sts	0x07E1, r27
				signState = POSITIVE;
    32dc:	87 e0       	ldi	r24, 0x07	; 7
    32de:	90 e0       	ldi	r25, 0x00	; 0
    32e0:	90 93 6c 05 	sts	0x056C, r25
    32e4:	80 93 6b 05 	sts	0x056B, r24
				printf("Read X: %f thou\n", xBuffer);
    32e8:	00 d0       	rcall	.+0      	; 0x32ea <parseAll+0x188>
    32ea:	00 d0       	rcall	.+0      	; 0x32ec <parseAll+0x18a>
    32ec:	ed b7       	in	r30, 0x3d	; 61
    32ee:	fe b7       	in	r31, 0x3e	; 62
    32f0:	31 96       	adiw	r30, 0x01	; 1
    32f2:	83 ed       	ldi	r24, 0xD3	; 211
    32f4:	93 e0       	ldi	r25, 0x03	; 3
    32f6:	91 83       	std	Z+1, r25	; 0x01
    32f8:	80 83       	st	Z, r24
    32fa:	80 91 de 07 	lds	r24, 0x07DE
    32fe:	90 91 df 07 	lds	r25, 0x07DF
    3302:	a0 91 e0 07 	lds	r26, 0x07E0
    3306:	b0 91 e1 07 	lds	r27, 0x07E1
    330a:	82 83       	std	Z+2, r24	; 0x02
    330c:	93 83       	std	Z+3, r25	; 0x03
    330e:	a4 83       	std	Z+4, r26	; 0x04
    3310:	b5 83       	std	Z+5, r27	; 0x05
    3312:	0e 94 da 26 	call	0x4db4	; 0x4db4 <printf>
    3316:	8d b7       	in	r24, 0x3d	; 61
    3318:	9e b7       	in	r25, 0x3e	; 62
    331a:	06 96       	adiw	r24, 0x06	; 6
    331c:	0f b6       	in	r0, 0x3f	; 63
    331e:	f8 94       	cli
    3320:	9e bf       	out	0x3e, r25	; 62
    3322:	0f be       	out	0x3f, r0	; 63
    3324:	8d bf       	out	0x3d, r24	; 61
    3326:	1f c1       	rjmp	.+574    	; 0x3566 <parseAll+0x404>
			}
			else if(dataIn == '-'){
    3328:	6d 32       	cpi	r22, 0x2D	; 45
    332a:	39 f4       	brne	.+14     	; 0x333a <parseAll+0x1d8>
				signState = NEGATIVE;
    332c:	88 e0       	ldi	r24, 0x08	; 8
    332e:	90 e0       	ldi	r25, 0x00	; 0
    3330:	90 93 6c 05 	sts	0x056C, r25
    3334:	80 93 6b 05 	sts	0x056B, r24
    3338:	16 c1       	rjmp	.+556    	; 0x3566 <parseAll+0x404>
			}
			else{
				printf("\nBad Data!\n");
    333a:	84 ee       	ldi	r24, 0xE4	; 228
    333c:	93 e0       	ldi	r25, 0x03	; 3
    333e:	0e 94 eb 26 	call	0x4dd6	; 0x4dd6 <puts>
				parseState = WATCH_BEGIN;
    3342:	81 e0       	ldi	r24, 0x01	; 1
    3344:	90 e0       	ldi	r25, 0x00	; 0
    3346:	90 93 64 05 	sts	0x0564, r25
    334a:	80 93 63 05 	sts	0x0563, r24
    334e:	0b c1       	rjmp	.+534    	; 0x3566 <parseAll+0x404>
			}
			break;
			
		case WATCH_Y:
			if((dataIn == '0') | (dataIn == '1') | (dataIn == '2') | (dataIn == '3') | (dataIn == '4') | (dataIn == '5') | (dataIn == '6') | (dataIn == '7') | (dataIn == '8') | (dataIn == '9')){
    3350:	86 2f       	mov	r24, r22
    3352:	80 53       	subi	r24, 0x30	; 48
    3354:	8a 30       	cpi	r24, 0x0A	; 10
    3356:	28 f5       	brcc	.+74     	; 0x33a2 <parseAll+0x240>
				yBuffer = (dataIn - '0') + yBuffer*10;
    3358:	70 e0       	ldi	r23, 0x00	; 0
    335a:	60 53       	subi	r22, 0x30	; 48
    335c:	70 40       	sbci	r23, 0x00	; 0
    335e:	88 27       	eor	r24, r24
    3360:	77 fd       	sbrc	r23, 7
    3362:	80 95       	com	r24
    3364:	98 2f       	mov	r25, r24
    3366:	b8 d4       	rcall	.+2416   	; 0x3cd8 <__floatsisf>
    3368:	7b 01       	movw	r14, r22
    336a:	8c 01       	movw	r16, r24
    336c:	60 91 e2 07 	lds	r22, 0x07E2
    3370:	70 91 e3 07 	lds	r23, 0x07E3
    3374:	80 91 e4 07 	lds	r24, 0x07E4
    3378:	90 91 e5 07 	lds	r25, 0x07E5
    337c:	20 e0       	ldi	r18, 0x00	; 0
    337e:	30 e0       	ldi	r19, 0x00	; 0
    3380:	40 e2       	ldi	r20, 0x20	; 32
    3382:	51 e4       	ldi	r21, 0x41	; 65
    3384:	d6 d5       	rcall	.+2988   	; 0x3f32 <__mulsf3>
    3386:	9b 01       	movw	r18, r22
    3388:	ac 01       	movw	r20, r24
    338a:	c8 01       	movw	r24, r16
    338c:	b7 01       	movw	r22, r14
    338e:	9e d3       	rcall	.+1852   	; 0x3acc <__addsf3>
    3390:	60 93 e2 07 	sts	0x07E2, r22
    3394:	70 93 e3 07 	sts	0x07E3, r23
    3398:	80 93 e4 07 	sts	0x07E4, r24
    339c:	90 93 e5 07 	sts	0x07E5, r25
    33a0:	e2 c0       	rjmp	.+452    	; 0x3566 <parseAll+0x404>
			}
			else if(dataIn == ','){
    33a2:	6c 32       	cpi	r22, 0x2C	; 44
    33a4:	09 f0       	breq	.+2      	; 0x33a8 <parseAll+0x246>
    33a6:	43 c0       	rjmp	.+134    	; 0x342e <parseAll+0x2cc>
				parseState = WATCH_Z;
    33a8:	84 e0       	ldi	r24, 0x04	; 4
    33aa:	90 e0       	ldi	r25, 0x00	; 0
    33ac:	90 93 64 05 	sts	0x0564, r25
    33b0:	80 93 63 05 	sts	0x0563, r24
				if(signState == NEGATIVE)
    33b4:	80 91 6b 05 	lds	r24, 0x056B
    33b8:	90 91 6c 05 	lds	r25, 0x056C
    33bc:	08 97       	sbiw	r24, 0x08	; 8
    33be:	89 f4       	brne	.+34     	; 0x33e2 <parseAll+0x280>
				yBuffer = -(yBuffer);
    33c0:	80 91 e2 07 	lds	r24, 0x07E2
    33c4:	90 91 e3 07 	lds	r25, 0x07E3
    33c8:	a0 91 e4 07 	lds	r26, 0x07E4
    33cc:	b0 91 e5 07 	lds	r27, 0x07E5
    33d0:	b0 58       	subi	r27, 0x80	; 128
    33d2:	80 93 e2 07 	sts	0x07E2, r24
    33d6:	90 93 e3 07 	sts	0x07E3, r25
    33da:	a0 93 e4 07 	sts	0x07E4, r26
    33de:	b0 93 e5 07 	sts	0x07E5, r27
				signState = POSITIVE;
    33e2:	87 e0       	ldi	r24, 0x07	; 7
    33e4:	90 e0       	ldi	r25, 0x00	; 0
    33e6:	90 93 6c 05 	sts	0x056C, r25
    33ea:	80 93 6b 05 	sts	0x056B, r24
				printf("Read Y: %f thou\n", yBuffer);
    33ee:	00 d0       	rcall	.+0      	; 0x33f0 <parseAll+0x28e>
    33f0:	00 d0       	rcall	.+0      	; 0x33f2 <parseAll+0x290>
    33f2:	ed b7       	in	r30, 0x3d	; 61
    33f4:	fe b7       	in	r31, 0x3e	; 62
    33f6:	31 96       	adiw	r30, 0x01	; 1
    33f8:	8f ee       	ldi	r24, 0xEF	; 239
    33fa:	93 e0       	ldi	r25, 0x03	; 3
    33fc:	91 83       	std	Z+1, r25	; 0x01
    33fe:	80 83       	st	Z, r24
    3400:	80 91 e2 07 	lds	r24, 0x07E2
    3404:	90 91 e3 07 	lds	r25, 0x07E3
    3408:	a0 91 e4 07 	lds	r26, 0x07E4
    340c:	b0 91 e5 07 	lds	r27, 0x07E5
    3410:	82 83       	std	Z+2, r24	; 0x02
    3412:	93 83       	std	Z+3, r25	; 0x03
    3414:	a4 83       	std	Z+4, r26	; 0x04
    3416:	b5 83       	std	Z+5, r27	; 0x05
    3418:	0e 94 da 26 	call	0x4db4	; 0x4db4 <printf>
    341c:	8d b7       	in	r24, 0x3d	; 61
    341e:	9e b7       	in	r25, 0x3e	; 62
    3420:	06 96       	adiw	r24, 0x06	; 6
    3422:	0f b6       	in	r0, 0x3f	; 63
    3424:	f8 94       	cli
    3426:	9e bf       	out	0x3e, r25	; 62
    3428:	0f be       	out	0x3f, r0	; 63
    342a:	8d bf       	out	0x3d, r24	; 61
    342c:	9c c0       	rjmp	.+312    	; 0x3566 <parseAll+0x404>
			}
			else if(dataIn == '-'){
    342e:	6d 32       	cpi	r22, 0x2D	; 45
    3430:	39 f4       	brne	.+14     	; 0x3440 <parseAll+0x2de>
				signState = NEGATIVE;
    3432:	88 e0       	ldi	r24, 0x08	; 8
    3434:	90 e0       	ldi	r25, 0x00	; 0
    3436:	90 93 6c 05 	sts	0x056C, r25
    343a:	80 93 6b 05 	sts	0x056B, r24
    343e:	93 c0       	rjmp	.+294    	; 0x3566 <parseAll+0x404>
			}
			else{
				printf("\nBad Data!\n");
    3440:	84 ee       	ldi	r24, 0xE4	; 228
    3442:	93 e0       	ldi	r25, 0x03	; 3
    3444:	0e 94 eb 26 	call	0x4dd6	; 0x4dd6 <puts>
				parseState = WATCH_BEGIN;
    3448:	81 e0       	ldi	r24, 0x01	; 1
    344a:	90 e0       	ldi	r25, 0x00	; 0
    344c:	90 93 64 05 	sts	0x0564, r25
    3450:	80 93 63 05 	sts	0x0563, r24
    3454:	88 c0       	rjmp	.+272    	; 0x3566 <parseAll+0x404>
			}
			break;
			
		case WATCH_Z:
			if((dataIn == '0') | (dataIn == '1') | (dataIn == '2') | (dataIn == '3') | (dataIn == '4') | (dataIn == '5') | (dataIn == '6') | (dataIn == '7') | (dataIn == '8') | (dataIn == '9')){
    3456:	86 2f       	mov	r24, r22
    3458:	80 53       	subi	r24, 0x30	; 48
    345a:	8a 30       	cpi	r24, 0x0A	; 10
    345c:	28 f5       	brcc	.+74     	; 0x34a8 <parseAll+0x346>
				zBuffer = (dataIn - '0') + zBuffer*10;
    345e:	70 e0       	ldi	r23, 0x00	; 0
    3460:	60 53       	subi	r22, 0x30	; 48
    3462:	70 40       	sbci	r23, 0x00	; 0
    3464:	88 27       	eor	r24, r24
    3466:	77 fd       	sbrc	r23, 7
    3468:	80 95       	com	r24
    346a:	98 2f       	mov	r25, r24
    346c:	35 d4       	rcall	.+2154   	; 0x3cd8 <__floatsisf>
    346e:	7b 01       	movw	r14, r22
    3470:	8c 01       	movw	r16, r24
    3472:	60 91 67 05 	lds	r22, 0x0567
    3476:	70 91 68 05 	lds	r23, 0x0568
    347a:	80 91 69 05 	lds	r24, 0x0569
    347e:	90 91 6a 05 	lds	r25, 0x056A
    3482:	20 e0       	ldi	r18, 0x00	; 0
    3484:	30 e0       	ldi	r19, 0x00	; 0
    3486:	40 e2       	ldi	r20, 0x20	; 32
    3488:	51 e4       	ldi	r21, 0x41	; 65
    348a:	53 d5       	rcall	.+2726   	; 0x3f32 <__mulsf3>
    348c:	9b 01       	movw	r18, r22
    348e:	ac 01       	movw	r20, r24
    3490:	c8 01       	movw	r24, r16
    3492:	b7 01       	movw	r22, r14
    3494:	1b d3       	rcall	.+1590   	; 0x3acc <__addsf3>
    3496:	60 93 67 05 	sts	0x0567, r22
    349a:	70 93 68 05 	sts	0x0568, r23
    349e:	80 93 69 05 	sts	0x0569, r24
    34a2:	90 93 6a 05 	sts	0x056A, r25
    34a6:	5f c0       	rjmp	.+190    	; 0x3566 <parseAll+0x404>
			}
			else if(dataIn == '*'){ //Packet complete!
    34a8:	6a 32       	cpi	r22, 0x2A	; 42
    34aa:	09 f0       	breq	.+2      	; 0x34ae <parseAll+0x34c>
    34ac:	49 c0       	rjmp	.+146    	; 0x3540 <parseAll+0x3de>
				if(signState == NEGATIVE)
    34ae:	80 91 6b 05 	lds	r24, 0x056B
    34b2:	90 91 6c 05 	lds	r25, 0x056C
    34b6:	08 97       	sbiw	r24, 0x08	; 8
    34b8:	89 f4       	brne	.+34     	; 0x34dc <parseAll+0x37a>
				zBuffer = -(zBuffer);
    34ba:	80 91 67 05 	lds	r24, 0x0567
    34be:	90 91 68 05 	lds	r25, 0x0568
    34c2:	a0 91 69 05 	lds	r26, 0x0569
    34c6:	b0 91 6a 05 	lds	r27, 0x056A
    34ca:	b0 58       	subi	r27, 0x80	; 128
    34cc:	80 93 67 05 	sts	0x0567, r24
    34d0:	90 93 68 05 	sts	0x0568, r25
    34d4:	a0 93 69 05 	sts	0x0569, r26
    34d8:	b0 93 6a 05 	sts	0x056A, r27
				signState = POSITIVE; //reset
    34dc:	87 e0       	ldi	r24, 0x07	; 7
    34de:	90 e0       	ldi	r25, 0x00	; 0
    34e0:	90 93 6c 05 	sts	0x056C, r25
    34e4:	80 93 6b 05 	sts	0x056B, r24
				printf("Read Z: %f thou\n", zBuffer);
    34e8:	00 d0       	rcall	.+0      	; 0x34ea <parseAll+0x388>
    34ea:	00 d0       	rcall	.+0      	; 0x34ec <parseAll+0x38a>
    34ec:	ed b7       	in	r30, 0x3d	; 61
    34ee:	fe b7       	in	r31, 0x3e	; 62
    34f0:	31 96       	adiw	r30, 0x01	; 1
    34f2:	80 e0       	ldi	r24, 0x00	; 0
    34f4:	94 e0       	ldi	r25, 0x04	; 4
    34f6:	91 83       	std	Z+1, r25	; 0x01
    34f8:	80 83       	st	Z, r24
    34fa:	80 91 67 05 	lds	r24, 0x0567
    34fe:	90 91 68 05 	lds	r25, 0x0568
    3502:	a0 91 69 05 	lds	r26, 0x0569
    3506:	b0 91 6a 05 	lds	r27, 0x056A
    350a:	82 83       	std	Z+2, r24	; 0x02
    350c:	93 83       	std	Z+3, r25	; 0x03
    350e:	a4 83       	std	Z+4, r26	; 0x04
    3510:	b5 83       	std	Z+5, r27	; 0x05
    3512:	0e 94 da 26 	call	0x4db4	; 0x4db4 <printf>
				dataState = NEW_DATA; 
    3516:	86 e0       	ldi	r24, 0x06	; 6
    3518:	90 e0       	ldi	r25, 0x00	; 0
    351a:	90 93 66 05 	sts	0x0566, r25
    351e:	80 93 65 05 	sts	0x0565, r24
				parseState = WATCH_BEGIN;
    3522:	81 e0       	ldi	r24, 0x01	; 1
    3524:	90 e0       	ldi	r25, 0x00	; 0
    3526:	90 93 64 05 	sts	0x0564, r25
    352a:	80 93 63 05 	sts	0x0563, r24
    352e:	8d b7       	in	r24, 0x3d	; 61
    3530:	9e b7       	in	r25, 0x3e	; 62
    3532:	06 96       	adiw	r24, 0x06	; 6
    3534:	0f b6       	in	r0, 0x3f	; 63
    3536:	f8 94       	cli
    3538:	9e bf       	out	0x3e, r25	; 62
    353a:	0f be       	out	0x3f, r0	; 63
    353c:	8d bf       	out	0x3d, r24	; 61
    353e:	13 c0       	rjmp	.+38     	; 0x3566 <parseAll+0x404>
				
				
				
			}
			else if(dataIn == '-'){
    3540:	6d 32       	cpi	r22, 0x2D	; 45
    3542:	39 f4       	brne	.+14     	; 0x3552 <parseAll+0x3f0>
				signState = NEGATIVE;
    3544:	88 e0       	ldi	r24, 0x08	; 8
    3546:	90 e0       	ldi	r25, 0x00	; 0
    3548:	90 93 6c 05 	sts	0x056C, r25
    354c:	80 93 6b 05 	sts	0x056B, r24
    3550:	0a c0       	rjmp	.+20     	; 0x3566 <parseAll+0x404>
			}
			else{
				printf("\nbad Data\n");
    3552:	81 e1       	ldi	r24, 0x11	; 17
    3554:	94 e0       	ldi	r25, 0x04	; 4
    3556:	0e 94 eb 26 	call	0x4dd6	; 0x4dd6 <puts>
				parseState = WATCH_BEGIN;
    355a:	81 e0       	ldi	r24, 0x01	; 1
    355c:	90 e0       	ldi	r25, 0x00	; 0
    355e:	90 93 64 05 	sts	0x0564, r25
    3562:	80 93 63 05 	sts	0x0563, r24
			}
		
	}
	
	return parseError;
}
    3566:	80 e0       	ldi	r24, 0x00	; 0
    3568:	90 e0       	ldi	r25, 0x00	; 0
    356a:	1f 91       	pop	r17
    356c:	0f 91       	pop	r16
    356e:	ff 90       	pop	r15
    3570:	ef 90       	pop	r14
    3572:	08 95       	ret

00003574 <main>:
double modAngle(double angle);
int minInd1(double* lst, int length);
int minInd2(double* lst, int length);

int main(void)
{
    3574:	2f 92       	push	r2
    3576:	3f 92       	push	r3
    3578:	4f 92       	push	r4
    357a:	5f 92       	push	r5
    357c:	6f 92       	push	r6
    357e:	7f 92       	push	r7
    3580:	8f 92       	push	r8
    3582:	9f 92       	push	r9
    3584:	af 92       	push	r10
    3586:	bf 92       	push	r11
    3588:	cf 92       	push	r12
    358a:	df 92       	push	r13
    358c:	ef 92       	push	r14
    358e:	ff 92       	push	r15
    3590:	0f 93       	push	r16
    3592:	1f 93       	push	r17
    3594:	df 93       	push	r29
    3596:	cf 93       	push	r28
    3598:	cd b7       	in	r28, 0x3d	; 61
    359a:	de b7       	in	r29, 0x3e	; 62
    359c:	a2 97       	sbiw	r28, 0x22	; 34
    359e:	0f b6       	in	r0, 0x3f	; 63
    35a0:	f8 94       	cli
    35a2:	de bf       	out	0x3e, r29	; 62
    35a4:	0f be       	out	0x3f, r0	; 63
    35a6:	cd bf       	out	0x3d, r28	; 61
	
	serial_initialize(57600); // USART Initialize
    35a8:	60 e0       	ldi	r22, 0x00	; 0
    35aa:	71 ee       	ldi	r23, 0xE1	; 225
    35ac:	80 e0       	ldi	r24, 0x00	; 0
    35ae:	90 e0       	ldi	r25, 0x00	; 0
    35b0:	0e 94 ce 06 	call	0xd9c	; 0xd9c <serial_initialize>
	dxl_initialize( 0, DEFAULT_BAUDNUM ); // Not using device index. i.e., 0 indexing on device number
    35b4:	80 e0       	ldi	r24, 0x00	; 0
    35b6:	90 e0       	ldi	r25, 0x00	; 0
    35b8:	61 e0       	ldi	r22, 0x01	; 1
    35ba:	70 e0       	ldi	r23, 0x00	; 0
    35bc:	0e 94 58 03 	call	0x6b0	; 0x6b0 <dxl_initialize>
	dxl_initialize( 1, DEFAULT_BAUDNUM ); // Init #2
    35c0:	81 e0       	ldi	r24, 0x01	; 1
    35c2:	90 e0       	ldi	r25, 0x00	; 0
    35c4:	61 e0       	ldi	r22, 0x01	; 1
    35c6:	70 e0       	ldi	r23, 0x00	; 0
    35c8:	0e 94 58 03 	call	0x6b0	; 0x6b0 <dxl_initialize>
	dxl_initialize( 2, DEFAULT_BAUDNUM ); // Init #3
    35cc:	82 e0       	ldi	r24, 0x02	; 2
    35ce:	90 e0       	ldi	r25, 0x00	; 0
    35d0:	61 e0       	ldi	r22, 0x01	; 1
    35d2:	70 e0       	ldi	r23, 0x00	; 0
    35d4:	0e 94 58 03 	call	0x6b0	; 0x6b0 <dxl_initialize>
	sei(); // set enable interrupt
    35d8:	78 94       	sei
    35da:	20 e1       	ldi	r18, 0x10	; 16
    35dc:	37 e2       	ldi	r19, 0x27	; 39
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
    35de:	40 e9       	ldi	r20, 0x90	; 144
    35e0:	51 e0       	ldi	r21, 0x01	; 1
    35e2:	ca 01       	movw	r24, r20
    35e4:	01 97       	sbiw	r24, 0x01	; 1
    35e6:	f1 f7       	brne	.-4      	; 0x35e4 <main+0x70>
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    35e8:	21 50       	subi	r18, 0x01	; 1
    35ea:	30 40       	sbci	r19, 0x00	; 0
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    35ec:	d1 f7       	brne	.-12     	; 0x35e2 <main+0x6e>
	int bMoving, wPresentPos;
	int CommStatus;
	
	struct point p;
	double angles[3];
	angles[0] = 180;
    35ee:	80 e0       	ldi	r24, 0x00	; 0
    35f0:	90 e0       	ldi	r25, 0x00	; 0
    35f2:	a4 e3       	ldi	r26, 0x34	; 52
    35f4:	b3 e4       	ldi	r27, 0x43	; 67
    35f6:	8d 87       	std	Y+13, r24	; 0x0d
    35f8:	9e 87       	std	Y+14, r25	; 0x0e
    35fa:	af 87       	std	Y+15, r26	; 0x0f
    35fc:	b8 8b       	std	Y+16, r27	; 0x10
	angles[1] = 180;
    35fe:	89 8b       	std	Y+17, r24	; 0x11
    3600:	9a 8b       	std	Y+18, r25	; 0x12
    3602:	ab 8b       	std	Y+19, r26	; 0x13
    3604:	bc 8b       	std	Y+20, r27	; 0x14
	angles[2] = 180;
    3606:	8d 8b       	std	Y+21, r24	; 0x15
    3608:	9e 8b       	std	Y+22, r25	; 0x16
    360a:	af 8b       	std	Y+23, r26	; 0x17
    360c:	b8 8f       	std	Y+24, r27	; 0x18
	
	dxl_write_word( 1, P_GOAL_POSITION_L, (int) angles[0]*11.3778 ); //4096./360=11.3778  <--- Ticks per degree
    360e:	81 e0       	ldi	r24, 0x01	; 1
    3610:	90 e0       	ldi	r25, 0x00	; 0
    3612:	6e e1       	ldi	r22, 0x1E	; 30
    3614:	70 e0       	ldi	r23, 0x00	; 0
    3616:	40 e0       	ldi	r20, 0x00	; 0
    3618:	58 e0       	ldi	r21, 0x08	; 8
    361a:	0e 94 e0 02 	call	0x5c0	; 0x5c0 <dxl_write_word>
	dxl_write_word( 2, P_GOAL_POSITION_L, (int) angles[1]*11.3778 ); //Command #2
    361e:	69 89       	ldd	r22, Y+17	; 0x11
    3620:	7a 89       	ldd	r23, Y+18	; 0x12
    3622:	8b 89       	ldd	r24, Y+19	; 0x13
    3624:	9c 89       	ldd	r25, Y+20	; 0x14
    3626:	25 d3       	rcall	.+1610   	; 0x3c72 <__fixsfsi>
    3628:	88 27       	eor	r24, r24
    362a:	77 fd       	sbrc	r23, 7
    362c:	80 95       	com	r24
    362e:	98 2f       	mov	r25, r24
    3630:	53 d3       	rcall	.+1702   	; 0x3cd8 <__floatsisf>
    3632:	28 e7       	ldi	r18, 0x78	; 120
    3634:	3b e0       	ldi	r19, 0x0B	; 11
    3636:	46 e3       	ldi	r20, 0x36	; 54
    3638:	51 e4       	ldi	r21, 0x41	; 65
    363a:	7b d4       	rcall	.+2294   	; 0x3f32 <__mulsf3>
    363c:	1a d3       	rcall	.+1588   	; 0x3c72 <__fixsfsi>
    363e:	9b 01       	movw	r18, r22
    3640:	ac 01       	movw	r20, r24
    3642:	82 e0       	ldi	r24, 0x02	; 2
    3644:	90 e0       	ldi	r25, 0x00	; 0
    3646:	6e e1       	ldi	r22, 0x1E	; 30
    3648:	70 e0       	ldi	r23, 0x00	; 0
    364a:	a9 01       	movw	r20, r18
    364c:	0e 94 e0 02 	call	0x5c0	; 0x5c0 <dxl_write_word>
	dxl_write_word( 3, P_GOAL_POSITION_L, (int) angles[2]*11.3778 ); //Command #3
    3650:	6d 89       	ldd	r22, Y+21	; 0x15
    3652:	7e 89       	ldd	r23, Y+22	; 0x16
    3654:	8f 89       	ldd	r24, Y+23	; 0x17
    3656:	98 8d       	ldd	r25, Y+24	; 0x18
    3658:	0c d3       	rcall	.+1560   	; 0x3c72 <__fixsfsi>
    365a:	88 27       	eor	r24, r24
    365c:	77 fd       	sbrc	r23, 7
    365e:	80 95       	com	r24
    3660:	98 2f       	mov	r25, r24
    3662:	3a d3       	rcall	.+1652   	; 0x3cd8 <__floatsisf>
    3664:	28 e7       	ldi	r18, 0x78	; 120
    3666:	3b e0       	ldi	r19, 0x0B	; 11
    3668:	46 e3       	ldi	r20, 0x36	; 54
    366a:	51 e4       	ldi	r21, 0x41	; 65
    366c:	62 d4       	rcall	.+2244   	; 0x3f32 <__mulsf3>
    366e:	01 d3       	rcall	.+1538   	; 0x3c72 <__fixsfsi>
    3670:	9b 01       	movw	r18, r22
    3672:	ac 01       	movw	r20, r24
    3674:	83 e0       	ldi	r24, 0x03	; 3
    3676:	90 e0       	ldi	r25, 0x00	; 0
    3678:	6e e1       	ldi	r22, 0x1E	; 30
    367a:	70 e0       	ldi	r23, 0x00	; 0
    367c:	a9 01       	movw	r20, r18
    367e:	0e 94 e0 02 	call	0x5c0	; 0x5c0 <dxl_write_word>
	
	printf("Initialization complete.\n");
    3682:	8b e1       	ldi	r24, 0x1B	; 27
    3684:	94 e0       	ldi	r25, 0x04	; 4
    3686:	0e 94 eb 26 	call	0x4dd6	; 0x4dd6 <puts>
		PrintCommStatus(CommStatus);
		
		//END DYNAMIXEL DEMO CODE
		*/
		
		if(parseAll(getchar()) != 0){
    368a:	0f 2e       	mov	r0, r31
    368c:	f0 ef       	ldi	r31, 0xF0	; 240
    368e:	4f 2e       	mov	r4, r31
    3690:	f7 e0       	ldi	r31, 0x07	; 7
    3692:	5f 2e       	mov	r5, r31
    3694:	f0 2d       	mov	r31, r0
    3696:	f2 01       	movw	r30, r4
    3698:	80 81       	ld	r24, Z
    369a:	91 81       	ldd	r25, Z+1	; 0x01
    369c:	0e 94 6c 26 	call	0x4cd8	; 0x4cd8 <fgetc>
    36a0:	60 dd       	rcall	.-1344   	; 0x3162 <parseAll>
    36a2:	89 2b       	or	r24, r25
    36a4:	21 f0       	breq	.+8      	; 0x36ae <main+0x13a>
			printf("\nError!\n");
    36a6:	84 e3       	ldi	r24, 0x34	; 52
    36a8:	94 e0       	ldi	r25, 0x04	; 4
    36aa:	0e 94 eb 26 	call	0x4dd6	; 0x4dd6 <puts>
			};
		
		if(dataState == NEW_DATA){
    36ae:	80 91 65 05 	lds	r24, 0x0565
    36b2:	90 91 66 05 	lds	r25, 0x0566
    36b6:	86 30       	cpi	r24, 0x06	; 6
    36b8:	91 05       	cpc	r25, r1
    36ba:	09 f0       	breq	.+2      	; 0x36be <main+0x14a>
    36bc:	9f c1       	rjmp	.+830    	; 0x39fc <main+0x488>
			p.x = (xBuffer)/1000.;
    36be:	60 91 de 07 	lds	r22, 0x07DE
    36c2:	70 91 df 07 	lds	r23, 0x07DF
    36c6:	80 91 e0 07 	lds	r24, 0x07E0
    36ca:	90 91 e1 07 	lds	r25, 0x07E1
    36ce:	20 e0       	ldi	r18, 0x00	; 0
    36d0:	30 e0       	ldi	r19, 0x00	; 0
    36d2:	4a e7       	ldi	r20, 0x7A	; 122
    36d4:	54 e4       	ldi	r21, 0x44	; 68
    36d6:	65 d2       	rcall	.+1226   	; 0x3ba2 <__divsf3>
    36d8:	3b 01       	movw	r6, r22
    36da:	4c 01       	movw	r8, r24
    36dc:	89 a2       	std	Y+33, r8	; 0x21
    36de:	9a a2       	std	Y+34, r9	; 0x22
			p.y = (yBuffer)/1000.;
    36e0:	60 91 e2 07 	lds	r22, 0x07E2
    36e4:	70 91 e3 07 	lds	r23, 0x07E3
    36e8:	80 91 e4 07 	lds	r24, 0x07E4
    36ec:	90 91 e5 07 	lds	r25, 0x07E5
    36f0:	20 e0       	ldi	r18, 0x00	; 0
    36f2:	30 e0       	ldi	r19, 0x00	; 0
    36f4:	4a e7       	ldi	r20, 0x7A	; 122
    36f6:	54 e4       	ldi	r21, 0x44	; 68
    36f8:	54 d2       	rcall	.+1192   	; 0x3ba2 <__divsf3>
    36fa:	5b 01       	movw	r10, r22
    36fc:	6c 01       	movw	r12, r24
    36fe:	6d 8f       	std	Y+29, r22	; 0x1d
    3700:	be 8e       	std	Y+30, r11	; 0x1e
    3702:	cf 8e       	std	Y+31, r12	; 0x1f
    3704:	d8 a2       	std	Y+32, r13	; 0x20
			p.z = (zBuffer)/1000.;
    3706:	60 91 67 05 	lds	r22, 0x0567
    370a:	70 91 68 05 	lds	r23, 0x0568
    370e:	80 91 69 05 	lds	r24, 0x0569
    3712:	90 91 6a 05 	lds	r25, 0x056A
    3716:	20 e0       	ldi	r18, 0x00	; 0
    3718:	30 e0       	ldi	r19, 0x00	; 0
    371a:	4a e7       	ldi	r20, 0x7A	; 122
    371c:	54 e4       	ldi	r21, 0x44	; 68
    371e:	41 d2       	rcall	.+1154   	; 0x3ba2 <__divsf3>
    3720:	7b 01       	movw	r14, r22
    3722:	8c 01       	movw	r16, r24
    3724:	69 8f       	std	Y+25, r22	; 0x19
    3726:	fa 8e       	std	Y+26, r15	; 0x1a
    3728:	0b 8f       	std	Y+27, r16	; 0x1b
    372a:	1c 8f       	std	Y+28, r17	; 0x1c
			
			printf("\n\nNew input received\n");
    372c:	8c e3       	ldi	r24, 0x3C	; 60
    372e:	94 e0       	ldi	r25, 0x04	; 4
    3730:	0e 94 eb 26 	call	0x4dd6	; 0x4dd6 <puts>
			
			printf("\nIn inches:\nX: %f\nY: %f\nZ: %f\n", p.x, p.y, p.z);
    3734:	8d b7       	in	r24, 0x3d	; 61
    3736:	9e b7       	in	r25, 0x3e	; 62
    3738:	0e 97       	sbiw	r24, 0x0e	; 14
    373a:	0f b6       	in	r0, 0x3f	; 63
    373c:	f8 94       	cli
    373e:	9e bf       	out	0x3e, r25	; 62
    3740:	0f be       	out	0x3f, r0	; 63
    3742:	8d bf       	out	0x3d, r24	; 61
    3744:	ed b7       	in	r30, 0x3d	; 61
    3746:	fe b7       	in	r31, 0x3e	; 62
    3748:	31 96       	adiw	r30, 0x01	; 1
    374a:	81 e5       	ldi	r24, 0x51	; 81
    374c:	94 e0       	ldi	r25, 0x04	; 4
    374e:	91 83       	std	Z+1, r25	; 0x01
    3750:	80 83       	st	Z, r24
    3752:	86 2d       	mov	r24, r6
    3754:	97 2d       	mov	r25, r7
    3756:	a8 2d       	mov	r26, r8
    3758:	b9 2d       	mov	r27, r9
    375a:	82 83       	std	Z+2, r24	; 0x02
    375c:	93 83       	std	Z+3, r25	; 0x03
    375e:	a4 83       	std	Z+4, r26	; 0x04
    3760:	b5 83       	std	Z+5, r27	; 0x05
    3762:	8a 2d       	mov	r24, r10
    3764:	9b 2d       	mov	r25, r11
    3766:	ac 2d       	mov	r26, r12
    3768:	bd 2d       	mov	r27, r13
    376a:	86 83       	std	Z+6, r24	; 0x06
    376c:	97 83       	std	Z+7, r25	; 0x07
    376e:	a0 87       	std	Z+8, r26	; 0x08
    3770:	b1 87       	std	Z+9, r27	; 0x09
    3772:	8e 2d       	mov	r24, r14
    3774:	9f 2d       	mov	r25, r15
    3776:	a0 2f       	mov	r26, r16
    3778:	b1 2f       	mov	r27, r17
    377a:	82 87       	std	Z+10, r24	; 0x0a
    377c:	93 87       	std	Z+11, r25	; 0x0b
    377e:	a4 87       	std	Z+12, r26	; 0x0c
    3780:	b5 87       	std	Z+13, r27	; 0x0d
    3782:	0e 94 da 26 	call	0x4db4	; 0x4db4 <printf>
			
			if (pointValid(p)){
    3786:	8e 2d       	mov	r24, r14
    3788:	9f 2d       	mov	r25, r15
    378a:	a0 2f       	mov	r26, r16
    378c:	b1 2f       	mov	r27, r17
    378e:	89 87       	std	Y+9, r24	; 0x09
    3790:	9a 87       	std	Y+10, r25	; 0x0a
    3792:	ab 87       	std	Y+11, r26	; 0x0b
    3794:	bc 87       	std	Y+12, r27	; 0x0c
    3796:	8a 2d       	mov	r24, r10
    3798:	9b 2d       	mov	r25, r11
    379a:	ac 2d       	mov	r26, r12
    379c:	bd 2d       	mov	r27, r13
    379e:	8d 83       	std	Y+5, r24	; 0x05
    37a0:	9e 83       	std	Y+6, r25	; 0x06
    37a2:	af 83       	std	Y+7, r26	; 0x07
    37a4:	b8 87       	std	Y+8, r27	; 0x08
    37a6:	86 2d       	mov	r24, r6
    37a8:	97 2d       	mov	r25, r7
    37aa:	a8 2d       	mov	r26, r8
    37ac:	b9 2d       	mov	r27, r9
    37ae:	89 83       	std	Y+1, r24	; 0x01
    37b0:	9a 83       	std	Y+2, r25	; 0x02
    37b2:	ab 83       	std	Y+3, r26	; 0x03
    37b4:	bc 83       	std	Y+4, r27	; 0x04
    37b6:	ed b7       	in	r30, 0x3d	; 61
    37b8:	fe b7       	in	r31, 0x3e	; 62
    37ba:	3e 96       	adiw	r30, 0x0e	; 14
    37bc:	0f b6       	in	r0, 0x3f	; 63
    37be:	f8 94       	cli
    37c0:	fe bf       	out	0x3e, r31	; 62
    37c2:	0f be       	out	0x3f, r0	; 63
    37c4:	ed bf       	out	0x3d, r30	; 61
    37c6:	e9 80       	ldd	r14, Y+1	; 0x01
    37c8:	fa 80       	ldd	r15, Y+2	; 0x02
    37ca:	0b 81       	ldd	r16, Y+3	; 0x03
    37cc:	1c 81       	ldd	r17, Y+4	; 0x04
    37ce:	2d 81       	ldd	r18, Y+5	; 0x05
    37d0:	3e 81       	ldd	r19, Y+6	; 0x06
    37d2:	4f 81       	ldd	r20, Y+7	; 0x07
    37d4:	58 85       	ldd	r21, Y+8	; 0x08
    37d6:	69 85       	ldd	r22, Y+9	; 0x09
    37d8:	7a 85       	ldd	r23, Y+10	; 0x0a
    37da:	8b 85       	ldd	r24, Y+11	; 0x0b
    37dc:	9c 85       	ldd	r25, Y+12	; 0x0c
    37de:	0e 94 e4 08 	call	0x11c8	; 0x11c8 <pointValid>
    37e2:	89 2b       	or	r24, r25
    37e4:	09 f4       	brne	.+2      	; 0x37e8 <main+0x274>
    37e6:	fb c0       	rjmp	.+502    	; 0x39de <main+0x46a>
				printf("\nPoint is Valid.\n");
    37e8:	80 e7       	ldi	r24, 0x70	; 112
    37ea:	94 e0       	ldi	r25, 0x04	; 4
    37ec:	0e 94 eb 26 	call	0x4dd6	; 0x4dd6 <puts>
				getAngles(angles, p);
    37f0:	29 8d       	ldd	r18, Y+25	; 0x19
    37f2:	3a 8d       	ldd	r19, Y+26	; 0x1a
    37f4:	4b 8d       	ldd	r20, Y+27	; 0x1b
    37f6:	5c 8d       	ldd	r21, Y+28	; 0x1c
    37f8:	82 2f       	mov	r24, r18
    37fa:	93 2f       	mov	r25, r19
    37fc:	a4 2f       	mov	r26, r20
    37fe:	b5 2f       	mov	r27, r21
    3800:	89 87       	std	Y+9, r24	; 0x09
    3802:	9a 87       	std	Y+10, r25	; 0x0a
    3804:	ab 87       	std	Y+11, r26	; 0x0b
    3806:	bc 87       	std	Y+12, r27	; 0x0c
    3808:	2d 8d       	ldd	r18, Y+29	; 0x1d
    380a:	3e 8d       	ldd	r19, Y+30	; 0x1e
    380c:	4f 8d       	ldd	r20, Y+31	; 0x1f
    380e:	58 a1       	ldd	r21, Y+32	; 0x20
    3810:	82 2f       	mov	r24, r18
    3812:	93 2f       	mov	r25, r19
    3814:	a4 2f       	mov	r26, r20
    3816:	b5 2f       	mov	r27, r21
    3818:	8d 83       	std	Y+5, r24	; 0x05
    381a:	9e 83       	std	Y+6, r25	; 0x06
    381c:	af 83       	std	Y+7, r26	; 0x07
    381e:	b8 87       	std	Y+8, r27	; 0x08
    3820:	49 a1       	ldd	r20, Y+33	; 0x21
    3822:	5a a1       	ldd	r21, Y+34	; 0x22
    3824:	86 2d       	mov	r24, r6
    3826:	97 2d       	mov	r25, r7
    3828:	a4 2f       	mov	r26, r20
    382a:	b5 2f       	mov	r27, r21
    382c:	89 83       	std	Y+1, r24	; 0x01
    382e:	9a 83       	std	Y+2, r25	; 0x02
    3830:	ab 83       	std	Y+3, r26	; 0x03
    3832:	bc 83       	std	Y+4, r27	; 0x04
    3834:	ce 01       	movw	r24, r28
    3836:	0d 96       	adiw	r24, 0x0d	; 13
    3838:	c9 80       	ldd	r12, Y+1	; 0x01
    383a:	da 80       	ldd	r13, Y+2	; 0x02
    383c:	eb 80       	ldd	r14, Y+3	; 0x03
    383e:	fc 80       	ldd	r15, Y+4	; 0x04
    3840:	0d 81       	ldd	r16, Y+5	; 0x05
    3842:	1e 81       	ldd	r17, Y+6	; 0x06
    3844:	2f 81       	ldd	r18, Y+7	; 0x07
    3846:	38 85       	ldd	r19, Y+8	; 0x08
    3848:	49 85       	ldd	r20, Y+9	; 0x09
    384a:	5a 85       	ldd	r21, Y+10	; 0x0a
    384c:	6b 85       	ldd	r22, Y+11	; 0x0b
    384e:	7c 85       	ldd	r23, Y+12	; 0x0c
    3850:	d4 db       	rcall	.-2136   	; 0x2ffa <getAngles>
				
				if (isnan(angles[0])){
    3852:	2d 85       	ldd	r18, Y+13	; 0x0d
    3854:	3e 85       	ldd	r19, Y+14	; 0x0e
    3856:	4f 85       	ldd	r20, Y+15	; 0x0f
    3858:	58 89       	ldd	r21, Y+16	; 0x10
    385a:	ca 01       	movw	r24, r20
    385c:	b9 01       	movw	r22, r18
    385e:	60 d4       	rcall	.+2240   	; 0x4120 <__unordsf2>
    3860:	88 23       	and	r24, r24
    3862:	69 f0       	breq	.+26     	; 0x387e <main+0x30a>
					printf("No Kinematic Solution.");
    3864:	0f 92       	push	r0
    3866:	0f 92       	push	r0
    3868:	81 e8       	ldi	r24, 0x81	; 129
    386a:	94 e0       	ldi	r25, 0x04	; 4
    386c:	ed b7       	in	r30, 0x3d	; 61
    386e:	fe b7       	in	r31, 0x3e	; 62
    3870:	92 83       	std	Z+2, r25	; 0x02
    3872:	81 83       	std	Z+1, r24	; 0x01
    3874:	0e 94 da 26 	call	0x4db4	; 0x4db4 <printf>
    3878:	0f 90       	pop	r0
    387a:	0f 90       	pop	r0
    387c:	a9 c0       	rjmp	.+338    	; 0x39d0 <main+0x45c>
				}
				else{
					printf("\nProposed position:\n");
    387e:	88 e9       	ldi	r24, 0x98	; 152
    3880:	94 e0       	ldi	r25, 0x04	; 4
    3882:	0e 94 eb 26 	call	0x4dd6	; 0x4dd6 <puts>
					printf("X Pos: %f;  Y Pos: %f;  Z Pos: %f\n", p.x, p.y, p.z);
    3886:	ed b7       	in	r30, 0x3d	; 61
    3888:	fe b7       	in	r31, 0x3e	; 62
    388a:	3e 97       	sbiw	r30, 0x0e	; 14
    388c:	0f b6       	in	r0, 0x3f	; 63
    388e:	f8 94       	cli
    3890:	fe bf       	out	0x3e, r31	; 62
    3892:	0f be       	out	0x3f, r0	; 63
    3894:	ed bf       	out	0x3d, r30	; 61
    3896:	31 96       	adiw	r30, 0x01	; 1
    3898:	8c ea       	ldi	r24, 0xAC	; 172
    389a:	94 e0       	ldi	r25, 0x04	; 4
    389c:	91 83       	std	Z+1, r25	; 0x01
    389e:	80 83       	st	Z, r24
    38a0:	49 a1       	ldd	r20, Y+33	; 0x21
    38a2:	5a a1       	ldd	r21, Y+34	; 0x22
    38a4:	86 2d       	mov	r24, r6
    38a6:	97 2d       	mov	r25, r7
    38a8:	a4 2f       	mov	r26, r20
    38aa:	b5 2f       	mov	r27, r21
    38ac:	82 83       	std	Z+2, r24	; 0x02
    38ae:	93 83       	std	Z+3, r25	; 0x03
    38b0:	a4 83       	std	Z+4, r26	; 0x04
    38b2:	b5 83       	std	Z+5, r27	; 0x05
    38b4:	2d 8d       	ldd	r18, Y+29	; 0x1d
    38b6:	3e 8d       	ldd	r19, Y+30	; 0x1e
    38b8:	4f 8d       	ldd	r20, Y+31	; 0x1f
    38ba:	58 a1       	ldd	r21, Y+32	; 0x20
    38bc:	82 2f       	mov	r24, r18
    38be:	93 2f       	mov	r25, r19
    38c0:	a4 2f       	mov	r26, r20
    38c2:	b5 2f       	mov	r27, r21
    38c4:	86 83       	std	Z+6, r24	; 0x06
    38c6:	97 83       	std	Z+7, r25	; 0x07
    38c8:	a0 87       	std	Z+8, r26	; 0x08
    38ca:	b1 87       	std	Z+9, r27	; 0x09
    38cc:	29 8d       	ldd	r18, Y+25	; 0x19
    38ce:	3a 8d       	ldd	r19, Y+26	; 0x1a
    38d0:	4b 8d       	ldd	r20, Y+27	; 0x1b
    38d2:	5c 8d       	ldd	r21, Y+28	; 0x1c
    38d4:	82 2f       	mov	r24, r18
    38d6:	93 2f       	mov	r25, r19
    38d8:	a4 2f       	mov	r26, r20
    38da:	b5 2f       	mov	r27, r21
    38dc:	82 87       	std	Z+10, r24	; 0x0a
    38de:	93 87       	std	Z+11, r25	; 0x0b
    38e0:	a4 87       	std	Z+12, r26	; 0x0c
    38e2:	b5 87       	std	Z+13, r27	; 0x0d
    38e4:	0e 94 da 26 	call	0x4db4	; 0x4db4 <printf>
					printf("Angle 1: %f;  Angle 2: %f;  Angle 3: %f\n", angles[0], angles[1], angles[2]);
    38e8:	ed b7       	in	r30, 0x3d	; 61
    38ea:	fe b7       	in	r31, 0x3e	; 62
    38ec:	31 96       	adiw	r30, 0x01	; 1
    38ee:	8f ec       	ldi	r24, 0xCF	; 207
    38f0:	94 e0       	ldi	r25, 0x04	; 4
    38f2:	91 83       	std	Z+1, r25	; 0x01
    38f4:	80 83       	st	Z, r24
    38f6:	8d 85       	ldd	r24, Y+13	; 0x0d
    38f8:	9e 85       	ldd	r25, Y+14	; 0x0e
    38fa:	af 85       	ldd	r26, Y+15	; 0x0f
    38fc:	b8 89       	ldd	r27, Y+16	; 0x10
    38fe:	82 83       	std	Z+2, r24	; 0x02
    3900:	93 83       	std	Z+3, r25	; 0x03
    3902:	a4 83       	std	Z+4, r26	; 0x04
    3904:	b5 83       	std	Z+5, r27	; 0x05
    3906:	89 89       	ldd	r24, Y+17	; 0x11
    3908:	9a 89       	ldd	r25, Y+18	; 0x12
    390a:	ab 89       	ldd	r26, Y+19	; 0x13
    390c:	bc 89       	ldd	r27, Y+20	; 0x14
    390e:	86 83       	std	Z+6, r24	; 0x06
    3910:	97 83       	std	Z+7, r25	; 0x07
    3912:	a0 87       	std	Z+8, r26	; 0x08
    3914:	b1 87       	std	Z+9, r27	; 0x09
    3916:	8d 89       	ldd	r24, Y+21	; 0x15
    3918:	9e 89       	ldd	r25, Y+22	; 0x16
    391a:	af 89       	ldd	r26, Y+23	; 0x17
    391c:	b8 8d       	ldd	r27, Y+24	; 0x18
    391e:	82 87       	std	Z+10, r24	; 0x0a
    3920:	93 87       	std	Z+11, r25	; 0x0b
    3922:	a4 87       	std	Z+12, r26	; 0x0c
    3924:	b5 87       	std	Z+13, r27	; 0x0d
    3926:	0e 94 da 26 	call	0x4db4	; 0x4db4 <printf>
					printf("Motor 1: %f;  Motor 2: %f;  Motor 3: %f\n", (int) angles[0]*11.3778, (int) angles[1]*11.3778, (int) angles[2]*11.3778);
    392a:	0d b7       	in	r16, 0x3d	; 61
    392c:	1e b7       	in	r17, 0x3e	; 62
    392e:	0f 5f       	subi	r16, 0xFF	; 255
    3930:	1f 4f       	sbci	r17, 0xFF	; 255
    3932:	88 ef       	ldi	r24, 0xF8	; 248
    3934:	94 e0       	ldi	r25, 0x04	; 4
    3936:	f8 01       	movw	r30, r16
    3938:	91 83       	std	Z+1, r25	; 0x01
    393a:	80 83       	st	Z, r24
    393c:	6d 85       	ldd	r22, Y+13	; 0x0d
    393e:	7e 85       	ldd	r23, Y+14	; 0x0e
    3940:	8f 85       	ldd	r24, Y+15	; 0x0f
    3942:	98 89       	ldd	r25, Y+16	; 0x10
    3944:	96 d1       	rcall	.+812    	; 0x3c72 <__fixsfsi>
    3946:	88 27       	eor	r24, r24
    3948:	77 fd       	sbrc	r23, 7
    394a:	80 95       	com	r24
    394c:	98 2f       	mov	r25, r24
    394e:	c4 d1       	rcall	.+904    	; 0x3cd8 <__floatsisf>
    3950:	28 e7       	ldi	r18, 0x78	; 120
    3952:	3b e0       	ldi	r19, 0x0B	; 11
    3954:	46 e3       	ldi	r20, 0x36	; 54
    3956:	51 e4       	ldi	r21, 0x41	; 65
    3958:	ec d2       	rcall	.+1496   	; 0x3f32 <__mulsf3>
    395a:	f8 01       	movw	r30, r16
    395c:	62 83       	std	Z+2, r22	; 0x02
    395e:	73 83       	std	Z+3, r23	; 0x03
    3960:	84 83       	std	Z+4, r24	; 0x04
    3962:	95 83       	std	Z+5, r25	; 0x05
    3964:	69 89       	ldd	r22, Y+17	; 0x11
    3966:	7a 89       	ldd	r23, Y+18	; 0x12
    3968:	8b 89       	ldd	r24, Y+19	; 0x13
    396a:	9c 89       	ldd	r25, Y+20	; 0x14
    396c:	82 d1       	rcall	.+772    	; 0x3c72 <__fixsfsi>
    396e:	88 27       	eor	r24, r24
    3970:	77 fd       	sbrc	r23, 7
    3972:	80 95       	com	r24
    3974:	98 2f       	mov	r25, r24
    3976:	b0 d1       	rcall	.+864    	; 0x3cd8 <__floatsisf>
    3978:	28 e7       	ldi	r18, 0x78	; 120
    397a:	3b e0       	ldi	r19, 0x0B	; 11
    397c:	46 e3       	ldi	r20, 0x36	; 54
    397e:	51 e4       	ldi	r21, 0x41	; 65
    3980:	d8 d2       	rcall	.+1456   	; 0x3f32 <__mulsf3>
    3982:	f8 01       	movw	r30, r16
    3984:	66 83       	std	Z+6, r22	; 0x06
    3986:	77 83       	std	Z+7, r23	; 0x07
    3988:	80 87       	std	Z+8, r24	; 0x08
    398a:	91 87       	std	Z+9, r25	; 0x09
    398c:	6d 89       	ldd	r22, Y+21	; 0x15
    398e:	7e 89       	ldd	r23, Y+22	; 0x16
    3990:	8f 89       	ldd	r24, Y+23	; 0x17
    3992:	98 8d       	ldd	r25, Y+24	; 0x18
    3994:	6e d1       	rcall	.+732    	; 0x3c72 <__fixsfsi>
    3996:	88 27       	eor	r24, r24
    3998:	77 fd       	sbrc	r23, 7
    399a:	80 95       	com	r24
    399c:	98 2f       	mov	r25, r24
    399e:	9c d1       	rcall	.+824    	; 0x3cd8 <__floatsisf>
    39a0:	28 e7       	ldi	r18, 0x78	; 120
    39a2:	3b e0       	ldi	r19, 0x0B	; 11
    39a4:	46 e3       	ldi	r20, 0x36	; 54
    39a6:	51 e4       	ldi	r21, 0x41	; 65
    39a8:	c4 d2       	rcall	.+1416   	; 0x3f32 <__mulsf3>
    39aa:	f8 01       	movw	r30, r16
    39ac:	62 87       	std	Z+10, r22	; 0x0a
    39ae:	73 87       	std	Z+11, r23	; 0x0b
    39b0:	84 87       	std	Z+12, r24	; 0x0c
    39b2:	95 87       	std	Z+13, r25	; 0x0d
    39b4:	0e 94 da 26 	call	0x4db4	; 0x4db4 <printf>
					printf("Confirm? (y/n)\n");
    39b8:	8d b7       	in	r24, 0x3d	; 61
    39ba:	9e b7       	in	r25, 0x3e	; 62
    39bc:	0e 96       	adiw	r24, 0x0e	; 14
    39be:	0f b6       	in	r0, 0x3f	; 63
    39c0:	f8 94       	cli
    39c2:	9e bf       	out	0x3e, r25	; 62
    39c4:	0f be       	out	0x3f, r0	; 63
    39c6:	8d bf       	out	0x3d, r24	; 61
    39c8:	81 e2       	ldi	r24, 0x21	; 33
    39ca:	95 e0       	ldi	r25, 0x05	; 5
    39cc:	0e 94 eb 26 	call	0x4dd6	; 0x4dd6 <puts>
				}
			
				dataState = CONFIRM_DATA;
    39d0:	e9 e0       	ldi	r30, 0x09	; 9
    39d2:	f0 e0       	ldi	r31, 0x00	; 0
    39d4:	f0 93 66 05 	sts	0x0566, r31
    39d8:	e0 93 65 05 	sts	0x0565, r30
    39dc:	5c ce       	rjmp	.-840    	; 0x3696 <main+0x122>
			}
			else{
				printf("Point is not Valid.\n");
    39de:	80 e3       	ldi	r24, 0x30	; 48
    39e0:	95 e0       	ldi	r25, 0x05	; 5
    39e2:	0e 94 eb 26 	call	0x4dd6	; 0x4dd6 <puts>
				printf("Abort.\n\n");
    39e6:	84 e4       	ldi	r24, 0x44	; 68
    39e8:	95 e0       	ldi	r25, 0x05	; 5
    39ea:	0e 94 eb 26 	call	0x4dd6	; 0x4dd6 <puts>
				dataState = OLD_DATA;
    39ee:	85 e0       	ldi	r24, 0x05	; 5
    39f0:	90 e0       	ldi	r25, 0x00	; 0
    39f2:	90 93 66 05 	sts	0x0566, r25
    39f6:	80 93 65 05 	sts	0x0565, r24
    39fa:	4d ce       	rjmp	.-870    	; 0x3696 <main+0x122>

			
			
			
		}
		else if((dataState == SEND_DATA)){
    39fc:	0a 97       	sbiw	r24, 0x0a	; 10
    39fe:	09 f0       	breq	.+2      	; 0x3a02 <main+0x48e>
    3a00:	4a ce       	rjmp	.-876    	; 0x3696 <main+0x122>
			dxl_write_word( 1, P_GOAL_POSITION_L, (int) angles[0]*11.3778 ); //4096./360=11.3778  <--- Ticks per degree
    3a02:	6d 85       	ldd	r22, Y+13	; 0x0d
    3a04:	7e 85       	ldd	r23, Y+14	; 0x0e
    3a06:	8f 85       	ldd	r24, Y+15	; 0x0f
    3a08:	98 89       	ldd	r25, Y+16	; 0x10
    3a0a:	33 d1       	rcall	.+614    	; 0x3c72 <__fixsfsi>
    3a0c:	88 27       	eor	r24, r24
    3a0e:	77 fd       	sbrc	r23, 7
    3a10:	80 95       	com	r24
    3a12:	98 2f       	mov	r25, r24
    3a14:	61 d1       	rcall	.+706    	; 0x3cd8 <__floatsisf>
    3a16:	28 e7       	ldi	r18, 0x78	; 120
    3a18:	3b e0       	ldi	r19, 0x0B	; 11
    3a1a:	46 e3       	ldi	r20, 0x36	; 54
    3a1c:	51 e4       	ldi	r21, 0x41	; 65
    3a1e:	89 d2       	rcall	.+1298   	; 0x3f32 <__mulsf3>
    3a20:	28 d1       	rcall	.+592    	; 0x3c72 <__fixsfsi>
    3a22:	9b 01       	movw	r18, r22
    3a24:	ac 01       	movw	r20, r24
    3a26:	81 e0       	ldi	r24, 0x01	; 1
    3a28:	90 e0       	ldi	r25, 0x00	; 0
    3a2a:	6e e1       	ldi	r22, 0x1E	; 30
    3a2c:	70 e0       	ldi	r23, 0x00	; 0
    3a2e:	a9 01       	movw	r20, r18
    3a30:	0e 94 e0 02 	call	0x5c0	; 0x5c0 <dxl_write_word>
			dxl_write_word( 2, P_GOAL_POSITION_L, (int) angles[1]*11.3778 ); //Command #2
    3a34:	69 89       	ldd	r22, Y+17	; 0x11
    3a36:	7a 89       	ldd	r23, Y+18	; 0x12
    3a38:	8b 89       	ldd	r24, Y+19	; 0x13
    3a3a:	9c 89       	ldd	r25, Y+20	; 0x14
    3a3c:	1a d1       	rcall	.+564    	; 0x3c72 <__fixsfsi>
    3a3e:	88 27       	eor	r24, r24
    3a40:	77 fd       	sbrc	r23, 7
    3a42:	80 95       	com	r24
    3a44:	98 2f       	mov	r25, r24
    3a46:	48 d1       	rcall	.+656    	; 0x3cd8 <__floatsisf>
    3a48:	28 e7       	ldi	r18, 0x78	; 120
    3a4a:	3b e0       	ldi	r19, 0x0B	; 11
    3a4c:	46 e3       	ldi	r20, 0x36	; 54
    3a4e:	51 e4       	ldi	r21, 0x41	; 65
    3a50:	70 d2       	rcall	.+1248   	; 0x3f32 <__mulsf3>
    3a52:	0f d1       	rcall	.+542    	; 0x3c72 <__fixsfsi>
    3a54:	9b 01       	movw	r18, r22
    3a56:	ac 01       	movw	r20, r24
    3a58:	82 e0       	ldi	r24, 0x02	; 2
    3a5a:	90 e0       	ldi	r25, 0x00	; 0
    3a5c:	6e e1       	ldi	r22, 0x1E	; 30
    3a5e:	70 e0       	ldi	r23, 0x00	; 0
    3a60:	a9 01       	movw	r20, r18
    3a62:	0e 94 e0 02 	call	0x5c0	; 0x5c0 <dxl_write_word>
			dxl_write_word( 3, P_GOAL_POSITION_L, (int) angles[2]*11.3778 ); //Command #3
    3a66:	6d 89       	ldd	r22, Y+21	; 0x15
    3a68:	7e 89       	ldd	r23, Y+22	; 0x16
    3a6a:	8f 89       	ldd	r24, Y+23	; 0x17
    3a6c:	98 8d       	ldd	r25, Y+24	; 0x18
    3a6e:	01 d1       	rcall	.+514    	; 0x3c72 <__fixsfsi>
    3a70:	88 27       	eor	r24, r24
    3a72:	77 fd       	sbrc	r23, 7
    3a74:	80 95       	com	r24
    3a76:	98 2f       	mov	r25, r24
    3a78:	2f d1       	rcall	.+606    	; 0x3cd8 <__floatsisf>
    3a7a:	28 e7       	ldi	r18, 0x78	; 120
    3a7c:	3b e0       	ldi	r19, 0x0B	; 11
    3a7e:	46 e3       	ldi	r20, 0x36	; 54
    3a80:	51 e4       	ldi	r21, 0x41	; 65
    3a82:	57 d2       	rcall	.+1198   	; 0x3f32 <__mulsf3>
    3a84:	f6 d0       	rcall	.+492    	; 0x3c72 <__fixsfsi>
    3a86:	9b 01       	movw	r18, r22
    3a88:	ac 01       	movw	r20, r24
    3a8a:	83 e0       	ldi	r24, 0x03	; 3
    3a8c:	90 e0       	ldi	r25, 0x00	; 0
    3a8e:	6e e1       	ldi	r22, 0x1E	; 30
    3a90:	70 e0       	ldi	r23, 0x00	; 0
    3a92:	a9 01       	movw	r20, r18
    3a94:	0e 94 e0 02 	call	0x5c0	; 0x5c0 <dxl_write_word>
			printf("Command sent!\n\n");
    3a98:	8c e4       	ldi	r24, 0x4C	; 76
    3a9a:	95 e0       	ldi	r25, 0x05	; 5
    3a9c:	0e 94 eb 26 	call	0x4dd6	; 0x4dd6 <puts>
			dataState = OLD_DATA;
    3aa0:	e5 e0       	ldi	r30, 0x05	; 5
    3aa2:	f0 e0       	ldi	r31, 0x00	; 0
    3aa4:	f0 93 66 05 	sts	0x0566, r31
    3aa8:	e0 93 65 05 	sts	0x0565, r30
    3aac:	f4 cd       	rjmp	.-1048   	; 0x3696 <main+0x122>

00003aae <acos>:
    3aae:	9f 93       	push	r25
    3ab0:	9f 77       	andi	r25, 0x7F	; 127
    3ab2:	4d d1       	rcall	.+666    	; 0x3d4e <__fp_arccos>
    3ab4:	0f 90       	pop	r0
    3ab6:	00 20       	and	r0, r0
    3ab8:	3a f4       	brpl	.+14     	; 0x3ac8 <acos+0x1a>
    3aba:	90 58       	subi	r25, 0x80	; 128
    3abc:	a2 ea       	ldi	r26, 0xA2	; 162
    3abe:	2a ed       	ldi	r18, 0xDA	; 218
    3ac0:	3f e0       	ldi	r19, 0x0F	; 15
    3ac2:	49 e4       	ldi	r20, 0x49	; 73
    3ac4:	50 e4       	ldi	r21, 0x40	; 64
    3ac6:	13 d0       	rcall	.+38     	; 0x3aee <__addsf3x>
    3ac8:	e5 c1       	rjmp	.+970    	; 0x3e94 <__fp_round>

00003aca <__subsf3>:
    3aca:	50 58       	subi	r21, 0x80	; 128

00003acc <__addsf3>:
    3acc:	bb 27       	eor	r27, r27
    3ace:	aa 27       	eor	r26, r26
    3ad0:	0e d0       	rcall	.+28     	; 0x3aee <__addsf3x>
    3ad2:	e0 c1       	rjmp	.+960    	; 0x3e94 <__fp_round>
    3ad4:	a9 d1       	rcall	.+850    	; 0x3e28 <__fp_pscA>
    3ad6:	30 f0       	brcs	.+12     	; 0x3ae4 <__addsf3+0x18>
    3ad8:	ae d1       	rcall	.+860    	; 0x3e36 <__fp_pscB>
    3ada:	20 f0       	brcs	.+8      	; 0x3ae4 <__addsf3+0x18>
    3adc:	31 f4       	brne	.+12     	; 0x3aea <__addsf3+0x1e>
    3ade:	9f 3f       	cpi	r25, 0xFF	; 255
    3ae0:	11 f4       	brne	.+4      	; 0x3ae6 <__addsf3+0x1a>
    3ae2:	1e f4       	brtc	.+6      	; 0x3aea <__addsf3+0x1e>
    3ae4:	79 c1       	rjmp	.+754    	; 0x3dd8 <__fp_nan>
    3ae6:	0e f4       	brtc	.+2      	; 0x3aea <__addsf3+0x1e>
    3ae8:	e0 95       	com	r30
    3aea:	e7 fb       	bst	r30, 7
    3aec:	6f c1       	rjmp	.+734    	; 0x3dcc <__fp_inf>

00003aee <__addsf3x>:
    3aee:	e9 2f       	mov	r30, r25
    3af0:	f3 d1       	rcall	.+998    	; 0x3ed8 <__fp_split3>
    3af2:	80 f3       	brcs	.-32     	; 0x3ad4 <__addsf3+0x8>
    3af4:	ba 17       	cp	r27, r26
    3af6:	62 07       	cpc	r22, r18
    3af8:	73 07       	cpc	r23, r19
    3afa:	84 07       	cpc	r24, r20
    3afc:	95 07       	cpc	r25, r21
    3afe:	18 f0       	brcs	.+6      	; 0x3b06 <__addsf3x+0x18>
    3b00:	71 f4       	brne	.+28     	; 0x3b1e <__addsf3x+0x30>
    3b02:	9e f5       	brtc	.+102    	; 0x3b6a <__addsf3x+0x7c>
    3b04:	0b c2       	rjmp	.+1046   	; 0x3f1c <__fp_zero>
    3b06:	0e f4       	brtc	.+2      	; 0x3b0a <__addsf3x+0x1c>
    3b08:	e0 95       	com	r30
    3b0a:	0b 2e       	mov	r0, r27
    3b0c:	ba 2f       	mov	r27, r26
    3b0e:	a0 2d       	mov	r26, r0
    3b10:	0b 01       	movw	r0, r22
    3b12:	b9 01       	movw	r22, r18
    3b14:	90 01       	movw	r18, r0
    3b16:	0c 01       	movw	r0, r24
    3b18:	ca 01       	movw	r24, r20
    3b1a:	a0 01       	movw	r20, r0
    3b1c:	11 24       	eor	r1, r1
    3b1e:	ff 27       	eor	r31, r31
    3b20:	59 1b       	sub	r21, r25
    3b22:	99 f0       	breq	.+38     	; 0x3b4a <__addsf3x+0x5c>
    3b24:	59 3f       	cpi	r21, 0xF9	; 249
    3b26:	50 f4       	brcc	.+20     	; 0x3b3c <__addsf3x+0x4e>
    3b28:	50 3e       	cpi	r21, 0xE0	; 224
    3b2a:	68 f1       	brcs	.+90     	; 0x3b86 <__addsf3x+0x98>
    3b2c:	1a 16       	cp	r1, r26
    3b2e:	f0 40       	sbci	r31, 0x00	; 0
    3b30:	a2 2f       	mov	r26, r18
    3b32:	23 2f       	mov	r18, r19
    3b34:	34 2f       	mov	r19, r20
    3b36:	44 27       	eor	r20, r20
    3b38:	58 5f       	subi	r21, 0xF8	; 248
    3b3a:	f3 cf       	rjmp	.-26     	; 0x3b22 <__addsf3x+0x34>
    3b3c:	46 95       	lsr	r20
    3b3e:	37 95       	ror	r19
    3b40:	27 95       	ror	r18
    3b42:	a7 95       	ror	r26
    3b44:	f0 40       	sbci	r31, 0x00	; 0
    3b46:	53 95       	inc	r21
    3b48:	c9 f7       	brne	.-14     	; 0x3b3c <__addsf3x+0x4e>
    3b4a:	7e f4       	brtc	.+30     	; 0x3b6a <__addsf3x+0x7c>
    3b4c:	1f 16       	cp	r1, r31
    3b4e:	ba 0b       	sbc	r27, r26
    3b50:	62 0b       	sbc	r22, r18
    3b52:	73 0b       	sbc	r23, r19
    3b54:	84 0b       	sbc	r24, r20
    3b56:	ba f0       	brmi	.+46     	; 0x3b86 <__addsf3x+0x98>
    3b58:	91 50       	subi	r25, 0x01	; 1
    3b5a:	a1 f0       	breq	.+40     	; 0x3b84 <__addsf3x+0x96>
    3b5c:	ff 0f       	add	r31, r31
    3b5e:	bb 1f       	adc	r27, r27
    3b60:	66 1f       	adc	r22, r22
    3b62:	77 1f       	adc	r23, r23
    3b64:	88 1f       	adc	r24, r24
    3b66:	c2 f7       	brpl	.-16     	; 0x3b58 <__addsf3x+0x6a>
    3b68:	0e c0       	rjmp	.+28     	; 0x3b86 <__addsf3x+0x98>
    3b6a:	ba 0f       	add	r27, r26
    3b6c:	62 1f       	adc	r22, r18
    3b6e:	73 1f       	adc	r23, r19
    3b70:	84 1f       	adc	r24, r20
    3b72:	48 f4       	brcc	.+18     	; 0x3b86 <__addsf3x+0x98>
    3b74:	87 95       	ror	r24
    3b76:	77 95       	ror	r23
    3b78:	67 95       	ror	r22
    3b7a:	b7 95       	ror	r27
    3b7c:	f7 95       	ror	r31
    3b7e:	9e 3f       	cpi	r25, 0xFE	; 254
    3b80:	08 f0       	brcs	.+2      	; 0x3b84 <__addsf3x+0x96>
    3b82:	b3 cf       	rjmp	.-154    	; 0x3aea <__addsf3+0x1e>
    3b84:	93 95       	inc	r25
    3b86:	88 0f       	add	r24, r24
    3b88:	08 f0       	brcs	.+2      	; 0x3b8c <__addsf3x+0x9e>
    3b8a:	99 27       	eor	r25, r25
    3b8c:	ee 0f       	add	r30, r30
    3b8e:	97 95       	ror	r25
    3b90:	87 95       	ror	r24
    3b92:	08 95       	ret

00003b94 <__cmpsf2>:
    3b94:	f7 d0       	rcall	.+494    	; 0x3d84 <__fp_cmp>
    3b96:	08 f4       	brcc	.+2      	; 0x3b9a <__cmpsf2+0x6>
    3b98:	81 e0       	ldi	r24, 0x01	; 1
    3b9a:	08 95       	ret

00003b9c <cos>:
    3b9c:	54 d1       	rcall	.+680    	; 0x3e46 <__fp_rempio2>
    3b9e:	e3 95       	inc	r30
    3ba0:	8a c1       	rjmp	.+788    	; 0x3eb6 <__fp_sinus>

00003ba2 <__divsf3>:
    3ba2:	0c d0       	rcall	.+24     	; 0x3bbc <__divsf3x>
    3ba4:	77 c1       	rjmp	.+750    	; 0x3e94 <__fp_round>
    3ba6:	47 d1       	rcall	.+654    	; 0x3e36 <__fp_pscB>
    3ba8:	40 f0       	brcs	.+16     	; 0x3bba <__divsf3+0x18>
    3baa:	3e d1       	rcall	.+636    	; 0x3e28 <__fp_pscA>
    3bac:	30 f0       	brcs	.+12     	; 0x3bba <__divsf3+0x18>
    3bae:	21 f4       	brne	.+8      	; 0x3bb8 <__divsf3+0x16>
    3bb0:	5f 3f       	cpi	r21, 0xFF	; 255
    3bb2:	19 f0       	breq	.+6      	; 0x3bba <__divsf3+0x18>
    3bb4:	0b c1       	rjmp	.+534    	; 0x3dcc <__fp_inf>
    3bb6:	51 11       	cpse	r21, r1
    3bb8:	b2 c1       	rjmp	.+868    	; 0x3f1e <__fp_szero>
    3bba:	0e c1       	rjmp	.+540    	; 0x3dd8 <__fp_nan>

00003bbc <__divsf3x>:
    3bbc:	8d d1       	rcall	.+794    	; 0x3ed8 <__fp_split3>
    3bbe:	98 f3       	brcs	.-26     	; 0x3ba6 <__divsf3+0x4>

00003bc0 <__divsf3_pse>:
    3bc0:	99 23       	and	r25, r25
    3bc2:	c9 f3       	breq	.-14     	; 0x3bb6 <__divsf3+0x14>
    3bc4:	55 23       	and	r21, r21
    3bc6:	b1 f3       	breq	.-20     	; 0x3bb4 <__divsf3+0x12>
    3bc8:	95 1b       	sub	r25, r21
    3bca:	55 0b       	sbc	r21, r21
    3bcc:	bb 27       	eor	r27, r27
    3bce:	aa 27       	eor	r26, r26
    3bd0:	62 17       	cp	r22, r18
    3bd2:	73 07       	cpc	r23, r19
    3bd4:	84 07       	cpc	r24, r20
    3bd6:	38 f0       	brcs	.+14     	; 0x3be6 <__divsf3_pse+0x26>
    3bd8:	9f 5f       	subi	r25, 0xFF	; 255
    3bda:	5f 4f       	sbci	r21, 0xFF	; 255
    3bdc:	22 0f       	add	r18, r18
    3bde:	33 1f       	adc	r19, r19
    3be0:	44 1f       	adc	r20, r20
    3be2:	aa 1f       	adc	r26, r26
    3be4:	a9 f3       	breq	.-22     	; 0x3bd0 <__divsf3_pse+0x10>
    3be6:	33 d0       	rcall	.+102    	; 0x3c4e <__divsf3_pse+0x8e>
    3be8:	0e 2e       	mov	r0, r30
    3bea:	3a f0       	brmi	.+14     	; 0x3bfa <__divsf3_pse+0x3a>
    3bec:	e0 e8       	ldi	r30, 0x80	; 128
    3bee:	30 d0       	rcall	.+96     	; 0x3c50 <__divsf3_pse+0x90>
    3bf0:	91 50       	subi	r25, 0x01	; 1
    3bf2:	50 40       	sbci	r21, 0x00	; 0
    3bf4:	e6 95       	lsr	r30
    3bf6:	00 1c       	adc	r0, r0
    3bf8:	ca f7       	brpl	.-14     	; 0x3bec <__divsf3_pse+0x2c>
    3bfa:	29 d0       	rcall	.+82     	; 0x3c4e <__divsf3_pse+0x8e>
    3bfc:	fe 2f       	mov	r31, r30
    3bfe:	27 d0       	rcall	.+78     	; 0x3c4e <__divsf3_pse+0x8e>
    3c00:	66 0f       	add	r22, r22
    3c02:	77 1f       	adc	r23, r23
    3c04:	88 1f       	adc	r24, r24
    3c06:	bb 1f       	adc	r27, r27
    3c08:	26 17       	cp	r18, r22
    3c0a:	37 07       	cpc	r19, r23
    3c0c:	48 07       	cpc	r20, r24
    3c0e:	ab 07       	cpc	r26, r27
    3c10:	b0 e8       	ldi	r27, 0x80	; 128
    3c12:	09 f0       	breq	.+2      	; 0x3c16 <__divsf3_pse+0x56>
    3c14:	bb 0b       	sbc	r27, r27
    3c16:	80 2d       	mov	r24, r0
    3c18:	bf 01       	movw	r22, r30
    3c1a:	ff 27       	eor	r31, r31
    3c1c:	93 58       	subi	r25, 0x83	; 131
    3c1e:	5f 4f       	sbci	r21, 0xFF	; 255
    3c20:	2a f0       	brmi	.+10     	; 0x3c2c <__divsf3_pse+0x6c>
    3c22:	9e 3f       	cpi	r25, 0xFE	; 254
    3c24:	51 05       	cpc	r21, r1
    3c26:	68 f0       	brcs	.+26     	; 0x3c42 <__divsf3_pse+0x82>
    3c28:	d1 c0       	rjmp	.+418    	; 0x3dcc <__fp_inf>
    3c2a:	79 c1       	rjmp	.+754    	; 0x3f1e <__fp_szero>
    3c2c:	5f 3f       	cpi	r21, 0xFF	; 255
    3c2e:	ec f3       	brlt	.-6      	; 0x3c2a <__divsf3_pse+0x6a>
    3c30:	98 3e       	cpi	r25, 0xE8	; 232
    3c32:	dc f3       	brlt	.-10     	; 0x3c2a <__divsf3_pse+0x6a>
    3c34:	86 95       	lsr	r24
    3c36:	77 95       	ror	r23
    3c38:	67 95       	ror	r22
    3c3a:	b7 95       	ror	r27
    3c3c:	f7 95       	ror	r31
    3c3e:	9f 5f       	subi	r25, 0xFF	; 255
    3c40:	c9 f7       	brne	.-14     	; 0x3c34 <__divsf3_pse+0x74>
    3c42:	88 0f       	add	r24, r24
    3c44:	91 1d       	adc	r25, r1
    3c46:	96 95       	lsr	r25
    3c48:	87 95       	ror	r24
    3c4a:	97 f9       	bld	r25, 7
    3c4c:	08 95       	ret
    3c4e:	e1 e0       	ldi	r30, 0x01	; 1
    3c50:	66 0f       	add	r22, r22
    3c52:	77 1f       	adc	r23, r23
    3c54:	88 1f       	adc	r24, r24
    3c56:	bb 1f       	adc	r27, r27
    3c58:	62 17       	cp	r22, r18
    3c5a:	73 07       	cpc	r23, r19
    3c5c:	84 07       	cpc	r24, r20
    3c5e:	ba 07       	cpc	r27, r26
    3c60:	20 f0       	brcs	.+8      	; 0x3c6a <__divsf3_pse+0xaa>
    3c62:	62 1b       	sub	r22, r18
    3c64:	73 0b       	sbc	r23, r19
    3c66:	84 0b       	sbc	r24, r20
    3c68:	ba 0b       	sbc	r27, r26
    3c6a:	ee 1f       	adc	r30, r30
    3c6c:	88 f7       	brcc	.-30     	; 0x3c50 <__divsf3_pse+0x90>
    3c6e:	e0 95       	com	r30
    3c70:	08 95       	ret

00003c72 <__fixsfsi>:
    3c72:	04 d0       	rcall	.+8      	; 0x3c7c <__fixunssfsi>
    3c74:	68 94       	set
    3c76:	b1 11       	cpse	r27, r1
    3c78:	52 c1       	rjmp	.+676    	; 0x3f1e <__fp_szero>
    3c7a:	08 95       	ret

00003c7c <__fixunssfsi>:
    3c7c:	35 d1       	rcall	.+618    	; 0x3ee8 <__fp_splitA>
    3c7e:	88 f0       	brcs	.+34     	; 0x3ca2 <__fixunssfsi+0x26>
    3c80:	9f 57       	subi	r25, 0x7F	; 127
    3c82:	90 f0       	brcs	.+36     	; 0x3ca8 <__fixunssfsi+0x2c>
    3c84:	b9 2f       	mov	r27, r25
    3c86:	99 27       	eor	r25, r25
    3c88:	b7 51       	subi	r27, 0x17	; 23
    3c8a:	a0 f0       	brcs	.+40     	; 0x3cb4 <__fixunssfsi+0x38>
    3c8c:	d1 f0       	breq	.+52     	; 0x3cc2 <__fixunssfsi+0x46>
    3c8e:	66 0f       	add	r22, r22
    3c90:	77 1f       	adc	r23, r23
    3c92:	88 1f       	adc	r24, r24
    3c94:	99 1f       	adc	r25, r25
    3c96:	1a f0       	brmi	.+6      	; 0x3c9e <__fixunssfsi+0x22>
    3c98:	ba 95       	dec	r27
    3c9a:	c9 f7       	brne	.-14     	; 0x3c8e <__fixunssfsi+0x12>
    3c9c:	12 c0       	rjmp	.+36     	; 0x3cc2 <__fixunssfsi+0x46>
    3c9e:	b1 30       	cpi	r27, 0x01	; 1
    3ca0:	81 f0       	breq	.+32     	; 0x3cc2 <__fixunssfsi+0x46>
    3ca2:	3c d1       	rcall	.+632    	; 0x3f1c <__fp_zero>
    3ca4:	b1 e0       	ldi	r27, 0x01	; 1
    3ca6:	08 95       	ret
    3ca8:	39 c1       	rjmp	.+626    	; 0x3f1c <__fp_zero>
    3caa:	67 2f       	mov	r22, r23
    3cac:	78 2f       	mov	r23, r24
    3cae:	88 27       	eor	r24, r24
    3cb0:	b8 5f       	subi	r27, 0xF8	; 248
    3cb2:	39 f0       	breq	.+14     	; 0x3cc2 <__fixunssfsi+0x46>
    3cb4:	b9 3f       	cpi	r27, 0xF9	; 249
    3cb6:	cc f3       	brlt	.-14     	; 0x3caa <__fixunssfsi+0x2e>
    3cb8:	86 95       	lsr	r24
    3cba:	77 95       	ror	r23
    3cbc:	67 95       	ror	r22
    3cbe:	b3 95       	inc	r27
    3cc0:	d9 f7       	brne	.-10     	; 0x3cb8 <__fixunssfsi+0x3c>
    3cc2:	3e f4       	brtc	.+14     	; 0x3cd2 <__fixunssfsi+0x56>
    3cc4:	90 95       	com	r25
    3cc6:	80 95       	com	r24
    3cc8:	70 95       	com	r23
    3cca:	61 95       	neg	r22
    3ccc:	7f 4f       	sbci	r23, 0xFF	; 255
    3cce:	8f 4f       	sbci	r24, 0xFF	; 255
    3cd0:	9f 4f       	sbci	r25, 0xFF	; 255
    3cd2:	08 95       	ret

00003cd4 <__floatunsisf>:
    3cd4:	e8 94       	clt
    3cd6:	09 c0       	rjmp	.+18     	; 0x3cea <__floatsisf+0x12>

00003cd8 <__floatsisf>:
    3cd8:	97 fb       	bst	r25, 7
    3cda:	3e f4       	brtc	.+14     	; 0x3cea <__floatsisf+0x12>
    3cdc:	90 95       	com	r25
    3cde:	80 95       	com	r24
    3ce0:	70 95       	com	r23
    3ce2:	61 95       	neg	r22
    3ce4:	7f 4f       	sbci	r23, 0xFF	; 255
    3ce6:	8f 4f       	sbci	r24, 0xFF	; 255
    3ce8:	9f 4f       	sbci	r25, 0xFF	; 255
    3cea:	99 23       	and	r25, r25
    3cec:	a9 f0       	breq	.+42     	; 0x3d18 <__floatsisf+0x40>
    3cee:	f9 2f       	mov	r31, r25
    3cf0:	96 e9       	ldi	r25, 0x96	; 150
    3cf2:	bb 27       	eor	r27, r27
    3cf4:	93 95       	inc	r25
    3cf6:	f6 95       	lsr	r31
    3cf8:	87 95       	ror	r24
    3cfa:	77 95       	ror	r23
    3cfc:	67 95       	ror	r22
    3cfe:	b7 95       	ror	r27
    3d00:	f1 11       	cpse	r31, r1
    3d02:	f8 cf       	rjmp	.-16     	; 0x3cf4 <__floatsisf+0x1c>
    3d04:	fa f4       	brpl	.+62     	; 0x3d44 <__floatsisf+0x6c>
    3d06:	bb 0f       	add	r27, r27
    3d08:	11 f4       	brne	.+4      	; 0x3d0e <__floatsisf+0x36>
    3d0a:	60 ff       	sbrs	r22, 0
    3d0c:	1b c0       	rjmp	.+54     	; 0x3d44 <__floatsisf+0x6c>
    3d0e:	6f 5f       	subi	r22, 0xFF	; 255
    3d10:	7f 4f       	sbci	r23, 0xFF	; 255
    3d12:	8f 4f       	sbci	r24, 0xFF	; 255
    3d14:	9f 4f       	sbci	r25, 0xFF	; 255
    3d16:	16 c0       	rjmp	.+44     	; 0x3d44 <__floatsisf+0x6c>
    3d18:	88 23       	and	r24, r24
    3d1a:	11 f0       	breq	.+4      	; 0x3d20 <__floatsisf+0x48>
    3d1c:	96 e9       	ldi	r25, 0x96	; 150
    3d1e:	11 c0       	rjmp	.+34     	; 0x3d42 <__floatsisf+0x6a>
    3d20:	77 23       	and	r23, r23
    3d22:	21 f0       	breq	.+8      	; 0x3d2c <__floatsisf+0x54>
    3d24:	9e e8       	ldi	r25, 0x8E	; 142
    3d26:	87 2f       	mov	r24, r23
    3d28:	76 2f       	mov	r23, r22
    3d2a:	05 c0       	rjmp	.+10     	; 0x3d36 <__floatsisf+0x5e>
    3d2c:	66 23       	and	r22, r22
    3d2e:	71 f0       	breq	.+28     	; 0x3d4c <__floatsisf+0x74>
    3d30:	96 e8       	ldi	r25, 0x86	; 134
    3d32:	86 2f       	mov	r24, r22
    3d34:	70 e0       	ldi	r23, 0x00	; 0
    3d36:	60 e0       	ldi	r22, 0x00	; 0
    3d38:	2a f0       	brmi	.+10     	; 0x3d44 <__floatsisf+0x6c>
    3d3a:	9a 95       	dec	r25
    3d3c:	66 0f       	add	r22, r22
    3d3e:	77 1f       	adc	r23, r23
    3d40:	88 1f       	adc	r24, r24
    3d42:	da f7       	brpl	.-10     	; 0x3d3a <__floatsisf+0x62>
    3d44:	88 0f       	add	r24, r24
    3d46:	96 95       	lsr	r25
    3d48:	87 95       	ror	r24
    3d4a:	97 f9       	bld	r25, 7
    3d4c:	08 95       	ret

00003d4e <__fp_arccos>:
    3d4e:	df 93       	push	r29
    3d50:	cf 93       	push	r28
    3d52:	1f 93       	push	r17
    3d54:	0f 93       	push	r16
    3d56:	8b 01       	movw	r16, r22
    3d58:	ec 01       	movw	r28, r24
    3d5a:	ec ec       	ldi	r30, 0xCC	; 204
    3d5c:	f0 e0       	ldi	r31, 0x00	; 0
    3d5e:	3f d0       	rcall	.+126    	; 0x3dde <__fp_powser>
    3d60:	99 d0       	rcall	.+306    	; 0x3e94 <__fp_round>
    3d62:	98 01       	movw	r18, r16
    3d64:	ae 01       	movw	r20, r28
    3d66:	8b 01       	movw	r16, r22
    3d68:	ec 01       	movw	r28, r24
    3d6a:	60 e0       	ldi	r22, 0x00	; 0
    3d6c:	70 e0       	ldi	r23, 0x00	; 0
    3d6e:	80 e8       	ldi	r24, 0x80	; 128
    3d70:	9f e3       	ldi	r25, 0x3F	; 63
    3d72:	ab de       	rcall	.-682    	; 0x3aca <__subsf3>
    3d74:	97 d1       	rcall	.+814    	; 0x40a4 <sqrt>
    3d76:	98 01       	movw	r18, r16
    3d78:	ae 01       	movw	r20, r28
    3d7a:	0f 91       	pop	r16
    3d7c:	1f 91       	pop	r17
    3d7e:	cf 91       	pop	r28
    3d80:	df 91       	pop	r29
    3d82:	e3 c0       	rjmp	.+454    	; 0x3f4a <__mulsf3x>

00003d84 <__fp_cmp>:
    3d84:	99 0f       	add	r25, r25
    3d86:	00 08       	sbc	r0, r0
    3d88:	55 0f       	add	r21, r21
    3d8a:	aa 0b       	sbc	r26, r26
    3d8c:	e0 e8       	ldi	r30, 0x80	; 128
    3d8e:	fe ef       	ldi	r31, 0xFE	; 254
    3d90:	16 16       	cp	r1, r22
    3d92:	17 06       	cpc	r1, r23
    3d94:	e8 07       	cpc	r30, r24
    3d96:	f9 07       	cpc	r31, r25
    3d98:	c0 f0       	brcs	.+48     	; 0x3dca <__fp_cmp+0x46>
    3d9a:	12 16       	cp	r1, r18
    3d9c:	13 06       	cpc	r1, r19
    3d9e:	e4 07       	cpc	r30, r20
    3da0:	f5 07       	cpc	r31, r21
    3da2:	98 f0       	brcs	.+38     	; 0x3dca <__fp_cmp+0x46>
    3da4:	62 1b       	sub	r22, r18
    3da6:	73 0b       	sbc	r23, r19
    3da8:	84 0b       	sbc	r24, r20
    3daa:	95 0b       	sbc	r25, r21
    3dac:	39 f4       	brne	.+14     	; 0x3dbc <__fp_cmp+0x38>
    3dae:	0a 26       	eor	r0, r26
    3db0:	61 f0       	breq	.+24     	; 0x3dca <__fp_cmp+0x46>
    3db2:	23 2b       	or	r18, r19
    3db4:	24 2b       	or	r18, r20
    3db6:	25 2b       	or	r18, r21
    3db8:	21 f4       	brne	.+8      	; 0x3dc2 <__fp_cmp+0x3e>
    3dba:	08 95       	ret
    3dbc:	0a 26       	eor	r0, r26
    3dbe:	09 f4       	brne	.+2      	; 0x3dc2 <__fp_cmp+0x3e>
    3dc0:	a1 40       	sbci	r26, 0x01	; 1
    3dc2:	a6 95       	lsr	r26
    3dc4:	8f ef       	ldi	r24, 0xFF	; 255
    3dc6:	81 1d       	adc	r24, r1
    3dc8:	81 1d       	adc	r24, r1
    3dca:	08 95       	ret

00003dcc <__fp_inf>:
    3dcc:	97 f9       	bld	r25, 7
    3dce:	9f 67       	ori	r25, 0x7F	; 127
    3dd0:	80 e8       	ldi	r24, 0x80	; 128
    3dd2:	70 e0       	ldi	r23, 0x00	; 0
    3dd4:	60 e0       	ldi	r22, 0x00	; 0
    3dd6:	08 95       	ret

00003dd8 <__fp_nan>:
    3dd8:	9f ef       	ldi	r25, 0xFF	; 255
    3dda:	80 ec       	ldi	r24, 0xC0	; 192
    3ddc:	08 95       	ret

00003dde <__fp_powser>:
    3dde:	df 93       	push	r29
    3de0:	cf 93       	push	r28
    3de2:	1f 93       	push	r17
    3de4:	0f 93       	push	r16
    3de6:	ff 92       	push	r15
    3de8:	ef 92       	push	r14
    3dea:	df 92       	push	r13
    3dec:	7b 01       	movw	r14, r22
    3dee:	8c 01       	movw	r16, r24
    3df0:	68 94       	set
    3df2:	05 c0       	rjmp	.+10     	; 0x3dfe <__fp_powser+0x20>
    3df4:	da 2e       	mov	r13, r26
    3df6:	ef 01       	movw	r28, r30
    3df8:	a8 d0       	rcall	.+336    	; 0x3f4a <__mulsf3x>
    3dfa:	fe 01       	movw	r30, r28
    3dfc:	e8 94       	clt
    3dfe:	a5 91       	lpm	r26, Z+
    3e00:	25 91       	lpm	r18, Z+
    3e02:	35 91       	lpm	r19, Z+
    3e04:	45 91       	lpm	r20, Z+
    3e06:	55 91       	lpm	r21, Z+
    3e08:	ae f3       	brts	.-22     	; 0x3df4 <__fp_powser+0x16>
    3e0a:	ef 01       	movw	r28, r30
    3e0c:	70 de       	rcall	.-800    	; 0x3aee <__addsf3x>
    3e0e:	fe 01       	movw	r30, r28
    3e10:	97 01       	movw	r18, r14
    3e12:	a8 01       	movw	r20, r16
    3e14:	da 94       	dec	r13
    3e16:	79 f7       	brne	.-34     	; 0x3df6 <__fp_powser+0x18>
    3e18:	df 90       	pop	r13
    3e1a:	ef 90       	pop	r14
    3e1c:	ff 90       	pop	r15
    3e1e:	0f 91       	pop	r16
    3e20:	1f 91       	pop	r17
    3e22:	cf 91       	pop	r28
    3e24:	df 91       	pop	r29
    3e26:	08 95       	ret

00003e28 <__fp_pscA>:
    3e28:	00 24       	eor	r0, r0
    3e2a:	0a 94       	dec	r0
    3e2c:	16 16       	cp	r1, r22
    3e2e:	17 06       	cpc	r1, r23
    3e30:	18 06       	cpc	r1, r24
    3e32:	09 06       	cpc	r0, r25
    3e34:	08 95       	ret

00003e36 <__fp_pscB>:
    3e36:	00 24       	eor	r0, r0
    3e38:	0a 94       	dec	r0
    3e3a:	12 16       	cp	r1, r18
    3e3c:	13 06       	cpc	r1, r19
    3e3e:	14 06       	cpc	r1, r20
    3e40:	05 06       	cpc	r0, r21
    3e42:	08 95       	ret
    3e44:	c9 cf       	rjmp	.-110    	; 0x3dd8 <__fp_nan>

00003e46 <__fp_rempio2>:
    3e46:	50 d0       	rcall	.+160    	; 0x3ee8 <__fp_splitA>
    3e48:	e8 f3       	brcs	.-6      	; 0x3e44 <__fp_pscB+0xe>
    3e4a:	e8 94       	clt
    3e4c:	e0 e0       	ldi	r30, 0x00	; 0
    3e4e:	bb 27       	eor	r27, r27
    3e50:	9f 57       	subi	r25, 0x7F	; 127
    3e52:	f0 f0       	brcs	.+60     	; 0x3e90 <__fp_rempio2+0x4a>
    3e54:	2a ed       	ldi	r18, 0xDA	; 218
    3e56:	3f e0       	ldi	r19, 0x0F	; 15
    3e58:	49 ec       	ldi	r20, 0xC9	; 201
    3e5a:	06 c0       	rjmp	.+12     	; 0x3e68 <__fp_rempio2+0x22>
    3e5c:	ee 0f       	add	r30, r30
    3e5e:	bb 0f       	add	r27, r27
    3e60:	66 1f       	adc	r22, r22
    3e62:	77 1f       	adc	r23, r23
    3e64:	88 1f       	adc	r24, r24
    3e66:	28 f0       	brcs	.+10     	; 0x3e72 <__fp_rempio2+0x2c>
    3e68:	b2 3a       	cpi	r27, 0xA2	; 162
    3e6a:	62 07       	cpc	r22, r18
    3e6c:	73 07       	cpc	r23, r19
    3e6e:	84 07       	cpc	r24, r20
    3e70:	28 f0       	brcs	.+10     	; 0x3e7c <__fp_rempio2+0x36>
    3e72:	b2 5a       	subi	r27, 0xA2	; 162
    3e74:	62 0b       	sbc	r22, r18
    3e76:	73 0b       	sbc	r23, r19
    3e78:	84 0b       	sbc	r24, r20
    3e7a:	e3 95       	inc	r30
    3e7c:	9a 95       	dec	r25
    3e7e:	72 f7       	brpl	.-36     	; 0x3e5c <__fp_rempio2+0x16>
    3e80:	80 38       	cpi	r24, 0x80	; 128
    3e82:	30 f4       	brcc	.+12     	; 0x3e90 <__fp_rempio2+0x4a>
    3e84:	9a 95       	dec	r25
    3e86:	bb 0f       	add	r27, r27
    3e88:	66 1f       	adc	r22, r22
    3e8a:	77 1f       	adc	r23, r23
    3e8c:	88 1f       	adc	r24, r24
    3e8e:	d2 f7       	brpl	.-12     	; 0x3e84 <__fp_rempio2+0x3e>
    3e90:	90 48       	sbci	r25, 0x80	; 128
    3e92:	7d c1       	rjmp	.+762    	; 0x418e <__fp_mpack_finite>

00003e94 <__fp_round>:
    3e94:	09 2e       	mov	r0, r25
    3e96:	03 94       	inc	r0
    3e98:	00 0c       	add	r0, r0
    3e9a:	11 f4       	brne	.+4      	; 0x3ea0 <__fp_round+0xc>
    3e9c:	88 23       	and	r24, r24
    3e9e:	52 f0       	brmi	.+20     	; 0x3eb4 <__fp_round+0x20>
    3ea0:	bb 0f       	add	r27, r27
    3ea2:	40 f4       	brcc	.+16     	; 0x3eb4 <__fp_round+0x20>
    3ea4:	bf 2b       	or	r27, r31
    3ea6:	11 f4       	brne	.+4      	; 0x3eac <__fp_round+0x18>
    3ea8:	60 ff       	sbrs	r22, 0
    3eaa:	04 c0       	rjmp	.+8      	; 0x3eb4 <__fp_round+0x20>
    3eac:	6f 5f       	subi	r22, 0xFF	; 255
    3eae:	7f 4f       	sbci	r23, 0xFF	; 255
    3eb0:	8f 4f       	sbci	r24, 0xFF	; 255
    3eb2:	9f 4f       	sbci	r25, 0xFF	; 255
    3eb4:	08 95       	ret

00003eb6 <__fp_sinus>:
    3eb6:	ef 93       	push	r30
    3eb8:	e0 ff       	sbrs	r30, 0
    3eba:	06 c0       	rjmp	.+12     	; 0x3ec8 <__fp_sinus+0x12>
    3ebc:	a2 ea       	ldi	r26, 0xA2	; 162
    3ebe:	2a ed       	ldi	r18, 0xDA	; 218
    3ec0:	3f e0       	ldi	r19, 0x0F	; 15
    3ec2:	49 ec       	ldi	r20, 0xC9	; 201
    3ec4:	5f eb       	ldi	r21, 0xBF	; 191
    3ec6:	13 de       	rcall	.-986    	; 0x3aee <__addsf3x>
    3ec8:	e5 df       	rcall	.-54     	; 0x3e94 <__fp_round>
    3eca:	0f 90       	pop	r0
    3ecc:	03 94       	inc	r0
    3ece:	01 fc       	sbrc	r0, 1
    3ed0:	90 58       	subi	r25, 0x80	; 128
    3ed2:	e4 ef       	ldi	r30, 0xF4	; 244
    3ed4:	f0 e0       	ldi	r31, 0x00	; 0
    3ed6:	6e c1       	rjmp	.+732    	; 0x41b4 <__fp_powsodd>

00003ed8 <__fp_split3>:
    3ed8:	57 fd       	sbrc	r21, 7
    3eda:	90 58       	subi	r25, 0x80	; 128
    3edc:	44 0f       	add	r20, r20
    3ede:	55 1f       	adc	r21, r21
    3ee0:	59 f0       	breq	.+22     	; 0x3ef8 <__fp_splitA+0x10>
    3ee2:	5f 3f       	cpi	r21, 0xFF	; 255
    3ee4:	71 f0       	breq	.+28     	; 0x3f02 <__fp_splitA+0x1a>
    3ee6:	47 95       	ror	r20

00003ee8 <__fp_splitA>:
    3ee8:	88 0f       	add	r24, r24
    3eea:	97 fb       	bst	r25, 7
    3eec:	99 1f       	adc	r25, r25
    3eee:	61 f0       	breq	.+24     	; 0x3f08 <__fp_splitA+0x20>
    3ef0:	9f 3f       	cpi	r25, 0xFF	; 255
    3ef2:	79 f0       	breq	.+30     	; 0x3f12 <__fp_splitA+0x2a>
    3ef4:	87 95       	ror	r24
    3ef6:	08 95       	ret
    3ef8:	12 16       	cp	r1, r18
    3efa:	13 06       	cpc	r1, r19
    3efc:	14 06       	cpc	r1, r20
    3efe:	55 1f       	adc	r21, r21
    3f00:	f2 cf       	rjmp	.-28     	; 0x3ee6 <__fp_split3+0xe>
    3f02:	46 95       	lsr	r20
    3f04:	f1 df       	rcall	.-30     	; 0x3ee8 <__fp_splitA>
    3f06:	08 c0       	rjmp	.+16     	; 0x3f18 <__fp_splitA+0x30>
    3f08:	16 16       	cp	r1, r22
    3f0a:	17 06       	cpc	r1, r23
    3f0c:	18 06       	cpc	r1, r24
    3f0e:	99 1f       	adc	r25, r25
    3f10:	f1 cf       	rjmp	.-30     	; 0x3ef4 <__fp_splitA+0xc>
    3f12:	86 95       	lsr	r24
    3f14:	71 05       	cpc	r23, r1
    3f16:	61 05       	cpc	r22, r1
    3f18:	08 94       	sec
    3f1a:	08 95       	ret

00003f1c <__fp_zero>:
    3f1c:	e8 94       	clt

00003f1e <__fp_szero>:
    3f1e:	bb 27       	eor	r27, r27
    3f20:	66 27       	eor	r22, r22
    3f22:	77 27       	eor	r23, r23
    3f24:	cb 01       	movw	r24, r22
    3f26:	97 f9       	bld	r25, 7
    3f28:	08 95       	ret

00003f2a <__gesf2>:
    3f2a:	2c df       	rcall	.-424    	; 0x3d84 <__fp_cmp>
    3f2c:	08 f4       	brcc	.+2      	; 0x3f30 <__gesf2+0x6>
    3f2e:	8f ef       	ldi	r24, 0xFF	; 255
    3f30:	08 95       	ret

00003f32 <__mulsf3>:
    3f32:	0b d0       	rcall	.+22     	; 0x3f4a <__mulsf3x>
    3f34:	af cf       	rjmp	.-162    	; 0x3e94 <__fp_round>
    3f36:	78 df       	rcall	.-272    	; 0x3e28 <__fp_pscA>
    3f38:	28 f0       	brcs	.+10     	; 0x3f44 <__mulsf3+0x12>
    3f3a:	7d df       	rcall	.-262    	; 0x3e36 <__fp_pscB>
    3f3c:	18 f0       	brcs	.+6      	; 0x3f44 <__mulsf3+0x12>
    3f3e:	95 23       	and	r25, r21
    3f40:	09 f0       	breq	.+2      	; 0x3f44 <__mulsf3+0x12>
    3f42:	44 cf       	rjmp	.-376    	; 0x3dcc <__fp_inf>
    3f44:	49 cf       	rjmp	.-366    	; 0x3dd8 <__fp_nan>
    3f46:	11 24       	eor	r1, r1
    3f48:	ea cf       	rjmp	.-44     	; 0x3f1e <__fp_szero>

00003f4a <__mulsf3x>:
    3f4a:	c6 df       	rcall	.-116    	; 0x3ed8 <__fp_split3>
    3f4c:	a0 f3       	brcs	.-24     	; 0x3f36 <__mulsf3+0x4>

00003f4e <__mulsf3_pse>:
    3f4e:	95 9f       	mul	r25, r21
    3f50:	d1 f3       	breq	.-12     	; 0x3f46 <__mulsf3+0x14>
    3f52:	95 0f       	add	r25, r21
    3f54:	50 e0       	ldi	r21, 0x00	; 0
    3f56:	55 1f       	adc	r21, r21
    3f58:	62 9f       	mul	r22, r18
    3f5a:	f0 01       	movw	r30, r0
    3f5c:	72 9f       	mul	r23, r18
    3f5e:	bb 27       	eor	r27, r27
    3f60:	f0 0d       	add	r31, r0
    3f62:	b1 1d       	adc	r27, r1
    3f64:	63 9f       	mul	r22, r19
    3f66:	aa 27       	eor	r26, r26
    3f68:	f0 0d       	add	r31, r0
    3f6a:	b1 1d       	adc	r27, r1
    3f6c:	aa 1f       	adc	r26, r26
    3f6e:	64 9f       	mul	r22, r20
    3f70:	66 27       	eor	r22, r22
    3f72:	b0 0d       	add	r27, r0
    3f74:	a1 1d       	adc	r26, r1
    3f76:	66 1f       	adc	r22, r22
    3f78:	82 9f       	mul	r24, r18
    3f7a:	22 27       	eor	r18, r18
    3f7c:	b0 0d       	add	r27, r0
    3f7e:	a1 1d       	adc	r26, r1
    3f80:	62 1f       	adc	r22, r18
    3f82:	73 9f       	mul	r23, r19
    3f84:	b0 0d       	add	r27, r0
    3f86:	a1 1d       	adc	r26, r1
    3f88:	62 1f       	adc	r22, r18
    3f8a:	83 9f       	mul	r24, r19
    3f8c:	a0 0d       	add	r26, r0
    3f8e:	61 1d       	adc	r22, r1
    3f90:	22 1f       	adc	r18, r18
    3f92:	74 9f       	mul	r23, r20
    3f94:	33 27       	eor	r19, r19
    3f96:	a0 0d       	add	r26, r0
    3f98:	61 1d       	adc	r22, r1
    3f9a:	23 1f       	adc	r18, r19
    3f9c:	84 9f       	mul	r24, r20
    3f9e:	60 0d       	add	r22, r0
    3fa0:	21 1d       	adc	r18, r1
    3fa2:	82 2f       	mov	r24, r18
    3fa4:	76 2f       	mov	r23, r22
    3fa6:	6a 2f       	mov	r22, r26
    3fa8:	11 24       	eor	r1, r1
    3faa:	9f 57       	subi	r25, 0x7F	; 127
    3fac:	50 40       	sbci	r21, 0x00	; 0
    3fae:	8a f0       	brmi	.+34     	; 0x3fd2 <__mulsf3_pse+0x84>
    3fb0:	e1 f0       	breq	.+56     	; 0x3fea <__mulsf3_pse+0x9c>
    3fb2:	88 23       	and	r24, r24
    3fb4:	4a f0       	brmi	.+18     	; 0x3fc8 <__mulsf3_pse+0x7a>
    3fb6:	ee 0f       	add	r30, r30
    3fb8:	ff 1f       	adc	r31, r31
    3fba:	bb 1f       	adc	r27, r27
    3fbc:	66 1f       	adc	r22, r22
    3fbe:	77 1f       	adc	r23, r23
    3fc0:	88 1f       	adc	r24, r24
    3fc2:	91 50       	subi	r25, 0x01	; 1
    3fc4:	50 40       	sbci	r21, 0x00	; 0
    3fc6:	a9 f7       	brne	.-22     	; 0x3fb2 <__mulsf3_pse+0x64>
    3fc8:	9e 3f       	cpi	r25, 0xFE	; 254
    3fca:	51 05       	cpc	r21, r1
    3fcc:	70 f0       	brcs	.+28     	; 0x3fea <__mulsf3_pse+0x9c>
    3fce:	fe ce       	rjmp	.-516    	; 0x3dcc <__fp_inf>
    3fd0:	a6 cf       	rjmp	.-180    	; 0x3f1e <__fp_szero>
    3fd2:	5f 3f       	cpi	r21, 0xFF	; 255
    3fd4:	ec f3       	brlt	.-6      	; 0x3fd0 <__mulsf3_pse+0x82>
    3fd6:	98 3e       	cpi	r25, 0xE8	; 232
    3fd8:	dc f3       	brlt	.-10     	; 0x3fd0 <__mulsf3_pse+0x82>
    3fda:	86 95       	lsr	r24
    3fdc:	77 95       	ror	r23
    3fde:	67 95       	ror	r22
    3fe0:	b7 95       	ror	r27
    3fe2:	f7 95       	ror	r31
    3fe4:	e7 95       	ror	r30
    3fe6:	9f 5f       	subi	r25, 0xFF	; 255
    3fe8:	c1 f7       	brne	.-16     	; 0x3fda <__mulsf3_pse+0x8c>
    3fea:	fe 2b       	or	r31, r30
    3fec:	88 0f       	add	r24, r24
    3fee:	91 1d       	adc	r25, r1
    3ff0:	96 95       	lsr	r25
    3ff2:	87 95       	ror	r24
    3ff4:	97 f9       	bld	r25, 7
    3ff6:	08 95       	ret

00003ff8 <pow>:
    3ff8:	fa 01       	movw	r30, r20
    3ffa:	ee 0f       	add	r30, r30
    3ffc:	ff 1f       	adc	r31, r31
    3ffe:	30 96       	adiw	r30, 0x00	; 0
    4000:	21 05       	cpc	r18, r1
    4002:	31 05       	cpc	r19, r1
    4004:	99 f1       	breq	.+102    	; 0x406c <pow+0x74>
    4006:	61 15       	cp	r22, r1
    4008:	71 05       	cpc	r23, r1
    400a:	61 f4       	brne	.+24     	; 0x4024 <pow+0x2c>
    400c:	80 38       	cpi	r24, 0x80	; 128
    400e:	bf e3       	ldi	r27, 0x3F	; 63
    4010:	9b 07       	cpc	r25, r27
    4012:	49 f1       	breq	.+82     	; 0x4066 <pow+0x6e>
    4014:	68 94       	set
    4016:	90 38       	cpi	r25, 0x80	; 128
    4018:	81 05       	cpc	r24, r1
    401a:	61 f0       	breq	.+24     	; 0x4034 <pow+0x3c>
    401c:	80 38       	cpi	r24, 0x80	; 128
    401e:	bf ef       	ldi	r27, 0xFF	; 255
    4020:	9b 07       	cpc	r25, r27
    4022:	41 f0       	breq	.+16     	; 0x4034 <pow+0x3c>
    4024:	99 23       	and	r25, r25
    4026:	42 f5       	brpl	.+80     	; 0x4078 <pow+0x80>
    4028:	ff 3f       	cpi	r31, 0xFF	; 255
    402a:	e1 05       	cpc	r30, r1
    402c:	31 05       	cpc	r19, r1
    402e:	21 05       	cpc	r18, r1
    4030:	11 f1       	breq	.+68     	; 0x4076 <pow+0x7e>
    4032:	e8 94       	clt
    4034:	08 94       	sec
    4036:	e7 95       	ror	r30
    4038:	d9 01       	movw	r26, r18
    403a:	aa 23       	and	r26, r26
    403c:	29 f4       	brne	.+10     	; 0x4048 <pow+0x50>
    403e:	ab 2f       	mov	r26, r27
    4040:	be 2f       	mov	r27, r30
    4042:	f8 5f       	subi	r31, 0xF8	; 248
    4044:	d0 f3       	brcs	.-12     	; 0x403a <pow+0x42>
    4046:	10 c0       	rjmp	.+32     	; 0x4068 <pow+0x70>
    4048:	ff 5f       	subi	r31, 0xFF	; 255
    404a:	70 f4       	brcc	.+28     	; 0x4068 <pow+0x70>
    404c:	a6 95       	lsr	r26
    404e:	e0 f7       	brcc	.-8      	; 0x4048 <pow+0x50>
    4050:	f7 39       	cpi	r31, 0x97	; 151
    4052:	50 f0       	brcs	.+20     	; 0x4068 <pow+0x70>
    4054:	19 f0       	breq	.+6      	; 0x405c <pow+0x64>
    4056:	ff 3a       	cpi	r31, 0xAF	; 175
    4058:	38 f4       	brcc	.+14     	; 0x4068 <pow+0x70>
    405a:	9f 77       	andi	r25, 0x7F	; 127
    405c:	9f 93       	push	r25
    405e:	0c d0       	rcall	.+24     	; 0x4078 <pow+0x80>
    4060:	0f 90       	pop	r0
    4062:	07 fc       	sbrc	r0, 7
    4064:	90 58       	subi	r25, 0x80	; 128
    4066:	08 95       	ret
    4068:	3e f0       	brts	.+14     	; 0x4078 <pow+0x80>
    406a:	b6 ce       	rjmp	.-660    	; 0x3dd8 <__fp_nan>
    406c:	60 e0       	ldi	r22, 0x00	; 0
    406e:	70 e0       	ldi	r23, 0x00	; 0
    4070:	80 e8       	ldi	r24, 0x80	; 128
    4072:	9f e3       	ldi	r25, 0x3F	; 63
    4074:	08 95       	ret
    4076:	4f e7       	ldi	r20, 0x7F	; 127
    4078:	9f 77       	andi	r25, 0x7F	; 127
    407a:	5f 93       	push	r21
    407c:	4f 93       	push	r20
    407e:	3f 93       	push	r19
    4080:	2f 93       	push	r18
    4082:	eb d0       	rcall	.+470    	; 0x425a <log>
    4084:	2f 91       	pop	r18
    4086:	3f 91       	pop	r19
    4088:	4f 91       	pop	r20
    408a:	5f 91       	pop	r21
    408c:	52 df       	rcall	.-348    	; 0x3f32 <__mulsf3>
    408e:	51 c0       	rjmp	.+162    	; 0x4132 <exp>

00004090 <sin>:
    4090:	9f 93       	push	r25
    4092:	d9 de       	rcall	.-590    	; 0x3e46 <__fp_rempio2>
    4094:	0f 90       	pop	r0
    4096:	07 fc       	sbrc	r0, 7
    4098:	ee 5f       	subi	r30, 0xFE	; 254
    409a:	0d cf       	rjmp	.-486    	; 0x3eb6 <__fp_sinus>
    409c:	11 f4       	brne	.+4      	; 0x40a2 <sin+0x12>
    409e:	0e f4       	brtc	.+2      	; 0x40a2 <sin+0x12>
    40a0:	9b ce       	rjmp	.-714    	; 0x3dd8 <__fp_nan>
    40a2:	73 c0       	rjmp	.+230    	; 0x418a <__fp_mpack>

000040a4 <sqrt>:
    40a4:	21 df       	rcall	.-446    	; 0x3ee8 <__fp_splitA>
    40a6:	d0 f3       	brcs	.-12     	; 0x409c <sin+0xc>
    40a8:	99 23       	and	r25, r25
    40aa:	d9 f3       	breq	.-10     	; 0x40a2 <sin+0x12>
    40ac:	ce f3       	brts	.-14     	; 0x40a0 <sin+0x10>
    40ae:	9f 57       	subi	r25, 0x7F	; 127
    40b0:	55 0b       	sbc	r21, r21
    40b2:	87 ff       	sbrs	r24, 7
    40b4:	78 d0       	rcall	.+240    	; 0x41a6 <__fp_norm2>
    40b6:	00 24       	eor	r0, r0
    40b8:	a0 e6       	ldi	r26, 0x60	; 96
    40ba:	40 ea       	ldi	r20, 0xA0	; 160
    40bc:	90 01       	movw	r18, r0
    40be:	80 58       	subi	r24, 0x80	; 128
    40c0:	56 95       	lsr	r21
    40c2:	97 95       	ror	r25
    40c4:	28 f4       	brcc	.+10     	; 0x40d0 <sqrt+0x2c>
    40c6:	80 5c       	subi	r24, 0xC0	; 192
    40c8:	66 0f       	add	r22, r22
    40ca:	77 1f       	adc	r23, r23
    40cc:	88 1f       	adc	r24, r24
    40ce:	20 f0       	brcs	.+8      	; 0x40d8 <sqrt+0x34>
    40d0:	26 17       	cp	r18, r22
    40d2:	37 07       	cpc	r19, r23
    40d4:	48 07       	cpc	r20, r24
    40d6:	30 f4       	brcc	.+12     	; 0x40e4 <sqrt+0x40>
    40d8:	62 1b       	sub	r22, r18
    40da:	73 0b       	sbc	r23, r19
    40dc:	84 0b       	sbc	r24, r20
    40de:	20 29       	or	r18, r0
    40e0:	31 29       	or	r19, r1
    40e2:	4a 2b       	or	r20, r26
    40e4:	a6 95       	lsr	r26
    40e6:	17 94       	ror	r1
    40e8:	07 94       	ror	r0
    40ea:	20 25       	eor	r18, r0
    40ec:	31 25       	eor	r19, r1
    40ee:	4a 27       	eor	r20, r26
    40f0:	58 f7       	brcc	.-42     	; 0x40c8 <sqrt+0x24>
    40f2:	66 0f       	add	r22, r22
    40f4:	77 1f       	adc	r23, r23
    40f6:	88 1f       	adc	r24, r24
    40f8:	20 f0       	brcs	.+8      	; 0x4102 <sqrt+0x5e>
    40fa:	26 17       	cp	r18, r22
    40fc:	37 07       	cpc	r19, r23
    40fe:	48 07       	cpc	r20, r24
    4100:	30 f4       	brcc	.+12     	; 0x410e <sqrt+0x6a>
    4102:	62 0b       	sbc	r22, r18
    4104:	73 0b       	sbc	r23, r19
    4106:	84 0b       	sbc	r24, r20
    4108:	20 0d       	add	r18, r0
    410a:	31 1d       	adc	r19, r1
    410c:	41 1d       	adc	r20, r1
    410e:	a0 95       	com	r26
    4110:	81 f7       	brne	.-32     	; 0x40f2 <sqrt+0x4e>
    4112:	b9 01       	movw	r22, r18
    4114:	84 2f       	mov	r24, r20
    4116:	91 58       	subi	r25, 0x81	; 129
    4118:	88 0f       	add	r24, r24
    411a:	96 95       	lsr	r25
    411c:	87 95       	ror	r24
    411e:	08 95       	ret

00004120 <__unordsf2>:
    4120:	31 de       	rcall	.-926    	; 0x3d84 <__fp_cmp>
    4122:	88 0b       	sbc	r24, r24
    4124:	99 0b       	sbc	r25, r25
    4126:	08 95       	ret
    4128:	19 f4       	brne	.+6      	; 0x4130 <__unordsf2+0x10>
    412a:	0e f0       	brts	.+2      	; 0x412e <__unordsf2+0xe>
    412c:	4f ce       	rjmp	.-866    	; 0x3dcc <__fp_inf>
    412e:	f6 ce       	rjmp	.-532    	; 0x3f1c <__fp_zero>
    4130:	53 ce       	rjmp	.-858    	; 0x3dd8 <__fp_nan>

00004132 <exp>:
    4132:	da de       	rcall	.-588    	; 0x3ee8 <__fp_splitA>
    4134:	c8 f3       	brcs	.-14     	; 0x4128 <__unordsf2+0x8>
    4136:	96 38       	cpi	r25, 0x86	; 134
    4138:	c0 f7       	brcc	.-16     	; 0x412a <__unordsf2+0xa>
    413a:	07 f8       	bld	r0, 7
    413c:	0f 92       	push	r0
    413e:	e8 94       	clt
    4140:	2b e3       	ldi	r18, 0x3B	; 59
    4142:	3a ea       	ldi	r19, 0xAA	; 170
    4144:	48 eb       	ldi	r20, 0xB8	; 184
    4146:	5f e7       	ldi	r21, 0x7F	; 127
    4148:	02 df       	rcall	.-508    	; 0x3f4e <__mulsf3_pse>
    414a:	0f 92       	push	r0
    414c:	0f 92       	push	r0
    414e:	0f 92       	push	r0
    4150:	4d b7       	in	r20, 0x3d	; 61
    4152:	5e b7       	in	r21, 0x3e	; 62
    4154:	0f 92       	push	r0
    4156:	c1 d0       	rcall	.+386    	; 0x42da <modf>
    4158:	e2 e1       	ldi	r30, 0x12	; 18
    415a:	f1 e0       	ldi	r31, 0x01	; 1
    415c:	40 de       	rcall	.-896    	; 0x3dde <__fp_powser>
    415e:	4f 91       	pop	r20
    4160:	5f 91       	pop	r21
    4162:	ef 91       	pop	r30
    4164:	ff 91       	pop	r31
    4166:	e5 95       	asr	r30
    4168:	ee 1f       	adc	r30, r30
    416a:	ff 1f       	adc	r31, r31
    416c:	49 f0       	breq	.+18     	; 0x4180 <exp+0x4e>
    416e:	fe 57       	subi	r31, 0x7E	; 126
    4170:	e0 68       	ori	r30, 0x80	; 128
    4172:	44 27       	eor	r20, r20
    4174:	ee 0f       	add	r30, r30
    4176:	44 1f       	adc	r20, r20
    4178:	fa 95       	dec	r31
    417a:	e1 f7       	brne	.-8      	; 0x4174 <exp+0x42>
    417c:	41 95       	neg	r20
    417e:	55 0b       	sbc	r21, r21
    4180:	33 d0       	rcall	.+102    	; 0x41e8 <ldexp>
    4182:	0f 90       	pop	r0
    4184:	07 fe       	sbrs	r0, 7
    4186:	27 c0       	rjmp	.+78     	; 0x41d6 <inverse>
    4188:	08 95       	ret

0000418a <__fp_mpack>:
    418a:	9f 3f       	cpi	r25, 0xFF	; 255
    418c:	31 f0       	breq	.+12     	; 0x419a <__fp_mpack_finite+0xc>

0000418e <__fp_mpack_finite>:
    418e:	91 50       	subi	r25, 0x01	; 1
    4190:	20 f4       	brcc	.+8      	; 0x419a <__fp_mpack_finite+0xc>
    4192:	87 95       	ror	r24
    4194:	77 95       	ror	r23
    4196:	67 95       	ror	r22
    4198:	b7 95       	ror	r27
    419a:	88 0f       	add	r24, r24
    419c:	91 1d       	adc	r25, r1
    419e:	96 95       	lsr	r25
    41a0:	87 95       	ror	r24
    41a2:	97 f9       	bld	r25, 7
    41a4:	08 95       	ret

000041a6 <__fp_norm2>:
    41a6:	91 50       	subi	r25, 0x01	; 1
    41a8:	50 40       	sbci	r21, 0x00	; 0
    41aa:	66 0f       	add	r22, r22
    41ac:	77 1f       	adc	r23, r23
    41ae:	88 1f       	adc	r24, r24
    41b0:	d2 f7       	brpl	.-12     	; 0x41a6 <__fp_norm2>
    41b2:	08 95       	ret

000041b4 <__fp_powsodd>:
    41b4:	9f 93       	push	r25
    41b6:	8f 93       	push	r24
    41b8:	7f 93       	push	r23
    41ba:	6f 93       	push	r22
    41bc:	ff 93       	push	r31
    41be:	ef 93       	push	r30
    41c0:	9b 01       	movw	r18, r22
    41c2:	ac 01       	movw	r20, r24
    41c4:	b6 de       	rcall	.-660    	; 0x3f32 <__mulsf3>
    41c6:	ef 91       	pop	r30
    41c8:	ff 91       	pop	r31
    41ca:	09 de       	rcall	.-1006   	; 0x3dde <__fp_powser>
    41cc:	2f 91       	pop	r18
    41ce:	3f 91       	pop	r19
    41d0:	4f 91       	pop	r20
    41d2:	5f 91       	pop	r21
    41d4:	ae ce       	rjmp	.-676    	; 0x3f32 <__mulsf3>

000041d6 <inverse>:
    41d6:	9b 01       	movw	r18, r22
    41d8:	ac 01       	movw	r20, r24
    41da:	60 e0       	ldi	r22, 0x00	; 0
    41dc:	70 e0       	ldi	r23, 0x00	; 0
    41de:	80 e8       	ldi	r24, 0x80	; 128
    41e0:	9f e3       	ldi	r25, 0x3F	; 63
    41e2:	df cc       	rjmp	.-1602   	; 0x3ba2 <__divsf3>
    41e4:	f3 cd       	rjmp	.-1050   	; 0x3dcc <__fp_inf>
    41e6:	d1 cf       	rjmp	.-94     	; 0x418a <__fp_mpack>

000041e8 <ldexp>:
    41e8:	7f de       	rcall	.-770    	; 0x3ee8 <__fp_splitA>
    41ea:	e8 f3       	brcs	.-6      	; 0x41e6 <inverse+0x10>
    41ec:	99 23       	and	r25, r25
    41ee:	d9 f3       	breq	.-10     	; 0x41e6 <inverse+0x10>
    41f0:	94 0f       	add	r25, r20
    41f2:	51 1d       	adc	r21, r1
    41f4:	bb f3       	brvs	.-18     	; 0x41e4 <inverse+0xe>
    41f6:	91 50       	subi	r25, 0x01	; 1
    41f8:	50 40       	sbci	r21, 0x00	; 0
    41fa:	94 f0       	brlt	.+36     	; 0x4220 <ldexp+0x38>
    41fc:	59 f0       	breq	.+22     	; 0x4214 <ldexp+0x2c>
    41fe:	88 23       	and	r24, r24
    4200:	32 f0       	brmi	.+12     	; 0x420e <ldexp+0x26>
    4202:	66 0f       	add	r22, r22
    4204:	77 1f       	adc	r23, r23
    4206:	88 1f       	adc	r24, r24
    4208:	91 50       	subi	r25, 0x01	; 1
    420a:	50 40       	sbci	r21, 0x00	; 0
    420c:	c1 f7       	brne	.-16     	; 0x41fe <ldexp+0x16>
    420e:	9e 3f       	cpi	r25, 0xFE	; 254
    4210:	51 05       	cpc	r21, r1
    4212:	44 f7       	brge	.-48     	; 0x41e4 <inverse+0xe>
    4214:	88 0f       	add	r24, r24
    4216:	91 1d       	adc	r25, r1
    4218:	96 95       	lsr	r25
    421a:	87 95       	ror	r24
    421c:	97 f9       	bld	r25, 7
    421e:	08 95       	ret
    4220:	5f 3f       	cpi	r21, 0xFF	; 255
    4222:	ac f0       	brlt	.+42     	; 0x424e <ldexp+0x66>
    4224:	98 3e       	cpi	r25, 0xE8	; 232
    4226:	9c f0       	brlt	.+38     	; 0x424e <ldexp+0x66>
    4228:	bb 27       	eor	r27, r27
    422a:	86 95       	lsr	r24
    422c:	77 95       	ror	r23
    422e:	67 95       	ror	r22
    4230:	b7 95       	ror	r27
    4232:	08 f4       	brcc	.+2      	; 0x4236 <ldexp+0x4e>
    4234:	b1 60       	ori	r27, 0x01	; 1
    4236:	93 95       	inc	r25
    4238:	c1 f7       	brne	.-16     	; 0x422a <ldexp+0x42>
    423a:	bb 0f       	add	r27, r27
    423c:	58 f7       	brcc	.-42     	; 0x4214 <ldexp+0x2c>
    423e:	11 f4       	brne	.+4      	; 0x4244 <ldexp+0x5c>
    4240:	60 ff       	sbrs	r22, 0
    4242:	e8 cf       	rjmp	.-48     	; 0x4214 <ldexp+0x2c>
    4244:	6f 5f       	subi	r22, 0xFF	; 255
    4246:	7f 4f       	sbci	r23, 0xFF	; 255
    4248:	8f 4f       	sbci	r24, 0xFF	; 255
    424a:	9f 4f       	sbci	r25, 0xFF	; 255
    424c:	e3 cf       	rjmp	.-58     	; 0x4214 <ldexp+0x2c>
    424e:	67 ce       	rjmp	.-818    	; 0x3f1e <__fp_szero>
    4250:	0e f0       	brts	.+2      	; 0x4254 <ldexp+0x6c>
    4252:	9b cf       	rjmp	.-202    	; 0x418a <__fp_mpack>
    4254:	c1 cd       	rjmp	.-1150   	; 0x3dd8 <__fp_nan>
    4256:	68 94       	set
    4258:	b9 cd       	rjmp	.-1166   	; 0x3dcc <__fp_inf>

0000425a <log>:
    425a:	46 de       	rcall	.-884    	; 0x3ee8 <__fp_splitA>
    425c:	c8 f3       	brcs	.-14     	; 0x4250 <ldexp+0x68>
    425e:	99 23       	and	r25, r25
    4260:	d1 f3       	breq	.-12     	; 0x4256 <ldexp+0x6e>
    4262:	c6 f3       	brts	.-16     	; 0x4254 <ldexp+0x6c>
    4264:	df 93       	push	r29
    4266:	cf 93       	push	r28
    4268:	1f 93       	push	r17
    426a:	0f 93       	push	r16
    426c:	ff 92       	push	r15
    426e:	c9 2f       	mov	r28, r25
    4270:	dd 27       	eor	r29, r29
    4272:	88 23       	and	r24, r24
    4274:	2a f0       	brmi	.+10     	; 0x4280 <log+0x26>
    4276:	21 97       	sbiw	r28, 0x01	; 1
    4278:	66 0f       	add	r22, r22
    427a:	77 1f       	adc	r23, r23
    427c:	88 1f       	adc	r24, r24
    427e:	da f7       	brpl	.-10     	; 0x4276 <log+0x1c>
    4280:	20 e0       	ldi	r18, 0x00	; 0
    4282:	30 e0       	ldi	r19, 0x00	; 0
    4284:	40 e8       	ldi	r20, 0x80	; 128
    4286:	5f eb       	ldi	r21, 0xBF	; 191
    4288:	9f e3       	ldi	r25, 0x3F	; 63
    428a:	88 39       	cpi	r24, 0x98	; 152
    428c:	20 f0       	brcs	.+8      	; 0x4296 <log+0x3c>
    428e:	80 3e       	cpi	r24, 0xE0	; 224
    4290:	30 f0       	brcs	.+12     	; 0x429e <log+0x44>
    4292:	21 96       	adiw	r28, 0x01	; 1
    4294:	8f 77       	andi	r24, 0x7F	; 127
    4296:	1a dc       	rcall	.-1996   	; 0x3acc <__addsf3>
    4298:	ea e3       	ldi	r30, 0x3A	; 58
    429a:	f1 e0       	ldi	r31, 0x01	; 1
    429c:	03 c0       	rjmp	.+6      	; 0x42a4 <log+0x4a>
    429e:	16 dc       	rcall	.-2004   	; 0x3acc <__addsf3>
    42a0:	e7 e6       	ldi	r30, 0x67	; 103
    42a2:	f1 e0       	ldi	r31, 0x01	; 1
    42a4:	9c dd       	rcall	.-1224   	; 0x3dde <__fp_powser>
    42a6:	8b 01       	movw	r16, r22
    42a8:	be 01       	movw	r22, r28
    42aa:	ec 01       	movw	r28, r24
    42ac:	fb 2e       	mov	r15, r27
    42ae:	6f 57       	subi	r22, 0x7F	; 127
    42b0:	71 09       	sbc	r23, r1
    42b2:	75 95       	asr	r23
    42b4:	77 1f       	adc	r23, r23
    42b6:	88 0b       	sbc	r24, r24
    42b8:	99 0b       	sbc	r25, r25
    42ba:	0e dd       	rcall	.-1508   	; 0x3cd8 <__floatsisf>
    42bc:	28 e1       	ldi	r18, 0x18	; 24
    42be:	32 e7       	ldi	r19, 0x72	; 114
    42c0:	41 e3       	ldi	r20, 0x31	; 49
    42c2:	5f e3       	ldi	r21, 0x3F	; 63
    42c4:	42 de       	rcall	.-892    	; 0x3f4a <__mulsf3x>
    42c6:	af 2d       	mov	r26, r15
    42c8:	98 01       	movw	r18, r16
    42ca:	ae 01       	movw	r20, r28
    42cc:	ff 90       	pop	r15
    42ce:	0f 91       	pop	r16
    42d0:	1f 91       	pop	r17
    42d2:	cf 91       	pop	r28
    42d4:	df 91       	pop	r29
    42d6:	0b dc       	rcall	.-2026   	; 0x3aee <__addsf3x>
    42d8:	dd cd       	rjmp	.-1094   	; 0x3e94 <__fp_round>

000042da <modf>:
    42da:	fa 01       	movw	r30, r20
    42dc:	dc 01       	movw	r26, r24
    42de:	aa 0f       	add	r26, r26
    42e0:	bb 1f       	adc	r27, r27
    42e2:	9b 01       	movw	r18, r22
    42e4:	ac 01       	movw	r20, r24
    42e6:	bf 57       	subi	r27, 0x7F	; 127
    42e8:	28 f4       	brcc	.+10     	; 0x42f4 <modf+0x1a>
    42ea:	22 27       	eor	r18, r18
    42ec:	33 27       	eor	r19, r19
    42ee:	44 27       	eor	r20, r20
    42f0:	50 78       	andi	r21, 0x80	; 128
    42f2:	1f c0       	rjmp	.+62     	; 0x4332 <modf+0x58>
    42f4:	b7 51       	subi	r27, 0x17	; 23
    42f6:	88 f4       	brcc	.+34     	; 0x431a <modf+0x40>
    42f8:	ab 2f       	mov	r26, r27
    42fa:	00 24       	eor	r0, r0
    42fc:	46 95       	lsr	r20
    42fe:	37 95       	ror	r19
    4300:	27 95       	ror	r18
    4302:	01 1c       	adc	r0, r1
    4304:	a3 95       	inc	r26
    4306:	d2 f3       	brmi	.-12     	; 0x42fc <modf+0x22>
    4308:	00 20       	and	r0, r0
    430a:	69 f0       	breq	.+26     	; 0x4326 <modf+0x4c>
    430c:	22 0f       	add	r18, r18
    430e:	33 1f       	adc	r19, r19
    4310:	44 1f       	adc	r20, r20
    4312:	b3 95       	inc	r27
    4314:	da f3       	brmi	.-10     	; 0x430c <modf+0x32>
    4316:	0d d0       	rcall	.+26     	; 0x4332 <modf+0x58>
    4318:	d8 cb       	rjmp	.-2128   	; 0x3aca <__subsf3>
    431a:	61 30       	cpi	r22, 0x01	; 1
    431c:	71 05       	cpc	r23, r1
    431e:	a0 e8       	ldi	r26, 0x80	; 128
    4320:	8a 07       	cpc	r24, r26
    4322:	b9 46       	sbci	r27, 0x69	; 105
    4324:	30 f4       	brcc	.+12     	; 0x4332 <modf+0x58>
    4326:	9b 01       	movw	r18, r22
    4328:	ac 01       	movw	r20, r24
    432a:	66 27       	eor	r22, r22
    432c:	77 27       	eor	r23, r23
    432e:	88 27       	eor	r24, r24
    4330:	90 78       	andi	r25, 0x80	; 128
    4332:	30 96       	adiw	r30, 0x00	; 0
    4334:	21 f0       	breq	.+8      	; 0x433e <modf+0x64>
    4336:	20 83       	st	Z, r18
    4338:	31 83       	std	Z+1, r19	; 0x01
    433a:	42 83       	std	Z+2, r20	; 0x02
    433c:	53 83       	std	Z+3, r21	; 0x03
    433e:	08 95       	ret

00004340 <vfprintf>:
    4340:	2f 92       	push	r2
    4342:	3f 92       	push	r3
    4344:	4f 92       	push	r4
    4346:	5f 92       	push	r5
    4348:	6f 92       	push	r6
    434a:	7f 92       	push	r7
    434c:	8f 92       	push	r8
    434e:	9f 92       	push	r9
    4350:	af 92       	push	r10
    4352:	bf 92       	push	r11
    4354:	cf 92       	push	r12
    4356:	df 92       	push	r13
    4358:	ef 92       	push	r14
    435a:	ff 92       	push	r15
    435c:	0f 93       	push	r16
    435e:	1f 93       	push	r17
    4360:	df 93       	push	r29
    4362:	cf 93       	push	r28
    4364:	cd b7       	in	r28, 0x3d	; 61
    4366:	de b7       	in	r29, 0x3e	; 62
    4368:	61 97       	sbiw	r28, 0x11	; 17
    436a:	0f b6       	in	r0, 0x3f	; 63
    436c:	f8 94       	cli
    436e:	de bf       	out	0x3e, r29	; 62
    4370:	0f be       	out	0x3f, r0	; 63
    4372:	cd bf       	out	0x3d, r28	; 61
    4374:	3c 01       	movw	r6, r24
    4376:	7f 87       	std	Y+15, r23	; 0x0f
    4378:	6e 87       	std	Y+14, r22	; 0x0e
    437a:	6a 01       	movw	r12, r20
    437c:	fc 01       	movw	r30, r24
    437e:	17 82       	std	Z+7, r1	; 0x07
    4380:	16 82       	std	Z+6, r1	; 0x06
    4382:	83 81       	ldd	r24, Z+3	; 0x03
    4384:	81 fd       	sbrc	r24, 1
    4386:	03 c0       	rjmp	.+6      	; 0x438e <vfprintf+0x4e>
    4388:	6f ef       	ldi	r22, 0xFF	; 255
    438a:	7f ef       	ldi	r23, 0xFF	; 255
    438c:	52 c3       	rjmp	.+1700   	; 0x4a32 <vfprintf+0x6f2>
    438e:	9e 01       	movw	r18, r28
    4390:	2f 5f       	subi	r18, 0xFF	; 255
    4392:	3f 4f       	sbci	r19, 0xFF	; 255
    4394:	39 8b       	std	Y+17, r19	; 0x11
    4396:	28 8b       	std	Y+16, r18	; 0x10
    4398:	f3 01       	movw	r30, r6
    439a:	23 81       	ldd	r18, Z+3	; 0x03
    439c:	ee 85       	ldd	r30, Y+14	; 0x0e
    439e:	ff 85       	ldd	r31, Y+15	; 0x0f
    43a0:	23 fd       	sbrc	r18, 3
    43a2:	85 91       	lpm	r24, Z+
    43a4:	23 ff       	sbrs	r18, 3
    43a6:	81 91       	ld	r24, Z+
    43a8:	ff 87       	std	Y+15, r31	; 0x0f
    43aa:	ee 87       	std	Y+14, r30	; 0x0e
    43ac:	88 23       	and	r24, r24
    43ae:	09 f4       	brne	.+2      	; 0x43b2 <vfprintf+0x72>
    43b0:	3d c3       	rjmp	.+1658   	; 0x4a2c <vfprintf+0x6ec>
    43b2:	85 32       	cpi	r24, 0x25	; 37
    43b4:	51 f4       	brne	.+20     	; 0x43ca <vfprintf+0x8a>
    43b6:	ee 85       	ldd	r30, Y+14	; 0x0e
    43b8:	ff 85       	ldd	r31, Y+15	; 0x0f
    43ba:	23 fd       	sbrc	r18, 3
    43bc:	85 91       	lpm	r24, Z+
    43be:	23 ff       	sbrs	r18, 3
    43c0:	81 91       	ld	r24, Z+
    43c2:	ff 87       	std	Y+15, r31	; 0x0f
    43c4:	ee 87       	std	Y+14, r30	; 0x0e
    43c6:	85 32       	cpi	r24, 0x25	; 37
    43c8:	21 f4       	brne	.+8      	; 0x43d2 <vfprintf+0x92>
    43ca:	90 e0       	ldi	r25, 0x00	; 0
    43cc:	b3 01       	movw	r22, r6
    43ce:	c6 d4       	rcall	.+2444   	; 0x4d5c <fputc>
    43d0:	e3 cf       	rjmp	.-58     	; 0x4398 <vfprintf+0x58>
    43d2:	98 2f       	mov	r25, r24
    43d4:	10 e0       	ldi	r17, 0x00	; 0
    43d6:	88 24       	eor	r8, r8
    43d8:	99 24       	eor	r9, r9
    43da:	10 32       	cpi	r17, 0x20	; 32
    43dc:	b0 f4       	brcc	.+44     	; 0x440a <vfprintf+0xca>
    43de:	9b 32       	cpi	r25, 0x2B	; 43
    43e0:	69 f0       	breq	.+26     	; 0x43fc <vfprintf+0xbc>
    43e2:	9c 32       	cpi	r25, 0x2C	; 44
    43e4:	28 f4       	brcc	.+10     	; 0x43f0 <vfprintf+0xb0>
    43e6:	90 32       	cpi	r25, 0x20	; 32
    43e8:	51 f0       	breq	.+20     	; 0x43fe <vfprintf+0xbe>
    43ea:	93 32       	cpi	r25, 0x23	; 35
    43ec:	71 f4       	brne	.+28     	; 0x440a <vfprintf+0xca>
    43ee:	0b c0       	rjmp	.+22     	; 0x4406 <vfprintf+0xc6>
    43f0:	9d 32       	cpi	r25, 0x2D	; 45
    43f2:	39 f0       	breq	.+14     	; 0x4402 <vfprintf+0xc2>
    43f4:	90 33       	cpi	r25, 0x30	; 48
    43f6:	49 f4       	brne	.+18     	; 0x440a <vfprintf+0xca>
    43f8:	11 60       	ori	r17, 0x01	; 1
    43fa:	28 c0       	rjmp	.+80     	; 0x444c <vfprintf+0x10c>
    43fc:	12 60       	ori	r17, 0x02	; 2
    43fe:	14 60       	ori	r17, 0x04	; 4
    4400:	25 c0       	rjmp	.+74     	; 0x444c <vfprintf+0x10c>
    4402:	18 60       	ori	r17, 0x08	; 8
    4404:	23 c0       	rjmp	.+70     	; 0x444c <vfprintf+0x10c>
    4406:	10 61       	ori	r17, 0x10	; 16
    4408:	21 c0       	rjmp	.+66     	; 0x444c <vfprintf+0x10c>
    440a:	17 fd       	sbrc	r17, 7
    440c:	2a c0       	rjmp	.+84     	; 0x4462 <vfprintf+0x122>
    440e:	89 2f       	mov	r24, r25
    4410:	80 53       	subi	r24, 0x30	; 48
    4412:	8a 30       	cpi	r24, 0x0A	; 10
    4414:	78 f4       	brcc	.+30     	; 0x4434 <vfprintf+0xf4>
    4416:	16 ff       	sbrs	r17, 6
    4418:	06 c0       	rjmp	.+12     	; 0x4426 <vfprintf+0xe6>
    441a:	fa e0       	ldi	r31, 0x0A	; 10
    441c:	9f 9e       	mul	r9, r31
    441e:	90 2c       	mov	r9, r0
    4420:	11 24       	eor	r1, r1
    4422:	98 0e       	add	r9, r24
    4424:	13 c0       	rjmp	.+38     	; 0x444c <vfprintf+0x10c>
    4426:	3a e0       	ldi	r19, 0x0A	; 10
    4428:	83 9e       	mul	r8, r19
    442a:	80 2c       	mov	r8, r0
    442c:	11 24       	eor	r1, r1
    442e:	88 0e       	add	r8, r24
    4430:	10 62       	ori	r17, 0x20	; 32
    4432:	0c c0       	rjmp	.+24     	; 0x444c <vfprintf+0x10c>
    4434:	9e 32       	cpi	r25, 0x2E	; 46
    4436:	21 f4       	brne	.+8      	; 0x4440 <vfprintf+0x100>
    4438:	16 fd       	sbrc	r17, 6
    443a:	f8 c2       	rjmp	.+1520   	; 0x4a2c <vfprintf+0x6ec>
    443c:	10 64       	ori	r17, 0x40	; 64
    443e:	06 c0       	rjmp	.+12     	; 0x444c <vfprintf+0x10c>
    4440:	9c 36       	cpi	r25, 0x6C	; 108
    4442:	11 f4       	brne	.+4      	; 0x4448 <vfprintf+0x108>
    4444:	10 68       	ori	r17, 0x80	; 128
    4446:	02 c0       	rjmp	.+4      	; 0x444c <vfprintf+0x10c>
    4448:	98 36       	cpi	r25, 0x68	; 104
    444a:	59 f4       	brne	.+22     	; 0x4462 <vfprintf+0x122>
    444c:	ee 85       	ldd	r30, Y+14	; 0x0e
    444e:	ff 85       	ldd	r31, Y+15	; 0x0f
    4450:	23 fd       	sbrc	r18, 3
    4452:	95 91       	lpm	r25, Z+
    4454:	23 ff       	sbrs	r18, 3
    4456:	91 91       	ld	r25, Z+
    4458:	ff 87       	std	Y+15, r31	; 0x0f
    445a:	ee 87       	std	Y+14, r30	; 0x0e
    445c:	99 23       	and	r25, r25
    445e:	09 f0       	breq	.+2      	; 0x4462 <vfprintf+0x122>
    4460:	bc cf       	rjmp	.-136    	; 0x43da <vfprintf+0x9a>
    4462:	89 2f       	mov	r24, r25
    4464:	85 54       	subi	r24, 0x45	; 69
    4466:	83 30       	cpi	r24, 0x03	; 3
    4468:	20 f4       	brcc	.+8      	; 0x4472 <vfprintf+0x132>
    446a:	81 2f       	mov	r24, r17
    446c:	80 61       	ori	r24, 0x10	; 16
    446e:	90 5e       	subi	r25, 0xE0	; 224
    4470:	07 c0       	rjmp	.+14     	; 0x4480 <vfprintf+0x140>
    4472:	89 2f       	mov	r24, r25
    4474:	85 56       	subi	r24, 0x65	; 101
    4476:	83 30       	cpi	r24, 0x03	; 3
    4478:	08 f0       	brcs	.+2      	; 0x447c <vfprintf+0x13c>
    447a:	8f c1       	rjmp	.+798    	; 0x479a <vfprintf+0x45a>
    447c:	81 2f       	mov	r24, r17
    447e:	8f 7e       	andi	r24, 0xEF	; 239
    4480:	86 fd       	sbrc	r24, 6
    4482:	02 c0       	rjmp	.+4      	; 0x4488 <vfprintf+0x148>
    4484:	76 e0       	ldi	r23, 0x06	; 6
    4486:	97 2e       	mov	r9, r23
    4488:	6f e3       	ldi	r22, 0x3F	; 63
    448a:	f6 2e       	mov	r15, r22
    448c:	f8 22       	and	r15, r24
    448e:	95 36       	cpi	r25, 0x65	; 101
    4490:	19 f4       	brne	.+6      	; 0x4498 <vfprintf+0x158>
    4492:	f0 e4       	ldi	r31, 0x40	; 64
    4494:	ff 2a       	or	r15, r31
    4496:	07 c0       	rjmp	.+14     	; 0x44a6 <vfprintf+0x166>
    4498:	96 36       	cpi	r25, 0x66	; 102
    449a:	19 f4       	brne	.+6      	; 0x44a2 <vfprintf+0x162>
    449c:	20 e8       	ldi	r18, 0x80	; 128
    449e:	f2 2a       	or	r15, r18
    44a0:	02 c0       	rjmp	.+4      	; 0x44a6 <vfprintf+0x166>
    44a2:	91 10       	cpse	r9, r1
    44a4:	9a 94       	dec	r9
    44a6:	f7 fe       	sbrs	r15, 7
    44a8:	0a c0       	rjmp	.+20     	; 0x44be <vfprintf+0x17e>
    44aa:	3b e3       	ldi	r19, 0x3B	; 59
    44ac:	39 15       	cp	r19, r9
    44ae:	18 f4       	brcc	.+6      	; 0x44b6 <vfprintf+0x176>
    44b0:	5c e3       	ldi	r21, 0x3C	; 60
    44b2:	b5 2e       	mov	r11, r21
    44b4:	02 c0       	rjmp	.+4      	; 0x44ba <vfprintf+0x17a>
    44b6:	b9 2c       	mov	r11, r9
    44b8:	b3 94       	inc	r11
    44ba:	27 e0       	ldi	r18, 0x07	; 7
    44bc:	09 c0       	rjmp	.+18     	; 0x44d0 <vfprintf+0x190>
    44be:	47 e0       	ldi	r20, 0x07	; 7
    44c0:	49 15       	cp	r20, r9
    44c2:	20 f4       	brcc	.+8      	; 0x44cc <vfprintf+0x18c>
    44c4:	bb 24       	eor	r11, r11
    44c6:	47 e0       	ldi	r20, 0x07	; 7
    44c8:	94 2e       	mov	r9, r20
    44ca:	f7 cf       	rjmp	.-18     	; 0x44ba <vfprintf+0x17a>
    44cc:	29 2d       	mov	r18, r9
    44ce:	bb 24       	eor	r11, r11
    44d0:	c6 01       	movw	r24, r12
    44d2:	04 96       	adiw	r24, 0x04	; 4
    44d4:	9d 87       	std	Y+13, r25	; 0x0d
    44d6:	8c 87       	std	Y+12, r24	; 0x0c
    44d8:	f6 01       	movw	r30, r12
    44da:	60 81       	ld	r22, Z
    44dc:	71 81       	ldd	r23, Z+1	; 0x01
    44de:	82 81       	ldd	r24, Z+2	; 0x02
    44e0:	93 81       	ldd	r25, Z+3	; 0x03
    44e2:	ae 01       	movw	r20, r28
    44e4:	4f 5f       	subi	r20, 0xFF	; 255
    44e6:	5f 4f       	sbci	r21, 0xFF	; 255
    44e8:	0b 2d       	mov	r16, r11
    44ea:	bd d2       	rcall	.+1402   	; 0x4a66 <__ftoa_engine>
    44ec:	6c 01       	movw	r12, r24
    44ee:	09 81       	ldd	r16, Y+1	; 0x01
    44f0:	20 2e       	mov	r2, r16
    44f2:	33 24       	eor	r3, r3
    44f4:	00 ff       	sbrs	r16, 0
    44f6:	04 c0       	rjmp	.+8      	; 0x4500 <vfprintf+0x1c0>
    44f8:	03 fd       	sbrc	r16, 3
    44fa:	02 c0       	rjmp	.+4      	; 0x4500 <vfprintf+0x1c0>
    44fc:	1d e2       	ldi	r17, 0x2D	; 45
    44fe:	09 c0       	rjmp	.+18     	; 0x4512 <vfprintf+0x1d2>
    4500:	f1 fe       	sbrs	r15, 1
    4502:	02 c0       	rjmp	.+4      	; 0x4508 <vfprintf+0x1c8>
    4504:	1b e2       	ldi	r17, 0x2B	; 43
    4506:	05 c0       	rjmp	.+10     	; 0x4512 <vfprintf+0x1d2>
    4508:	f2 fc       	sbrc	r15, 2
    450a:	02 c0       	rjmp	.+4      	; 0x4510 <vfprintf+0x1d0>
    450c:	10 e0       	ldi	r17, 0x00	; 0
    450e:	01 c0       	rjmp	.+2      	; 0x4512 <vfprintf+0x1d2>
    4510:	10 e2       	ldi	r17, 0x20	; 32
    4512:	c1 01       	movw	r24, r2
    4514:	8c 70       	andi	r24, 0x0C	; 12
    4516:	90 70       	andi	r25, 0x00	; 0
    4518:	89 2b       	or	r24, r25
    451a:	a1 f1       	breq	.+104    	; 0x4584 <vfprintf+0x244>
    451c:	11 23       	and	r17, r17
    451e:	11 f4       	brne	.+4      	; 0x4524 <vfprintf+0x1e4>
    4520:	83 e0       	ldi	r24, 0x03	; 3
    4522:	01 c0       	rjmp	.+2      	; 0x4526 <vfprintf+0x1e6>
    4524:	84 e0       	ldi	r24, 0x04	; 4
    4526:	88 15       	cp	r24, r8
    4528:	10 f0       	brcs	.+4      	; 0x452e <vfprintf+0x1ee>
    452a:	88 24       	eor	r8, r8
    452c:	09 c0       	rjmp	.+18     	; 0x4540 <vfprintf+0x200>
    452e:	88 1a       	sub	r8, r24
    4530:	f3 fc       	sbrc	r15, 3
    4532:	06 c0       	rjmp	.+12     	; 0x4540 <vfprintf+0x200>
    4534:	80 e2       	ldi	r24, 0x20	; 32
    4536:	90 e0       	ldi	r25, 0x00	; 0
    4538:	b3 01       	movw	r22, r6
    453a:	10 d4       	rcall	.+2080   	; 0x4d5c <fputc>
    453c:	8a 94       	dec	r8
    453e:	d1 f7       	brne	.-12     	; 0x4534 <vfprintf+0x1f4>
    4540:	11 23       	and	r17, r17
    4542:	21 f0       	breq	.+8      	; 0x454c <vfprintf+0x20c>
    4544:	81 2f       	mov	r24, r17
    4546:	90 e0       	ldi	r25, 0x00	; 0
    4548:	b3 01       	movw	r22, r6
    454a:	08 d4       	rcall	.+2064   	; 0x4d5c <fputc>
    454c:	23 fe       	sbrs	r2, 3
    454e:	03 c0       	rjmp	.+6      	; 0x4556 <vfprintf+0x216>
    4550:	04 e9       	ldi	r16, 0x94	; 148
    4552:	11 e0       	ldi	r17, 0x01	; 1
    4554:	0d c0       	rjmp	.+26     	; 0x4570 <vfprintf+0x230>
    4556:	08 e9       	ldi	r16, 0x98	; 152
    4558:	11 e0       	ldi	r17, 0x01	; 1
    455a:	0a c0       	rjmp	.+20     	; 0x4570 <vfprintf+0x230>
    455c:	e1 14       	cp	r14, r1
    455e:	f1 04       	cpc	r15, r1
    4560:	09 f0       	breq	.+2      	; 0x4564 <vfprintf+0x224>
    4562:	80 52       	subi	r24, 0x20	; 32
    4564:	90 e0       	ldi	r25, 0x00	; 0
    4566:	b3 01       	movw	r22, r6
    4568:	f9 d3       	rcall	.+2034   	; 0x4d5c <fputc>
    456a:	0f 5f       	subi	r16, 0xFF	; 255
    456c:	1f 4f       	sbci	r17, 0xFF	; 255
    456e:	05 c0       	rjmp	.+10     	; 0x457a <vfprintf+0x23a>
    4570:	ef 2c       	mov	r14, r15
    4572:	ff 24       	eor	r15, r15
    4574:	f0 e1       	ldi	r31, 0x10	; 16
    4576:	ef 22       	and	r14, r31
    4578:	ff 24       	eor	r15, r15
    457a:	f8 01       	movw	r30, r16
    457c:	84 91       	lpm	r24, Z+
    457e:	88 23       	and	r24, r24
    4580:	69 f7       	brne	.-38     	; 0x455c <vfprintf+0x21c>
    4582:	08 c1       	rjmp	.+528    	; 0x4794 <vfprintf+0x454>
    4584:	f7 fe       	sbrs	r15, 7
    4586:	12 c0       	rjmp	.+36     	; 0x45ac <vfprintf+0x26c>
    4588:	bc 0c       	add	r11, r12
    458a:	24 fe       	sbrs	r2, 4
    458c:	04 c0       	rjmp	.+8      	; 0x4596 <vfprintf+0x256>
    458e:	8a 81       	ldd	r24, Y+2	; 0x02
    4590:	81 33       	cpi	r24, 0x31	; 49
    4592:	09 f4       	brne	.+2      	; 0x4596 <vfprintf+0x256>
    4594:	ba 94       	dec	r11
    4596:	1b 14       	cp	r1, r11
    4598:	1c f0       	brlt	.+6      	; 0x45a0 <vfprintf+0x260>
    459a:	bb 24       	eor	r11, r11
    459c:	b3 94       	inc	r11
    459e:	2d c0       	rjmp	.+90     	; 0x45fa <vfprintf+0x2ba>
    45a0:	f8 e0       	ldi	r31, 0x08	; 8
    45a2:	fb 15       	cp	r31, r11
    45a4:	50 f5       	brcc	.+84     	; 0x45fa <vfprintf+0x2ba>
    45a6:	38 e0       	ldi	r19, 0x08	; 8
    45a8:	b3 2e       	mov	r11, r19
    45aa:	27 c0       	rjmp	.+78     	; 0x45fa <vfprintf+0x2ba>
    45ac:	f6 fc       	sbrc	r15, 6
    45ae:	25 c0       	rjmp	.+74     	; 0x45fa <vfprintf+0x2ba>
    45b0:	89 2d       	mov	r24, r9
    45b2:	90 e0       	ldi	r25, 0x00	; 0
    45b4:	8c 15       	cp	r24, r12
    45b6:	9d 05       	cpc	r25, r13
    45b8:	4c f0       	brlt	.+18     	; 0x45cc <vfprintf+0x28c>
    45ba:	2c ef       	ldi	r18, 0xFC	; 252
    45bc:	c2 16       	cp	r12, r18
    45be:	2f ef       	ldi	r18, 0xFF	; 255
    45c0:	d2 06       	cpc	r13, r18
    45c2:	24 f0       	brlt	.+8      	; 0x45cc <vfprintf+0x28c>
    45c4:	30 e8       	ldi	r19, 0x80	; 128
    45c6:	f3 2a       	or	r15, r19
    45c8:	01 c0       	rjmp	.+2      	; 0x45cc <vfprintf+0x28c>
    45ca:	9a 94       	dec	r9
    45cc:	99 20       	and	r9, r9
    45ce:	49 f0       	breq	.+18     	; 0x45e2 <vfprintf+0x2a2>
    45d0:	e2 e0       	ldi	r30, 0x02	; 2
    45d2:	f0 e0       	ldi	r31, 0x00	; 0
    45d4:	ec 0f       	add	r30, r28
    45d6:	fd 1f       	adc	r31, r29
    45d8:	e9 0d       	add	r30, r9
    45da:	f1 1d       	adc	r31, r1
    45dc:	80 81       	ld	r24, Z
    45de:	80 33       	cpi	r24, 0x30	; 48
    45e0:	a1 f3       	breq	.-24     	; 0x45ca <vfprintf+0x28a>
    45e2:	f7 fe       	sbrs	r15, 7
    45e4:	0a c0       	rjmp	.+20     	; 0x45fa <vfprintf+0x2ba>
    45e6:	b9 2c       	mov	r11, r9
    45e8:	b3 94       	inc	r11
    45ea:	89 2d       	mov	r24, r9
    45ec:	90 e0       	ldi	r25, 0x00	; 0
    45ee:	c8 16       	cp	r12, r24
    45f0:	d9 06       	cpc	r13, r25
    45f2:	14 f0       	brlt	.+4      	; 0x45f8 <vfprintf+0x2b8>
    45f4:	99 24       	eor	r9, r9
    45f6:	01 c0       	rjmp	.+2      	; 0x45fa <vfprintf+0x2ba>
    45f8:	9c 18       	sub	r9, r12
    45fa:	f7 fc       	sbrc	r15, 7
    45fc:	03 c0       	rjmp	.+6      	; 0x4604 <vfprintf+0x2c4>
    45fe:	25 e0       	ldi	r18, 0x05	; 5
    4600:	30 e0       	ldi	r19, 0x00	; 0
    4602:	09 c0       	rjmp	.+18     	; 0x4616 <vfprintf+0x2d6>
    4604:	1c 14       	cp	r1, r12
    4606:	1d 04       	cpc	r1, r13
    4608:	1c f0       	brlt	.+6      	; 0x4610 <vfprintf+0x2d0>
    460a:	21 e0       	ldi	r18, 0x01	; 1
    460c:	30 e0       	ldi	r19, 0x00	; 0
    460e:	03 c0       	rjmp	.+6      	; 0x4616 <vfprintf+0x2d6>
    4610:	96 01       	movw	r18, r12
    4612:	2f 5f       	subi	r18, 0xFF	; 255
    4614:	3f 4f       	sbci	r19, 0xFF	; 255
    4616:	11 23       	and	r17, r17
    4618:	11 f0       	breq	.+4      	; 0x461e <vfprintf+0x2de>
    461a:	2f 5f       	subi	r18, 0xFF	; 255
    461c:	3f 4f       	sbci	r19, 0xFF	; 255
    461e:	99 20       	and	r9, r9
    4620:	29 f0       	breq	.+10     	; 0x462c <vfprintf+0x2ec>
    4622:	89 2d       	mov	r24, r9
    4624:	90 e0       	ldi	r25, 0x00	; 0
    4626:	01 96       	adiw	r24, 0x01	; 1
    4628:	28 0f       	add	r18, r24
    462a:	39 1f       	adc	r19, r25
    462c:	88 2d       	mov	r24, r8
    462e:	90 e0       	ldi	r25, 0x00	; 0
    4630:	28 17       	cp	r18, r24
    4632:	39 07       	cpc	r19, r25
    4634:	14 f0       	brlt	.+4      	; 0x463a <vfprintf+0x2fa>
    4636:	88 24       	eor	r8, r8
    4638:	01 c0       	rjmp	.+2      	; 0x463c <vfprintf+0x2fc>
    463a:	82 1a       	sub	r8, r18
    463c:	4f 2c       	mov	r4, r15
    463e:	55 24       	eor	r5, r5
    4640:	c2 01       	movw	r24, r4
    4642:	89 70       	andi	r24, 0x09	; 9
    4644:	90 70       	andi	r25, 0x00	; 0
    4646:	89 2b       	or	r24, r25
    4648:	31 f0       	breq	.+12     	; 0x4656 <vfprintf+0x316>
    464a:	07 c0       	rjmp	.+14     	; 0x465a <vfprintf+0x31a>
    464c:	80 e2       	ldi	r24, 0x20	; 32
    464e:	90 e0       	ldi	r25, 0x00	; 0
    4650:	b3 01       	movw	r22, r6
    4652:	84 d3       	rcall	.+1800   	; 0x4d5c <fputc>
    4654:	8a 94       	dec	r8
    4656:	88 20       	and	r8, r8
    4658:	c9 f7       	brne	.-14     	; 0x464c <vfprintf+0x30c>
    465a:	11 23       	and	r17, r17
    465c:	21 f0       	breq	.+8      	; 0x4666 <vfprintf+0x326>
    465e:	81 2f       	mov	r24, r17
    4660:	90 e0       	ldi	r25, 0x00	; 0
    4662:	b3 01       	movw	r22, r6
    4664:	7b d3       	rcall	.+1782   	; 0x4d5c <fputc>
    4666:	43 fe       	sbrs	r4, 3
    4668:	06 c0       	rjmp	.+12     	; 0x4676 <vfprintf+0x336>
    466a:	07 c0       	rjmp	.+14     	; 0x467a <vfprintf+0x33a>
    466c:	80 e3       	ldi	r24, 0x30	; 48
    466e:	90 e0       	ldi	r25, 0x00	; 0
    4670:	b3 01       	movw	r22, r6
    4672:	74 d3       	rcall	.+1768   	; 0x4d5c <fputc>
    4674:	8a 94       	dec	r8
    4676:	88 20       	and	r8, r8
    4678:	c9 f7       	brne	.-14     	; 0x466c <vfprintf+0x32c>
    467a:	f7 fe       	sbrs	r15, 7
    467c:	44 c0       	rjmp	.+136    	; 0x4706 <vfprintf+0x3c6>
    467e:	86 01       	movw	r16, r12
    4680:	d7 fe       	sbrs	r13, 7
    4682:	02 c0       	rjmp	.+4      	; 0x4688 <vfprintf+0x348>
    4684:	00 e0       	ldi	r16, 0x00	; 0
    4686:	10 e0       	ldi	r17, 0x00	; 0
    4688:	76 01       	movw	r14, r12
    468a:	08 94       	sec
    468c:	e1 1c       	adc	r14, r1
    468e:	f1 1c       	adc	r15, r1
    4690:	e0 1a       	sub	r14, r16
    4692:	f1 0a       	sbc	r15, r17
    4694:	41 e0       	ldi	r20, 0x01	; 1
    4696:	50 e0       	ldi	r21, 0x00	; 0
    4698:	4c 0f       	add	r20, r28
    469a:	5d 1f       	adc	r21, r29
    469c:	e4 0e       	add	r14, r20
    469e:	f5 1e       	adc	r15, r21
    46a0:	26 01       	movw	r4, r12
    46a2:	4b 18       	sub	r4, r11
    46a4:	51 08       	sbc	r5, r1
    46a6:	89 2d       	mov	r24, r9
    46a8:	90 e0       	ldi	r25, 0x00	; 0
    46aa:	aa 24       	eor	r10, r10
    46ac:	bb 24       	eor	r11, r11
    46ae:	a8 1a       	sub	r10, r24
    46b0:	b9 0a       	sbc	r11, r25
    46b2:	5f ef       	ldi	r21, 0xFF	; 255
    46b4:	0f 3f       	cpi	r16, 0xFF	; 255
    46b6:	15 07       	cpc	r17, r21
    46b8:	21 f4       	brne	.+8      	; 0x46c2 <vfprintf+0x382>
    46ba:	8e e2       	ldi	r24, 0x2E	; 46
    46bc:	90 e0       	ldi	r25, 0x00	; 0
    46be:	b3 01       	movw	r22, r6
    46c0:	4d d3       	rcall	.+1690   	; 0x4d5c <fputc>
    46c2:	c0 16       	cp	r12, r16
    46c4:	d1 06       	cpc	r13, r17
    46c6:	34 f0       	brlt	.+12     	; 0x46d4 <vfprintf+0x394>
    46c8:	40 16       	cp	r4, r16
    46ca:	51 06       	cpc	r5, r17
    46cc:	1c f4       	brge	.+6      	; 0x46d4 <vfprintf+0x394>
    46ce:	f7 01       	movw	r30, r14
    46d0:	80 81       	ld	r24, Z
    46d2:	01 c0       	rjmp	.+2      	; 0x46d6 <vfprintf+0x396>
    46d4:	80 e3       	ldi	r24, 0x30	; 48
    46d6:	01 50       	subi	r16, 0x01	; 1
    46d8:	10 40       	sbci	r17, 0x00	; 0
    46da:	08 94       	sec
    46dc:	e1 1c       	adc	r14, r1
    46de:	f1 1c       	adc	r15, r1
    46e0:	0a 15       	cp	r16, r10
    46e2:	1b 05       	cpc	r17, r11
    46e4:	24 f0       	brlt	.+8      	; 0x46ee <vfprintf+0x3ae>
    46e6:	90 e0       	ldi	r25, 0x00	; 0
    46e8:	b3 01       	movw	r22, r6
    46ea:	38 d3       	rcall	.+1648   	; 0x4d5c <fputc>
    46ec:	e2 cf       	rjmp	.-60     	; 0x46b2 <vfprintf+0x372>
    46ee:	0c 15       	cp	r16, r12
    46f0:	1d 05       	cpc	r17, r13
    46f2:	39 f4       	brne	.+14     	; 0x4702 <vfprintf+0x3c2>
    46f4:	9a 81       	ldd	r25, Y+2	; 0x02
    46f6:	96 33       	cpi	r25, 0x36	; 54
    46f8:	18 f4       	brcc	.+6      	; 0x4700 <vfprintf+0x3c0>
    46fa:	95 33       	cpi	r25, 0x35	; 53
    46fc:	11 f4       	brne	.+4      	; 0x4702 <vfprintf+0x3c2>
    46fe:	24 fe       	sbrs	r2, 4
    4700:	81 e3       	ldi	r24, 0x31	; 49
    4702:	90 e0       	ldi	r25, 0x00	; 0
    4704:	45 c0       	rjmp	.+138    	; 0x4790 <vfprintf+0x450>
    4706:	8a 81       	ldd	r24, Y+2	; 0x02
    4708:	81 33       	cpi	r24, 0x31	; 49
    470a:	09 f0       	breq	.+2      	; 0x470e <vfprintf+0x3ce>
    470c:	0f 7e       	andi	r16, 0xEF	; 239
    470e:	90 e0       	ldi	r25, 0x00	; 0
    4710:	b3 01       	movw	r22, r6
    4712:	24 d3       	rcall	.+1608   	; 0x4d5c <fputc>
    4714:	99 20       	and	r9, r9
    4716:	91 f0       	breq	.+36     	; 0x473c <vfprintf+0x3fc>
    4718:	8e e2       	ldi	r24, 0x2E	; 46
    471a:	90 e0       	ldi	r25, 0x00	; 0
    471c:	b3 01       	movw	r22, r6
    471e:	1e d3       	rcall	.+1596   	; 0x4d5c <fputc>
    4720:	12 e0       	ldi	r17, 0x02	; 2
    4722:	e1 e0       	ldi	r30, 0x01	; 1
    4724:	f0 e0       	ldi	r31, 0x00	; 0
    4726:	ec 0f       	add	r30, r28
    4728:	fd 1f       	adc	r31, r29
    472a:	e1 0f       	add	r30, r17
    472c:	f1 1d       	adc	r31, r1
    472e:	1f 5f       	subi	r17, 0xFF	; 255
    4730:	80 81       	ld	r24, Z
    4732:	90 e0       	ldi	r25, 0x00	; 0
    4734:	b3 01       	movw	r22, r6
    4736:	12 d3       	rcall	.+1572   	; 0x4d5c <fputc>
    4738:	9a 94       	dec	r9
    473a:	99 f7       	brne	.-26     	; 0x4722 <vfprintf+0x3e2>
    473c:	44 fc       	sbrc	r4, 4
    473e:	03 c0       	rjmp	.+6      	; 0x4746 <vfprintf+0x406>
    4740:	85 e6       	ldi	r24, 0x65	; 101
    4742:	90 e0       	ldi	r25, 0x00	; 0
    4744:	02 c0       	rjmp	.+4      	; 0x474a <vfprintf+0x40a>
    4746:	85 e4       	ldi	r24, 0x45	; 69
    4748:	90 e0       	ldi	r25, 0x00	; 0
    474a:	b3 01       	movw	r22, r6
    474c:	07 d3       	rcall	.+1550   	; 0x4d5c <fputc>
    474e:	d7 fc       	sbrc	r13, 7
    4750:	05 c0       	rjmp	.+10     	; 0x475c <vfprintf+0x41c>
    4752:	c1 14       	cp	r12, r1
    4754:	d1 04       	cpc	r13, r1
    4756:	41 f4       	brne	.+16     	; 0x4768 <vfprintf+0x428>
    4758:	04 ff       	sbrs	r16, 4
    475a:	06 c0       	rjmp	.+12     	; 0x4768 <vfprintf+0x428>
    475c:	d0 94       	com	r13
    475e:	c1 94       	neg	r12
    4760:	d1 08       	sbc	r13, r1
    4762:	d3 94       	inc	r13
    4764:	8d e2       	ldi	r24, 0x2D	; 45
    4766:	01 c0       	rjmp	.+2      	; 0x476a <vfprintf+0x42a>
    4768:	8b e2       	ldi	r24, 0x2B	; 43
    476a:	90 e0       	ldi	r25, 0x00	; 0
    476c:	b3 01       	movw	r22, r6
    476e:	f6 d2       	rcall	.+1516   	; 0x4d5c <fputc>
    4770:	80 e3       	ldi	r24, 0x30	; 48
    4772:	05 c0       	rjmp	.+10     	; 0x477e <vfprintf+0x43e>
    4774:	8f 5f       	subi	r24, 0xFF	; 255
    4776:	26 ef       	ldi	r18, 0xF6	; 246
    4778:	3f ef       	ldi	r19, 0xFF	; 255
    477a:	c2 0e       	add	r12, r18
    477c:	d3 1e       	adc	r13, r19
    477e:	3a e0       	ldi	r19, 0x0A	; 10
    4780:	c3 16       	cp	r12, r19
    4782:	d1 04       	cpc	r13, r1
    4784:	bc f7       	brge	.-18     	; 0x4774 <vfprintf+0x434>
    4786:	90 e0       	ldi	r25, 0x00	; 0
    4788:	b3 01       	movw	r22, r6
    478a:	e8 d2       	rcall	.+1488   	; 0x4d5c <fputc>
    478c:	c6 01       	movw	r24, r12
    478e:	c0 96       	adiw	r24, 0x30	; 48
    4790:	b3 01       	movw	r22, r6
    4792:	e4 d2       	rcall	.+1480   	; 0x4d5c <fputc>
    4794:	cc 84       	ldd	r12, Y+12	; 0x0c
    4796:	dd 84       	ldd	r13, Y+13	; 0x0d
    4798:	46 c1       	rjmp	.+652    	; 0x4a26 <vfprintf+0x6e6>
    479a:	93 36       	cpi	r25, 0x63	; 99
    479c:	31 f0       	breq	.+12     	; 0x47aa <vfprintf+0x46a>
    479e:	93 37       	cpi	r25, 0x73	; 115
    47a0:	99 f0       	breq	.+38     	; 0x47c8 <vfprintf+0x488>
    47a2:	93 35       	cpi	r25, 0x53	; 83
    47a4:	09 f0       	breq	.+2      	; 0x47a8 <vfprintf+0x468>
    47a6:	55 c0       	rjmp	.+170    	; 0x4852 <vfprintf+0x512>
    47a8:	22 c0       	rjmp	.+68     	; 0x47ee <vfprintf+0x4ae>
    47aa:	f6 01       	movw	r30, r12
    47ac:	80 81       	ld	r24, Z
    47ae:	89 83       	std	Y+1, r24	; 0x01
    47b0:	5e 01       	movw	r10, r28
    47b2:	08 94       	sec
    47b4:	a1 1c       	adc	r10, r1
    47b6:	b1 1c       	adc	r11, r1
    47b8:	22 e0       	ldi	r18, 0x02	; 2
    47ba:	30 e0       	ldi	r19, 0x00	; 0
    47bc:	c2 0e       	add	r12, r18
    47be:	d3 1e       	adc	r13, r19
    47c0:	21 e0       	ldi	r18, 0x01	; 1
    47c2:	e2 2e       	mov	r14, r18
    47c4:	f1 2c       	mov	r15, r1
    47c6:	11 c0       	rjmp	.+34     	; 0x47ea <vfprintf+0x4aa>
    47c8:	f6 01       	movw	r30, r12
    47ca:	a0 80       	ld	r10, Z
    47cc:	b1 80       	ldd	r11, Z+1	; 0x01
    47ce:	16 fd       	sbrc	r17, 6
    47d0:	03 c0       	rjmp	.+6      	; 0x47d8 <vfprintf+0x498>
    47d2:	6f ef       	ldi	r22, 0xFF	; 255
    47d4:	7f ef       	ldi	r23, 0xFF	; 255
    47d6:	02 c0       	rjmp	.+4      	; 0x47dc <vfprintf+0x49c>
    47d8:	69 2d       	mov	r22, r9
    47da:	70 e0       	ldi	r23, 0x00	; 0
    47dc:	22 e0       	ldi	r18, 0x02	; 2
    47de:	30 e0       	ldi	r19, 0x00	; 0
    47e0:	c2 0e       	add	r12, r18
    47e2:	d3 1e       	adc	r13, r19
    47e4:	c5 01       	movw	r24, r10
    47e6:	22 d2       	rcall	.+1092   	; 0x4c2c <strnlen>
    47e8:	7c 01       	movw	r14, r24
    47ea:	1f 77       	andi	r17, 0x7F	; 127
    47ec:	12 c0       	rjmp	.+36     	; 0x4812 <vfprintf+0x4d2>
    47ee:	f6 01       	movw	r30, r12
    47f0:	a0 80       	ld	r10, Z
    47f2:	b1 80       	ldd	r11, Z+1	; 0x01
    47f4:	16 fd       	sbrc	r17, 6
    47f6:	03 c0       	rjmp	.+6      	; 0x47fe <vfprintf+0x4be>
    47f8:	6f ef       	ldi	r22, 0xFF	; 255
    47fa:	7f ef       	ldi	r23, 0xFF	; 255
    47fc:	02 c0       	rjmp	.+4      	; 0x4802 <vfprintf+0x4c2>
    47fe:	69 2d       	mov	r22, r9
    4800:	70 e0       	ldi	r23, 0x00	; 0
    4802:	22 e0       	ldi	r18, 0x02	; 2
    4804:	30 e0       	ldi	r19, 0x00	; 0
    4806:	c2 0e       	add	r12, r18
    4808:	d3 1e       	adc	r13, r19
    480a:	c5 01       	movw	r24, r10
    480c:	04 d2       	rcall	.+1032   	; 0x4c16 <strnlen_P>
    480e:	7c 01       	movw	r14, r24
    4810:	10 68       	ori	r17, 0x80	; 128
    4812:	13 ff       	sbrs	r17, 3
    4814:	06 c0       	rjmp	.+12     	; 0x4822 <vfprintf+0x4e2>
    4816:	19 c0       	rjmp	.+50     	; 0x484a <vfprintf+0x50a>
    4818:	80 e2       	ldi	r24, 0x20	; 32
    481a:	90 e0       	ldi	r25, 0x00	; 0
    481c:	b3 01       	movw	r22, r6
    481e:	9e d2       	rcall	.+1340   	; 0x4d5c <fputc>
    4820:	8a 94       	dec	r8
    4822:	88 2d       	mov	r24, r8
    4824:	90 e0       	ldi	r25, 0x00	; 0
    4826:	e8 16       	cp	r14, r24
    4828:	f9 06       	cpc	r15, r25
    482a:	b0 f3       	brcs	.-20     	; 0x4818 <vfprintf+0x4d8>
    482c:	0e c0       	rjmp	.+28     	; 0x484a <vfprintf+0x50a>
    482e:	f5 01       	movw	r30, r10
    4830:	17 fd       	sbrc	r17, 7
    4832:	85 91       	lpm	r24, Z+
    4834:	17 ff       	sbrs	r17, 7
    4836:	81 91       	ld	r24, Z+
    4838:	5f 01       	movw	r10, r30
    483a:	90 e0       	ldi	r25, 0x00	; 0
    483c:	b3 01       	movw	r22, r6
    483e:	8e d2       	rcall	.+1308   	; 0x4d5c <fputc>
    4840:	81 10       	cpse	r8, r1
    4842:	8a 94       	dec	r8
    4844:	08 94       	sec
    4846:	e1 08       	sbc	r14, r1
    4848:	f1 08       	sbc	r15, r1
    484a:	e1 14       	cp	r14, r1
    484c:	f1 04       	cpc	r15, r1
    484e:	79 f7       	brne	.-34     	; 0x482e <vfprintf+0x4ee>
    4850:	ea c0       	rjmp	.+468    	; 0x4a26 <vfprintf+0x6e6>
    4852:	94 36       	cpi	r25, 0x64	; 100
    4854:	11 f0       	breq	.+4      	; 0x485a <vfprintf+0x51a>
    4856:	99 36       	cpi	r25, 0x69	; 105
    4858:	81 f5       	brne	.+96     	; 0x48ba <vfprintf+0x57a>
    485a:	17 ff       	sbrs	r17, 7
    485c:	08 c0       	rjmp	.+16     	; 0x486e <vfprintf+0x52e>
    485e:	f6 01       	movw	r30, r12
    4860:	20 81       	ld	r18, Z
    4862:	31 81       	ldd	r19, Z+1	; 0x01
    4864:	42 81       	ldd	r20, Z+2	; 0x02
    4866:	53 81       	ldd	r21, Z+3	; 0x03
    4868:	84 e0       	ldi	r24, 0x04	; 4
    486a:	90 e0       	ldi	r25, 0x00	; 0
    486c:	0a c0       	rjmp	.+20     	; 0x4882 <vfprintf+0x542>
    486e:	f6 01       	movw	r30, r12
    4870:	80 81       	ld	r24, Z
    4872:	91 81       	ldd	r25, Z+1	; 0x01
    4874:	9c 01       	movw	r18, r24
    4876:	44 27       	eor	r20, r20
    4878:	37 fd       	sbrc	r19, 7
    487a:	40 95       	com	r20
    487c:	54 2f       	mov	r21, r20
    487e:	82 e0       	ldi	r24, 0x02	; 2
    4880:	90 e0       	ldi	r25, 0x00	; 0
    4882:	c8 0e       	add	r12, r24
    4884:	d9 1e       	adc	r13, r25
    4886:	9f e6       	ldi	r25, 0x6F	; 111
    4888:	f9 2e       	mov	r15, r25
    488a:	f1 22       	and	r15, r17
    488c:	57 ff       	sbrs	r21, 7
    488e:	09 c0       	rjmp	.+18     	; 0x48a2 <vfprintf+0x562>
    4890:	50 95       	com	r21
    4892:	40 95       	com	r20
    4894:	30 95       	com	r19
    4896:	21 95       	neg	r18
    4898:	3f 4f       	sbci	r19, 0xFF	; 255
    489a:	4f 4f       	sbci	r20, 0xFF	; 255
    489c:	5f 4f       	sbci	r21, 0xFF	; 255
    489e:	90 e8       	ldi	r25, 0x80	; 128
    48a0:	f9 2a       	or	r15, r25
    48a2:	ca 01       	movw	r24, r20
    48a4:	b9 01       	movw	r22, r18
    48a6:	ae 01       	movw	r20, r28
    48a8:	4f 5f       	subi	r20, 0xFF	; 255
    48aa:	5f 4f       	sbci	r21, 0xFF	; 255
    48ac:	2a e0       	ldi	r18, 0x0A	; 10
    48ae:	30 e0       	ldi	r19, 0x00	; 0
    48b0:	c7 d2       	rcall	.+1422   	; 0x4e40 <__ultoa_invert>
    48b2:	e8 2e       	mov	r14, r24
    48b4:	e8 89       	ldd	r30, Y+16	; 0x10
    48b6:	ee 1a       	sub	r14, r30
    48b8:	40 c0       	rjmp	.+128    	; 0x493a <vfprintf+0x5fa>
    48ba:	95 37       	cpi	r25, 0x75	; 117
    48bc:	21 f4       	brne	.+8      	; 0x48c6 <vfprintf+0x586>
    48be:	1f 7e       	andi	r17, 0xEF	; 239
    48c0:	2a e0       	ldi	r18, 0x0A	; 10
    48c2:	30 e0       	ldi	r19, 0x00	; 0
    48c4:	1c c0       	rjmp	.+56     	; 0x48fe <vfprintf+0x5be>
    48c6:	19 7f       	andi	r17, 0xF9	; 249
    48c8:	9f 36       	cpi	r25, 0x6F	; 111
    48ca:	61 f0       	breq	.+24     	; 0x48e4 <vfprintf+0x5a4>
    48cc:	90 37       	cpi	r25, 0x70	; 112
    48ce:	20 f4       	brcc	.+8      	; 0x48d8 <vfprintf+0x598>
    48d0:	98 35       	cpi	r25, 0x58	; 88
    48d2:	09 f0       	breq	.+2      	; 0x48d6 <vfprintf+0x596>
    48d4:	ab c0       	rjmp	.+342    	; 0x4a2c <vfprintf+0x6ec>
    48d6:	0f c0       	rjmp	.+30     	; 0x48f6 <vfprintf+0x5b6>
    48d8:	90 37       	cpi	r25, 0x70	; 112
    48da:	39 f0       	breq	.+14     	; 0x48ea <vfprintf+0x5aa>
    48dc:	98 37       	cpi	r25, 0x78	; 120
    48de:	09 f0       	breq	.+2      	; 0x48e2 <vfprintf+0x5a2>
    48e0:	a5 c0       	rjmp	.+330    	; 0x4a2c <vfprintf+0x6ec>
    48e2:	04 c0       	rjmp	.+8      	; 0x48ec <vfprintf+0x5ac>
    48e4:	28 e0       	ldi	r18, 0x08	; 8
    48e6:	30 e0       	ldi	r19, 0x00	; 0
    48e8:	0a c0       	rjmp	.+20     	; 0x48fe <vfprintf+0x5be>
    48ea:	10 61       	ori	r17, 0x10	; 16
    48ec:	14 fd       	sbrc	r17, 4
    48ee:	14 60       	ori	r17, 0x04	; 4
    48f0:	20 e1       	ldi	r18, 0x10	; 16
    48f2:	30 e0       	ldi	r19, 0x00	; 0
    48f4:	04 c0       	rjmp	.+8      	; 0x48fe <vfprintf+0x5be>
    48f6:	14 fd       	sbrc	r17, 4
    48f8:	16 60       	ori	r17, 0x06	; 6
    48fa:	20 e1       	ldi	r18, 0x10	; 16
    48fc:	32 e0       	ldi	r19, 0x02	; 2
    48fe:	17 ff       	sbrs	r17, 7
    4900:	08 c0       	rjmp	.+16     	; 0x4912 <vfprintf+0x5d2>
    4902:	f6 01       	movw	r30, r12
    4904:	60 81       	ld	r22, Z
    4906:	71 81       	ldd	r23, Z+1	; 0x01
    4908:	82 81       	ldd	r24, Z+2	; 0x02
    490a:	93 81       	ldd	r25, Z+3	; 0x03
    490c:	44 e0       	ldi	r20, 0x04	; 4
    490e:	50 e0       	ldi	r21, 0x00	; 0
    4910:	08 c0       	rjmp	.+16     	; 0x4922 <vfprintf+0x5e2>
    4912:	f6 01       	movw	r30, r12
    4914:	80 81       	ld	r24, Z
    4916:	91 81       	ldd	r25, Z+1	; 0x01
    4918:	bc 01       	movw	r22, r24
    491a:	80 e0       	ldi	r24, 0x00	; 0
    491c:	90 e0       	ldi	r25, 0x00	; 0
    491e:	42 e0       	ldi	r20, 0x02	; 2
    4920:	50 e0       	ldi	r21, 0x00	; 0
    4922:	c4 0e       	add	r12, r20
    4924:	d5 1e       	adc	r13, r21
    4926:	ae 01       	movw	r20, r28
    4928:	4f 5f       	subi	r20, 0xFF	; 255
    492a:	5f 4f       	sbci	r21, 0xFF	; 255
    492c:	89 d2       	rcall	.+1298   	; 0x4e40 <__ultoa_invert>
    492e:	e8 2e       	mov	r14, r24
    4930:	58 89       	ldd	r21, Y+16	; 0x10
    4932:	e5 1a       	sub	r14, r21
    4934:	8f e7       	ldi	r24, 0x7F	; 127
    4936:	f8 2e       	mov	r15, r24
    4938:	f1 22       	and	r15, r17
    493a:	f6 fe       	sbrs	r15, 6
    493c:	0b c0       	rjmp	.+22     	; 0x4954 <vfprintf+0x614>
    493e:	8e ef       	ldi	r24, 0xFE	; 254
    4940:	f8 22       	and	r15, r24
    4942:	e9 14       	cp	r14, r9
    4944:	38 f4       	brcc	.+14     	; 0x4954 <vfprintf+0x614>
    4946:	f4 fe       	sbrs	r15, 4
    4948:	07 c0       	rjmp	.+14     	; 0x4958 <vfprintf+0x618>
    494a:	f2 fc       	sbrc	r15, 2
    494c:	05 c0       	rjmp	.+10     	; 0x4958 <vfprintf+0x618>
    494e:	9f ee       	ldi	r25, 0xEF	; 239
    4950:	f9 22       	and	r15, r25
    4952:	02 c0       	rjmp	.+4      	; 0x4958 <vfprintf+0x618>
    4954:	1e 2d       	mov	r17, r14
    4956:	01 c0       	rjmp	.+2      	; 0x495a <vfprintf+0x61a>
    4958:	19 2d       	mov	r17, r9
    495a:	f4 fe       	sbrs	r15, 4
    495c:	0d c0       	rjmp	.+26     	; 0x4978 <vfprintf+0x638>
    495e:	fe 01       	movw	r30, r28
    4960:	ee 0d       	add	r30, r14
    4962:	f1 1d       	adc	r31, r1
    4964:	80 81       	ld	r24, Z
    4966:	80 33       	cpi	r24, 0x30	; 48
    4968:	19 f4       	brne	.+6      	; 0x4970 <vfprintf+0x630>
    496a:	e9 ee       	ldi	r30, 0xE9	; 233
    496c:	fe 22       	and	r15, r30
    496e:	08 c0       	rjmp	.+16     	; 0x4980 <vfprintf+0x640>
    4970:	1f 5f       	subi	r17, 0xFF	; 255
    4972:	f2 fe       	sbrs	r15, 2
    4974:	05 c0       	rjmp	.+10     	; 0x4980 <vfprintf+0x640>
    4976:	03 c0       	rjmp	.+6      	; 0x497e <vfprintf+0x63e>
    4978:	8f 2d       	mov	r24, r15
    497a:	86 78       	andi	r24, 0x86	; 134
    497c:	09 f0       	breq	.+2      	; 0x4980 <vfprintf+0x640>
    497e:	1f 5f       	subi	r17, 0xFF	; 255
    4980:	0f 2d       	mov	r16, r15
    4982:	f3 fc       	sbrc	r15, 3
    4984:	13 c0       	rjmp	.+38     	; 0x49ac <vfprintf+0x66c>
    4986:	f0 fe       	sbrs	r15, 0
    4988:	0e c0       	rjmp	.+28     	; 0x49a6 <vfprintf+0x666>
    498a:	18 15       	cp	r17, r8
    498c:	10 f0       	brcs	.+4      	; 0x4992 <vfprintf+0x652>
    498e:	9e 2c       	mov	r9, r14
    4990:	0a c0       	rjmp	.+20     	; 0x49a6 <vfprintf+0x666>
    4992:	9e 2c       	mov	r9, r14
    4994:	98 0c       	add	r9, r8
    4996:	91 1a       	sub	r9, r17
    4998:	18 2d       	mov	r17, r8
    499a:	05 c0       	rjmp	.+10     	; 0x49a6 <vfprintf+0x666>
    499c:	80 e2       	ldi	r24, 0x20	; 32
    499e:	90 e0       	ldi	r25, 0x00	; 0
    49a0:	b3 01       	movw	r22, r6
    49a2:	dc d1       	rcall	.+952    	; 0x4d5c <fputc>
    49a4:	1f 5f       	subi	r17, 0xFF	; 255
    49a6:	18 15       	cp	r17, r8
    49a8:	c8 f3       	brcs	.-14     	; 0x499c <vfprintf+0x65c>
    49aa:	04 c0       	rjmp	.+8      	; 0x49b4 <vfprintf+0x674>
    49ac:	18 15       	cp	r17, r8
    49ae:	10 f4       	brcc	.+4      	; 0x49b4 <vfprintf+0x674>
    49b0:	81 1a       	sub	r8, r17
    49b2:	01 c0       	rjmp	.+2      	; 0x49b6 <vfprintf+0x676>
    49b4:	88 24       	eor	r8, r8
    49b6:	04 ff       	sbrs	r16, 4
    49b8:	0e c0       	rjmp	.+28     	; 0x49d6 <vfprintf+0x696>
    49ba:	80 e3       	ldi	r24, 0x30	; 48
    49bc:	90 e0       	ldi	r25, 0x00	; 0
    49be:	b3 01       	movw	r22, r6
    49c0:	cd d1       	rcall	.+922    	; 0x4d5c <fputc>
    49c2:	02 ff       	sbrs	r16, 2
    49c4:	1b c0       	rjmp	.+54     	; 0x49fc <vfprintf+0x6bc>
    49c6:	01 fd       	sbrc	r16, 1
    49c8:	03 c0       	rjmp	.+6      	; 0x49d0 <vfprintf+0x690>
    49ca:	88 e7       	ldi	r24, 0x78	; 120
    49cc:	90 e0       	ldi	r25, 0x00	; 0
    49ce:	0e c0       	rjmp	.+28     	; 0x49ec <vfprintf+0x6ac>
    49d0:	88 e5       	ldi	r24, 0x58	; 88
    49d2:	90 e0       	ldi	r25, 0x00	; 0
    49d4:	0b c0       	rjmp	.+22     	; 0x49ec <vfprintf+0x6ac>
    49d6:	80 2f       	mov	r24, r16
    49d8:	86 78       	andi	r24, 0x86	; 134
    49da:	81 f0       	breq	.+32     	; 0x49fc <vfprintf+0x6bc>
    49dc:	01 ff       	sbrs	r16, 1
    49de:	02 c0       	rjmp	.+4      	; 0x49e4 <vfprintf+0x6a4>
    49e0:	8b e2       	ldi	r24, 0x2B	; 43
    49e2:	01 c0       	rjmp	.+2      	; 0x49e6 <vfprintf+0x6a6>
    49e4:	80 e2       	ldi	r24, 0x20	; 32
    49e6:	f7 fc       	sbrc	r15, 7
    49e8:	8d e2       	ldi	r24, 0x2D	; 45
    49ea:	90 e0       	ldi	r25, 0x00	; 0
    49ec:	b3 01       	movw	r22, r6
    49ee:	b6 d1       	rcall	.+876    	; 0x4d5c <fputc>
    49f0:	05 c0       	rjmp	.+10     	; 0x49fc <vfprintf+0x6bc>
    49f2:	80 e3       	ldi	r24, 0x30	; 48
    49f4:	90 e0       	ldi	r25, 0x00	; 0
    49f6:	b3 01       	movw	r22, r6
    49f8:	b1 d1       	rcall	.+866    	; 0x4d5c <fputc>
    49fa:	9a 94       	dec	r9
    49fc:	e9 14       	cp	r14, r9
    49fe:	c8 f3       	brcs	.-14     	; 0x49f2 <vfprintf+0x6b2>
    4a00:	ea 94       	dec	r14
    4a02:	e1 e0       	ldi	r30, 0x01	; 1
    4a04:	f0 e0       	ldi	r31, 0x00	; 0
    4a06:	ec 0f       	add	r30, r28
    4a08:	fd 1f       	adc	r31, r29
    4a0a:	ee 0d       	add	r30, r14
    4a0c:	f1 1d       	adc	r31, r1
    4a0e:	80 81       	ld	r24, Z
    4a10:	90 e0       	ldi	r25, 0x00	; 0
    4a12:	b3 01       	movw	r22, r6
    4a14:	a3 d1       	rcall	.+838    	; 0x4d5c <fputc>
    4a16:	ee 20       	and	r14, r14
    4a18:	99 f7       	brne	.-26     	; 0x4a00 <vfprintf+0x6c0>
    4a1a:	05 c0       	rjmp	.+10     	; 0x4a26 <vfprintf+0x6e6>
    4a1c:	80 e2       	ldi	r24, 0x20	; 32
    4a1e:	90 e0       	ldi	r25, 0x00	; 0
    4a20:	b3 01       	movw	r22, r6
    4a22:	9c d1       	rcall	.+824    	; 0x4d5c <fputc>
    4a24:	8a 94       	dec	r8
    4a26:	88 20       	and	r8, r8
    4a28:	c9 f7       	brne	.-14     	; 0x4a1c <vfprintf+0x6dc>
    4a2a:	b6 cc       	rjmp	.-1684   	; 0x4398 <vfprintf+0x58>
    4a2c:	f3 01       	movw	r30, r6
    4a2e:	66 81       	ldd	r22, Z+6	; 0x06
    4a30:	77 81       	ldd	r23, Z+7	; 0x07
    4a32:	cb 01       	movw	r24, r22
    4a34:	61 96       	adiw	r28, 0x11	; 17
    4a36:	0f b6       	in	r0, 0x3f	; 63
    4a38:	f8 94       	cli
    4a3a:	de bf       	out	0x3e, r29	; 62
    4a3c:	0f be       	out	0x3f, r0	; 63
    4a3e:	cd bf       	out	0x3d, r28	; 61
    4a40:	cf 91       	pop	r28
    4a42:	df 91       	pop	r29
    4a44:	1f 91       	pop	r17
    4a46:	0f 91       	pop	r16
    4a48:	ff 90       	pop	r15
    4a4a:	ef 90       	pop	r14
    4a4c:	df 90       	pop	r13
    4a4e:	cf 90       	pop	r12
    4a50:	bf 90       	pop	r11
    4a52:	af 90       	pop	r10
    4a54:	9f 90       	pop	r9
    4a56:	8f 90       	pop	r8
    4a58:	7f 90       	pop	r7
    4a5a:	6f 90       	pop	r6
    4a5c:	5f 90       	pop	r5
    4a5e:	4f 90       	pop	r4
    4a60:	3f 90       	pop	r3
    4a62:	2f 90       	pop	r2
    4a64:	08 95       	ret

00004a66 <__ftoa_engine>:
    4a66:	28 30       	cpi	r18, 0x08	; 8
    4a68:	08 f0       	brcs	.+2      	; 0x4a6c <__ftoa_engine+0x6>
    4a6a:	27 e0       	ldi	r18, 0x07	; 7
    4a6c:	33 27       	eor	r19, r19
    4a6e:	da 01       	movw	r26, r20
    4a70:	99 0f       	add	r25, r25
    4a72:	31 1d       	adc	r19, r1
    4a74:	87 fd       	sbrc	r24, 7
    4a76:	91 60       	ori	r25, 0x01	; 1
    4a78:	00 96       	adiw	r24, 0x00	; 0
    4a7a:	61 05       	cpc	r22, r1
    4a7c:	71 05       	cpc	r23, r1
    4a7e:	39 f4       	brne	.+14     	; 0x4a8e <__ftoa_engine+0x28>
    4a80:	32 60       	ori	r19, 0x02	; 2
    4a82:	2e 5f       	subi	r18, 0xFE	; 254
    4a84:	3d 93       	st	X+, r19
    4a86:	30 e3       	ldi	r19, 0x30	; 48
    4a88:	2a 95       	dec	r18
    4a8a:	e1 f7       	brne	.-8      	; 0x4a84 <__ftoa_engine+0x1e>
    4a8c:	08 95       	ret
    4a8e:	9f 3f       	cpi	r25, 0xFF	; 255
    4a90:	30 f0       	brcs	.+12     	; 0x4a9e <__ftoa_engine+0x38>
    4a92:	80 38       	cpi	r24, 0x80	; 128
    4a94:	71 05       	cpc	r23, r1
    4a96:	61 05       	cpc	r22, r1
    4a98:	09 f0       	breq	.+2      	; 0x4a9c <__ftoa_engine+0x36>
    4a9a:	3c 5f       	subi	r19, 0xFC	; 252
    4a9c:	3c 5f       	subi	r19, 0xFC	; 252
    4a9e:	3d 93       	st	X+, r19
    4aa0:	91 30       	cpi	r25, 0x01	; 1
    4aa2:	08 f0       	brcs	.+2      	; 0x4aa6 <__ftoa_engine+0x40>
    4aa4:	80 68       	ori	r24, 0x80	; 128
    4aa6:	91 1d       	adc	r25, r1
    4aa8:	df 93       	push	r29
    4aaa:	cf 93       	push	r28
    4aac:	1f 93       	push	r17
    4aae:	0f 93       	push	r16
    4ab0:	ff 92       	push	r15
    4ab2:	ef 92       	push	r14
    4ab4:	19 2f       	mov	r17, r25
    4ab6:	98 7f       	andi	r25, 0xF8	; 248
    4ab8:	96 95       	lsr	r25
    4aba:	e9 2f       	mov	r30, r25
    4abc:	96 95       	lsr	r25
    4abe:	96 95       	lsr	r25
    4ac0:	e9 0f       	add	r30, r25
    4ac2:	ff 27       	eor	r31, r31
    4ac4:	ea 50       	subi	r30, 0x0A	; 10
    4ac6:	fe 4f       	sbci	r31, 0xFE	; 254
    4ac8:	99 27       	eor	r25, r25
    4aca:	33 27       	eor	r19, r19
    4acc:	ee 24       	eor	r14, r14
    4ace:	ff 24       	eor	r15, r15
    4ad0:	a7 01       	movw	r20, r14
    4ad2:	e7 01       	movw	r28, r14
    4ad4:	05 90       	lpm	r0, Z+
    4ad6:	08 94       	sec
    4ad8:	07 94       	ror	r0
    4ada:	28 f4       	brcc	.+10     	; 0x4ae6 <__ftoa_engine+0x80>
    4adc:	36 0f       	add	r19, r22
    4ade:	e7 1e       	adc	r14, r23
    4ae0:	f8 1e       	adc	r15, r24
    4ae2:	49 1f       	adc	r20, r25
    4ae4:	51 1d       	adc	r21, r1
    4ae6:	66 0f       	add	r22, r22
    4ae8:	77 1f       	adc	r23, r23
    4aea:	88 1f       	adc	r24, r24
    4aec:	99 1f       	adc	r25, r25
    4aee:	06 94       	lsr	r0
    4af0:	a1 f7       	brne	.-24     	; 0x4ada <__ftoa_engine+0x74>
    4af2:	05 90       	lpm	r0, Z+
    4af4:	07 94       	ror	r0
    4af6:	28 f4       	brcc	.+10     	; 0x4b02 <__ftoa_engine+0x9c>
    4af8:	e7 0e       	add	r14, r23
    4afa:	f8 1e       	adc	r15, r24
    4afc:	49 1f       	adc	r20, r25
    4afe:	56 1f       	adc	r21, r22
    4b00:	c1 1d       	adc	r28, r1
    4b02:	77 0f       	add	r23, r23
    4b04:	88 1f       	adc	r24, r24
    4b06:	99 1f       	adc	r25, r25
    4b08:	66 1f       	adc	r22, r22
    4b0a:	06 94       	lsr	r0
    4b0c:	a1 f7       	brne	.-24     	; 0x4af6 <__ftoa_engine+0x90>
    4b0e:	05 90       	lpm	r0, Z+
    4b10:	07 94       	ror	r0
    4b12:	28 f4       	brcc	.+10     	; 0x4b1e <__ftoa_engine+0xb8>
    4b14:	f8 0e       	add	r15, r24
    4b16:	49 1f       	adc	r20, r25
    4b18:	56 1f       	adc	r21, r22
    4b1a:	c7 1f       	adc	r28, r23
    4b1c:	d1 1d       	adc	r29, r1
    4b1e:	88 0f       	add	r24, r24
    4b20:	99 1f       	adc	r25, r25
    4b22:	66 1f       	adc	r22, r22
    4b24:	77 1f       	adc	r23, r23
    4b26:	06 94       	lsr	r0
    4b28:	a1 f7       	brne	.-24     	; 0x4b12 <__ftoa_engine+0xac>
    4b2a:	05 90       	lpm	r0, Z+
    4b2c:	07 94       	ror	r0
    4b2e:	20 f4       	brcc	.+8      	; 0x4b38 <__ftoa_engine+0xd2>
    4b30:	49 0f       	add	r20, r25
    4b32:	56 1f       	adc	r21, r22
    4b34:	c7 1f       	adc	r28, r23
    4b36:	d8 1f       	adc	r29, r24
    4b38:	99 0f       	add	r25, r25
    4b3a:	66 1f       	adc	r22, r22
    4b3c:	77 1f       	adc	r23, r23
    4b3e:	88 1f       	adc	r24, r24
    4b40:	06 94       	lsr	r0
    4b42:	a9 f7       	brne	.-22     	; 0x4b2e <__ftoa_engine+0xc8>
    4b44:	84 91       	lpm	r24, Z+
    4b46:	10 95       	com	r17
    4b48:	17 70       	andi	r17, 0x07	; 7
    4b4a:	41 f0       	breq	.+16     	; 0x4b5c <__ftoa_engine+0xf6>
    4b4c:	d6 95       	lsr	r29
    4b4e:	c7 95       	ror	r28
    4b50:	57 95       	ror	r21
    4b52:	47 95       	ror	r20
    4b54:	f7 94       	ror	r15
    4b56:	e7 94       	ror	r14
    4b58:	1a 95       	dec	r17
    4b5a:	c1 f7       	brne	.-16     	; 0x4b4c <__ftoa_engine+0xe6>
    4b5c:	ec e9       	ldi	r30, 0x9C	; 156
    4b5e:	f1 e0       	ldi	r31, 0x01	; 1
    4b60:	68 94       	set
    4b62:	15 90       	lpm	r1, Z+
    4b64:	15 91       	lpm	r17, Z+
    4b66:	35 91       	lpm	r19, Z+
    4b68:	65 91       	lpm	r22, Z+
    4b6a:	95 91       	lpm	r25, Z+
    4b6c:	05 90       	lpm	r0, Z+
    4b6e:	7f e2       	ldi	r23, 0x2F	; 47
    4b70:	73 95       	inc	r23
    4b72:	e1 18       	sub	r14, r1
    4b74:	f1 0a       	sbc	r15, r17
    4b76:	43 0b       	sbc	r20, r19
    4b78:	56 0b       	sbc	r21, r22
    4b7a:	c9 0b       	sbc	r28, r25
    4b7c:	d0 09       	sbc	r29, r0
    4b7e:	c0 f7       	brcc	.-16     	; 0x4b70 <__ftoa_engine+0x10a>
    4b80:	e1 0c       	add	r14, r1
    4b82:	f1 1e       	adc	r15, r17
    4b84:	43 1f       	adc	r20, r19
    4b86:	56 1f       	adc	r21, r22
    4b88:	c9 1f       	adc	r28, r25
    4b8a:	d0 1d       	adc	r29, r0
    4b8c:	7e f4       	brtc	.+30     	; 0x4bac <__ftoa_engine+0x146>
    4b8e:	70 33       	cpi	r23, 0x30	; 48
    4b90:	11 f4       	brne	.+4      	; 0x4b96 <__ftoa_engine+0x130>
    4b92:	8a 95       	dec	r24
    4b94:	e6 cf       	rjmp	.-52     	; 0x4b62 <__ftoa_engine+0xfc>
    4b96:	e8 94       	clt
    4b98:	01 50       	subi	r16, 0x01	; 1
    4b9a:	30 f0       	brcs	.+12     	; 0x4ba8 <__ftoa_engine+0x142>
    4b9c:	08 0f       	add	r16, r24
    4b9e:	0a f4       	brpl	.+2      	; 0x4ba2 <__ftoa_engine+0x13c>
    4ba0:	00 27       	eor	r16, r16
    4ba2:	02 17       	cp	r16, r18
    4ba4:	08 f4       	brcc	.+2      	; 0x4ba8 <__ftoa_engine+0x142>
    4ba6:	20 2f       	mov	r18, r16
    4ba8:	23 95       	inc	r18
    4baa:	02 2f       	mov	r16, r18
    4bac:	7a 33       	cpi	r23, 0x3A	; 58
    4bae:	28 f0       	brcs	.+10     	; 0x4bba <__ftoa_engine+0x154>
    4bb0:	79 e3       	ldi	r23, 0x39	; 57
    4bb2:	7d 93       	st	X+, r23
    4bb4:	2a 95       	dec	r18
    4bb6:	e9 f7       	brne	.-6      	; 0x4bb2 <__ftoa_engine+0x14c>
    4bb8:	10 c0       	rjmp	.+32     	; 0x4bda <__ftoa_engine+0x174>
    4bba:	7d 93       	st	X+, r23
    4bbc:	2a 95       	dec	r18
    4bbe:	89 f6       	brne	.-94     	; 0x4b62 <__ftoa_engine+0xfc>
    4bc0:	06 94       	lsr	r0
    4bc2:	97 95       	ror	r25
    4bc4:	67 95       	ror	r22
    4bc6:	37 95       	ror	r19
    4bc8:	17 95       	ror	r17
    4bca:	17 94       	ror	r1
    4bcc:	e1 18       	sub	r14, r1
    4bce:	f1 0a       	sbc	r15, r17
    4bd0:	43 0b       	sbc	r20, r19
    4bd2:	56 0b       	sbc	r21, r22
    4bd4:	c9 0b       	sbc	r28, r25
    4bd6:	d0 09       	sbc	r29, r0
    4bd8:	98 f0       	brcs	.+38     	; 0x4c00 <__ftoa_engine+0x19a>
    4bda:	23 95       	inc	r18
    4bdc:	7e 91       	ld	r23, -X
    4bde:	73 95       	inc	r23
    4be0:	7a 33       	cpi	r23, 0x3A	; 58
    4be2:	08 f0       	brcs	.+2      	; 0x4be6 <__ftoa_engine+0x180>
    4be4:	70 e3       	ldi	r23, 0x30	; 48
    4be6:	7c 93       	st	X, r23
    4be8:	20 13       	cpse	r18, r16
    4bea:	b8 f7       	brcc	.-18     	; 0x4bda <__ftoa_engine+0x174>
    4bec:	7e 91       	ld	r23, -X
    4bee:	70 61       	ori	r23, 0x10	; 16
    4bf0:	7d 93       	st	X+, r23
    4bf2:	30 f0       	brcs	.+12     	; 0x4c00 <__ftoa_engine+0x19a>
    4bf4:	83 95       	inc	r24
    4bf6:	71 e3       	ldi	r23, 0x31	; 49
    4bf8:	7d 93       	st	X+, r23
    4bfa:	70 e3       	ldi	r23, 0x30	; 48
    4bfc:	2a 95       	dec	r18
    4bfe:	e1 f7       	brne	.-8      	; 0x4bf8 <__ftoa_engine+0x192>
    4c00:	11 24       	eor	r1, r1
    4c02:	ef 90       	pop	r14
    4c04:	ff 90       	pop	r15
    4c06:	0f 91       	pop	r16
    4c08:	1f 91       	pop	r17
    4c0a:	cf 91       	pop	r28
    4c0c:	df 91       	pop	r29
    4c0e:	99 27       	eor	r25, r25
    4c10:	87 fd       	sbrc	r24, 7
    4c12:	90 95       	com	r25
    4c14:	08 95       	ret

00004c16 <strnlen_P>:
    4c16:	fc 01       	movw	r30, r24
    4c18:	05 90       	lpm	r0, Z+
    4c1a:	61 50       	subi	r22, 0x01	; 1
    4c1c:	70 40       	sbci	r23, 0x00	; 0
    4c1e:	01 10       	cpse	r0, r1
    4c20:	d8 f7       	brcc	.-10     	; 0x4c18 <strnlen_P+0x2>
    4c22:	80 95       	com	r24
    4c24:	90 95       	com	r25
    4c26:	8e 0f       	add	r24, r30
    4c28:	9f 1f       	adc	r25, r31
    4c2a:	08 95       	ret

00004c2c <strnlen>:
    4c2c:	fc 01       	movw	r30, r24
    4c2e:	61 50       	subi	r22, 0x01	; 1
    4c30:	70 40       	sbci	r23, 0x00	; 0
    4c32:	01 90       	ld	r0, Z+
    4c34:	01 10       	cpse	r0, r1
    4c36:	d8 f7       	brcc	.-10     	; 0x4c2e <strnlen+0x2>
    4c38:	80 95       	com	r24
    4c3a:	90 95       	com	r25
    4c3c:	8e 0f       	add	r24, r30
    4c3e:	9f 1f       	adc	r25, r31
    4c40:	08 95       	ret

00004c42 <fdevopen>:
    4c42:	0f 93       	push	r16
    4c44:	1f 93       	push	r17
    4c46:	cf 93       	push	r28
    4c48:	df 93       	push	r29
    4c4a:	8c 01       	movw	r16, r24
    4c4c:	eb 01       	movw	r28, r22
    4c4e:	00 97       	sbiw	r24, 0x00	; 0
    4c50:	31 f4       	brne	.+12     	; 0x4c5e <fdevopen+0x1c>
    4c52:	61 15       	cp	r22, r1
    4c54:	71 05       	cpc	r23, r1
    4c56:	19 f4       	brne	.+6      	; 0x4c5e <fdevopen+0x1c>
    4c58:	20 e0       	ldi	r18, 0x00	; 0
    4c5a:	30 e0       	ldi	r19, 0x00	; 0
    4c5c:	37 c0       	rjmp	.+110    	; 0x4ccc <fdevopen+0x8a>
    4c5e:	81 e0       	ldi	r24, 0x01	; 1
    4c60:	90 e0       	ldi	r25, 0x00	; 0
    4c62:	6e e0       	ldi	r22, 0x0E	; 14
    4c64:	70 e0       	ldi	r23, 0x00	; 0
    4c66:	4a d1       	rcall	.+660    	; 0x4efc <calloc>
    4c68:	fc 01       	movw	r30, r24
    4c6a:	9c 01       	movw	r18, r24
    4c6c:	00 97       	sbiw	r24, 0x00	; 0
    4c6e:	71 f1       	breq	.+92     	; 0x4ccc <fdevopen+0x8a>
    4c70:	80 e8       	ldi	r24, 0x80	; 128
    4c72:	83 83       	std	Z+3, r24	; 0x03
    4c74:	20 97       	sbiw	r28, 0x00	; 0
    4c76:	71 f0       	breq	.+28     	; 0x4c94 <fdevopen+0x52>
    4c78:	d3 87       	std	Z+11, r29	; 0x0b
    4c7a:	c2 87       	std	Z+10, r28	; 0x0a
    4c7c:	81 e8       	ldi	r24, 0x81	; 129
    4c7e:	83 83       	std	Z+3, r24	; 0x03
    4c80:	80 91 f0 07 	lds	r24, 0x07F0
    4c84:	90 91 f1 07 	lds	r25, 0x07F1
    4c88:	89 2b       	or	r24, r25
    4c8a:	21 f4       	brne	.+8      	; 0x4c94 <fdevopen+0x52>
    4c8c:	f0 93 f1 07 	sts	0x07F1, r31
    4c90:	e0 93 f0 07 	sts	0x07F0, r30
    4c94:	01 15       	cp	r16, r1
    4c96:	11 05       	cpc	r17, r1
    4c98:	c9 f0       	breq	.+50     	; 0x4ccc <fdevopen+0x8a>
    4c9a:	11 87       	std	Z+9, r17	; 0x09
    4c9c:	00 87       	std	Z+8, r16	; 0x08
    4c9e:	83 81       	ldd	r24, Z+3	; 0x03
    4ca0:	82 60       	ori	r24, 0x02	; 2
    4ca2:	83 83       	std	Z+3, r24	; 0x03
    4ca4:	80 91 f2 07 	lds	r24, 0x07F2
    4ca8:	90 91 f3 07 	lds	r25, 0x07F3
    4cac:	89 2b       	or	r24, r25
    4cae:	71 f4       	brne	.+28     	; 0x4ccc <fdevopen+0x8a>
    4cb0:	f0 93 f3 07 	sts	0x07F3, r31
    4cb4:	e0 93 f2 07 	sts	0x07F2, r30
    4cb8:	80 91 f4 07 	lds	r24, 0x07F4
    4cbc:	90 91 f5 07 	lds	r25, 0x07F5
    4cc0:	89 2b       	or	r24, r25
    4cc2:	21 f4       	brne	.+8      	; 0x4ccc <fdevopen+0x8a>
    4cc4:	f0 93 f5 07 	sts	0x07F5, r31
    4cc8:	e0 93 f4 07 	sts	0x07F4, r30
    4ccc:	c9 01       	movw	r24, r18
    4cce:	df 91       	pop	r29
    4cd0:	cf 91       	pop	r28
    4cd2:	1f 91       	pop	r17
    4cd4:	0f 91       	pop	r16
    4cd6:	08 95       	ret

00004cd8 <fgetc>:
    4cd8:	cf 93       	push	r28
    4cda:	df 93       	push	r29
    4cdc:	ec 01       	movw	r28, r24
    4cde:	4b 81       	ldd	r20, Y+3	; 0x03
    4ce0:	40 ff       	sbrs	r20, 0
    4ce2:	1a c0       	rjmp	.+52     	; 0x4d18 <fgetc+0x40>
    4ce4:	46 ff       	sbrs	r20, 6
    4ce6:	0a c0       	rjmp	.+20     	; 0x4cfc <fgetc+0x24>
    4ce8:	4f 7b       	andi	r20, 0xBF	; 191
    4cea:	4b 83       	std	Y+3, r20	; 0x03
    4cec:	8e 81       	ldd	r24, Y+6	; 0x06
    4cee:	9f 81       	ldd	r25, Y+7	; 0x07
    4cf0:	01 96       	adiw	r24, 0x01	; 1
    4cf2:	9f 83       	std	Y+7, r25	; 0x07
    4cf4:	8e 83       	std	Y+6, r24	; 0x06
    4cf6:	8a 81       	ldd	r24, Y+2	; 0x02
    4cf8:	28 2f       	mov	r18, r24
    4cfa:	2b c0       	rjmp	.+86     	; 0x4d52 <fgetc+0x7a>
    4cfc:	42 ff       	sbrs	r20, 2
    4cfe:	13 c0       	rjmp	.+38     	; 0x4d26 <fgetc+0x4e>
    4d00:	e8 81       	ld	r30, Y
    4d02:	f9 81       	ldd	r31, Y+1	; 0x01
    4d04:	80 81       	ld	r24, Z
    4d06:	28 2f       	mov	r18, r24
    4d08:	33 27       	eor	r19, r19
    4d0a:	27 fd       	sbrc	r18, 7
    4d0c:	30 95       	com	r19
    4d0e:	21 15       	cp	r18, r1
    4d10:	31 05       	cpc	r19, r1
    4d12:	29 f4       	brne	.+10     	; 0x4d1e <fgetc+0x46>
    4d14:	40 62       	ori	r20, 0x20	; 32
    4d16:	4b 83       	std	Y+3, r20	; 0x03
    4d18:	2f ef       	ldi	r18, 0xFF	; 255
    4d1a:	3f ef       	ldi	r19, 0xFF	; 255
    4d1c:	1b c0       	rjmp	.+54     	; 0x4d54 <fgetc+0x7c>
    4d1e:	31 96       	adiw	r30, 0x01	; 1
    4d20:	f9 83       	std	Y+1, r31	; 0x01
    4d22:	e8 83       	st	Y, r30
    4d24:	11 c0       	rjmp	.+34     	; 0x4d48 <fgetc+0x70>
    4d26:	ea 85       	ldd	r30, Y+10	; 0x0a
    4d28:	fb 85       	ldd	r31, Y+11	; 0x0b
    4d2a:	ce 01       	movw	r24, r28
    4d2c:	19 95       	eicall
    4d2e:	9c 01       	movw	r18, r24
    4d30:	97 ff       	sbrs	r25, 7
    4d32:	0a c0       	rjmp	.+20     	; 0x4d48 <fgetc+0x70>
    4d34:	9b 81       	ldd	r25, Y+3	; 0x03
    4d36:	2f 5f       	subi	r18, 0xFF	; 255
    4d38:	3f 4f       	sbci	r19, 0xFF	; 255
    4d3a:	11 f0       	breq	.+4      	; 0x4d40 <fgetc+0x68>
    4d3c:	80 e2       	ldi	r24, 0x20	; 32
    4d3e:	01 c0       	rjmp	.+2      	; 0x4d42 <fgetc+0x6a>
    4d40:	80 e1       	ldi	r24, 0x10	; 16
    4d42:	89 2b       	or	r24, r25
    4d44:	8b 83       	std	Y+3, r24	; 0x03
    4d46:	e8 cf       	rjmp	.-48     	; 0x4d18 <fgetc+0x40>
    4d48:	8e 81       	ldd	r24, Y+6	; 0x06
    4d4a:	9f 81       	ldd	r25, Y+7	; 0x07
    4d4c:	01 96       	adiw	r24, 0x01	; 1
    4d4e:	9f 83       	std	Y+7, r25	; 0x07
    4d50:	8e 83       	std	Y+6, r24	; 0x06
    4d52:	30 e0       	ldi	r19, 0x00	; 0
    4d54:	c9 01       	movw	r24, r18
    4d56:	df 91       	pop	r29
    4d58:	cf 91       	pop	r28
    4d5a:	08 95       	ret

00004d5c <fputc>:
    4d5c:	0f 93       	push	r16
    4d5e:	1f 93       	push	r17
    4d60:	cf 93       	push	r28
    4d62:	df 93       	push	r29
    4d64:	8c 01       	movw	r16, r24
    4d66:	eb 01       	movw	r28, r22
    4d68:	8b 81       	ldd	r24, Y+3	; 0x03
    4d6a:	81 ff       	sbrs	r24, 1
    4d6c:	1b c0       	rjmp	.+54     	; 0x4da4 <fputc+0x48>
    4d6e:	82 ff       	sbrs	r24, 2
    4d70:	0d c0       	rjmp	.+26     	; 0x4d8c <fputc+0x30>
    4d72:	2e 81       	ldd	r18, Y+6	; 0x06
    4d74:	3f 81       	ldd	r19, Y+7	; 0x07
    4d76:	8c 81       	ldd	r24, Y+4	; 0x04
    4d78:	9d 81       	ldd	r25, Y+5	; 0x05
    4d7a:	28 17       	cp	r18, r24
    4d7c:	39 07       	cpc	r19, r25
    4d7e:	64 f4       	brge	.+24     	; 0x4d98 <fputc+0x3c>
    4d80:	e8 81       	ld	r30, Y
    4d82:	f9 81       	ldd	r31, Y+1	; 0x01
    4d84:	01 93       	st	Z+, r16
    4d86:	f9 83       	std	Y+1, r31	; 0x01
    4d88:	e8 83       	st	Y, r30
    4d8a:	06 c0       	rjmp	.+12     	; 0x4d98 <fputc+0x3c>
    4d8c:	e8 85       	ldd	r30, Y+8	; 0x08
    4d8e:	f9 85       	ldd	r31, Y+9	; 0x09
    4d90:	80 2f       	mov	r24, r16
    4d92:	19 95       	eicall
    4d94:	89 2b       	or	r24, r25
    4d96:	31 f4       	brne	.+12     	; 0x4da4 <fputc+0x48>
    4d98:	8e 81       	ldd	r24, Y+6	; 0x06
    4d9a:	9f 81       	ldd	r25, Y+7	; 0x07
    4d9c:	01 96       	adiw	r24, 0x01	; 1
    4d9e:	9f 83       	std	Y+7, r25	; 0x07
    4da0:	8e 83       	std	Y+6, r24	; 0x06
    4da2:	02 c0       	rjmp	.+4      	; 0x4da8 <fputc+0x4c>
    4da4:	0f ef       	ldi	r16, 0xFF	; 255
    4da6:	1f ef       	ldi	r17, 0xFF	; 255
    4da8:	c8 01       	movw	r24, r16
    4daa:	df 91       	pop	r29
    4dac:	cf 91       	pop	r28
    4dae:	1f 91       	pop	r17
    4db0:	0f 91       	pop	r16
    4db2:	08 95       	ret

00004db4 <printf>:
    4db4:	df 93       	push	r29
    4db6:	cf 93       	push	r28
    4db8:	cd b7       	in	r28, 0x3d	; 61
    4dba:	de b7       	in	r29, 0x3e	; 62
    4dbc:	fe 01       	movw	r30, r28
    4dbe:	36 96       	adiw	r30, 0x06	; 6
    4dc0:	61 91       	ld	r22, Z+
    4dc2:	71 91       	ld	r23, Z+
    4dc4:	80 91 f2 07 	lds	r24, 0x07F2
    4dc8:	90 91 f3 07 	lds	r25, 0x07F3
    4dcc:	af 01       	movw	r20, r30
    4dce:	b8 da       	rcall	.-2704   	; 0x4340 <vfprintf>
    4dd0:	cf 91       	pop	r28
    4dd2:	df 91       	pop	r29
    4dd4:	08 95       	ret

00004dd6 <puts>:
    4dd6:	0f 93       	push	r16
    4dd8:	1f 93       	push	r17
    4dda:	cf 93       	push	r28
    4ddc:	df 93       	push	r29
    4dde:	8c 01       	movw	r16, r24
    4de0:	e0 91 f2 07 	lds	r30, 0x07F2
    4de4:	f0 91 f3 07 	lds	r31, 0x07F3
    4de8:	83 81       	ldd	r24, Z+3	; 0x03
    4dea:	81 ff       	sbrs	r24, 1
    4dec:	21 c0       	rjmp	.+66     	; 0x4e30 <puts+0x5a>
    4dee:	c0 e0       	ldi	r28, 0x00	; 0
    4df0:	d0 e0       	ldi	r29, 0x00	; 0
    4df2:	0d c0       	rjmp	.+26     	; 0x4e0e <puts+0x38>
    4df4:	e0 91 f2 07 	lds	r30, 0x07F2
    4df8:	f0 91 f3 07 	lds	r31, 0x07F3
    4dfc:	20 85       	ldd	r18, Z+8	; 0x08
    4dfe:	31 85       	ldd	r19, Z+9	; 0x09
    4e00:	bf 01       	movw	r22, r30
    4e02:	f9 01       	movw	r30, r18
    4e04:	19 95       	eicall
    4e06:	89 2b       	or	r24, r25
    4e08:	11 f0       	breq	.+4      	; 0x4e0e <puts+0x38>
    4e0a:	cf ef       	ldi	r28, 0xFF	; 255
    4e0c:	df ef       	ldi	r29, 0xFF	; 255
    4e0e:	f8 01       	movw	r30, r16
    4e10:	81 91       	ld	r24, Z+
    4e12:	8f 01       	movw	r16, r30
    4e14:	88 23       	and	r24, r24
    4e16:	71 f7       	brne	.-36     	; 0x4df4 <puts+0x1e>
    4e18:	e0 91 f2 07 	lds	r30, 0x07F2
    4e1c:	f0 91 f3 07 	lds	r31, 0x07F3
    4e20:	20 85       	ldd	r18, Z+8	; 0x08
    4e22:	31 85       	ldd	r19, Z+9	; 0x09
    4e24:	8a e0       	ldi	r24, 0x0A	; 10
    4e26:	bf 01       	movw	r22, r30
    4e28:	f9 01       	movw	r30, r18
    4e2a:	19 95       	eicall
    4e2c:	89 2b       	or	r24, r25
    4e2e:	11 f0       	breq	.+4      	; 0x4e34 <puts+0x5e>
    4e30:	cf ef       	ldi	r28, 0xFF	; 255
    4e32:	df ef       	ldi	r29, 0xFF	; 255
    4e34:	ce 01       	movw	r24, r28
    4e36:	df 91       	pop	r29
    4e38:	cf 91       	pop	r28
    4e3a:	1f 91       	pop	r17
    4e3c:	0f 91       	pop	r16
    4e3e:	08 95       	ret

00004e40 <__ultoa_invert>:
    4e40:	fa 01       	movw	r30, r20
    4e42:	aa 27       	eor	r26, r26
    4e44:	28 30       	cpi	r18, 0x08	; 8
    4e46:	51 f1       	breq	.+84     	; 0x4e9c <__ultoa_invert+0x5c>
    4e48:	20 31       	cpi	r18, 0x10	; 16
    4e4a:	81 f1       	breq	.+96     	; 0x4eac <__ultoa_invert+0x6c>
    4e4c:	e8 94       	clt
    4e4e:	6f 93       	push	r22
    4e50:	6e 7f       	andi	r22, 0xFE	; 254
    4e52:	6e 5f       	subi	r22, 0xFE	; 254
    4e54:	7f 4f       	sbci	r23, 0xFF	; 255
    4e56:	8f 4f       	sbci	r24, 0xFF	; 255
    4e58:	9f 4f       	sbci	r25, 0xFF	; 255
    4e5a:	af 4f       	sbci	r26, 0xFF	; 255
    4e5c:	b1 e0       	ldi	r27, 0x01	; 1
    4e5e:	3e d0       	rcall	.+124    	; 0x4edc <__ultoa_invert+0x9c>
    4e60:	b4 e0       	ldi	r27, 0x04	; 4
    4e62:	3c d0       	rcall	.+120    	; 0x4edc <__ultoa_invert+0x9c>
    4e64:	67 0f       	add	r22, r23
    4e66:	78 1f       	adc	r23, r24
    4e68:	89 1f       	adc	r24, r25
    4e6a:	9a 1f       	adc	r25, r26
    4e6c:	a1 1d       	adc	r26, r1
    4e6e:	68 0f       	add	r22, r24
    4e70:	79 1f       	adc	r23, r25
    4e72:	8a 1f       	adc	r24, r26
    4e74:	91 1d       	adc	r25, r1
    4e76:	a1 1d       	adc	r26, r1
    4e78:	6a 0f       	add	r22, r26
    4e7a:	71 1d       	adc	r23, r1
    4e7c:	81 1d       	adc	r24, r1
    4e7e:	91 1d       	adc	r25, r1
    4e80:	a1 1d       	adc	r26, r1
    4e82:	20 d0       	rcall	.+64     	; 0x4ec4 <__ultoa_invert+0x84>
    4e84:	09 f4       	brne	.+2      	; 0x4e88 <__ultoa_invert+0x48>
    4e86:	68 94       	set
    4e88:	3f 91       	pop	r19
    4e8a:	2a e0       	ldi	r18, 0x0A	; 10
    4e8c:	26 9f       	mul	r18, r22
    4e8e:	11 24       	eor	r1, r1
    4e90:	30 19       	sub	r19, r0
    4e92:	30 5d       	subi	r19, 0xD0	; 208
    4e94:	31 93       	st	Z+, r19
    4e96:	de f6       	brtc	.-74     	; 0x4e4e <__ultoa_invert+0xe>
    4e98:	cf 01       	movw	r24, r30
    4e9a:	08 95       	ret
    4e9c:	46 2f       	mov	r20, r22
    4e9e:	47 70       	andi	r20, 0x07	; 7
    4ea0:	40 5d       	subi	r20, 0xD0	; 208
    4ea2:	41 93       	st	Z+, r20
    4ea4:	b3 e0       	ldi	r27, 0x03	; 3
    4ea6:	0f d0       	rcall	.+30     	; 0x4ec6 <__ultoa_invert+0x86>
    4ea8:	c9 f7       	brne	.-14     	; 0x4e9c <__ultoa_invert+0x5c>
    4eaa:	f6 cf       	rjmp	.-20     	; 0x4e98 <__ultoa_invert+0x58>
    4eac:	46 2f       	mov	r20, r22
    4eae:	4f 70       	andi	r20, 0x0F	; 15
    4eb0:	40 5d       	subi	r20, 0xD0	; 208
    4eb2:	4a 33       	cpi	r20, 0x3A	; 58
    4eb4:	18 f0       	brcs	.+6      	; 0x4ebc <__ultoa_invert+0x7c>
    4eb6:	49 5d       	subi	r20, 0xD9	; 217
    4eb8:	31 fd       	sbrc	r19, 1
    4eba:	40 52       	subi	r20, 0x20	; 32
    4ebc:	41 93       	st	Z+, r20
    4ebe:	02 d0       	rcall	.+4      	; 0x4ec4 <__ultoa_invert+0x84>
    4ec0:	a9 f7       	brne	.-22     	; 0x4eac <__ultoa_invert+0x6c>
    4ec2:	ea cf       	rjmp	.-44     	; 0x4e98 <__ultoa_invert+0x58>
    4ec4:	b4 e0       	ldi	r27, 0x04	; 4
    4ec6:	a6 95       	lsr	r26
    4ec8:	97 95       	ror	r25
    4eca:	87 95       	ror	r24
    4ecc:	77 95       	ror	r23
    4ece:	67 95       	ror	r22
    4ed0:	ba 95       	dec	r27
    4ed2:	c9 f7       	brne	.-14     	; 0x4ec6 <__ultoa_invert+0x86>
    4ed4:	00 97       	sbiw	r24, 0x00	; 0
    4ed6:	61 05       	cpc	r22, r1
    4ed8:	71 05       	cpc	r23, r1
    4eda:	08 95       	ret
    4edc:	9b 01       	movw	r18, r22
    4ede:	ac 01       	movw	r20, r24
    4ee0:	0a 2e       	mov	r0, r26
    4ee2:	06 94       	lsr	r0
    4ee4:	57 95       	ror	r21
    4ee6:	47 95       	ror	r20
    4ee8:	37 95       	ror	r19
    4eea:	27 95       	ror	r18
    4eec:	ba 95       	dec	r27
    4eee:	c9 f7       	brne	.-14     	; 0x4ee2 <__ultoa_invert+0xa2>
    4ef0:	62 0f       	add	r22, r18
    4ef2:	73 1f       	adc	r23, r19
    4ef4:	84 1f       	adc	r24, r20
    4ef6:	95 1f       	adc	r25, r21
    4ef8:	a0 1d       	adc	r26, r0
    4efa:	08 95       	ret

00004efc <calloc>:
    4efc:	0f 93       	push	r16
    4efe:	1f 93       	push	r17
    4f00:	cf 93       	push	r28
    4f02:	df 93       	push	r29
    4f04:	68 9f       	mul	r22, r24
    4f06:	80 01       	movw	r16, r0
    4f08:	69 9f       	mul	r22, r25
    4f0a:	10 0d       	add	r17, r0
    4f0c:	78 9f       	mul	r23, r24
    4f0e:	10 0d       	add	r17, r0
    4f10:	11 24       	eor	r1, r1
    4f12:	c8 01       	movw	r24, r16
    4f14:	0d d0       	rcall	.+26     	; 0x4f30 <malloc>
    4f16:	ec 01       	movw	r28, r24
    4f18:	00 97       	sbiw	r24, 0x00	; 0
    4f1a:	21 f0       	breq	.+8      	; 0x4f24 <calloc+0x28>
    4f1c:	60 e0       	ldi	r22, 0x00	; 0
    4f1e:	70 e0       	ldi	r23, 0x00	; 0
    4f20:	a8 01       	movw	r20, r16
    4f22:	0b d1       	rcall	.+534    	; 0x513a <memset>
    4f24:	ce 01       	movw	r24, r28
    4f26:	df 91       	pop	r29
    4f28:	cf 91       	pop	r28
    4f2a:	1f 91       	pop	r17
    4f2c:	0f 91       	pop	r16
    4f2e:	08 95       	ret

00004f30 <malloc>:
    4f30:	cf 93       	push	r28
    4f32:	df 93       	push	r29
    4f34:	bc 01       	movw	r22, r24
    4f36:	82 30       	cpi	r24, 0x02	; 2
    4f38:	91 05       	cpc	r25, r1
    4f3a:	10 f4       	brcc	.+4      	; 0x4f40 <malloc+0x10>
    4f3c:	62 e0       	ldi	r22, 0x02	; 2
    4f3e:	70 e0       	ldi	r23, 0x00	; 0
    4f40:	a0 91 f8 07 	lds	r26, 0x07F8
    4f44:	b0 91 f9 07 	lds	r27, 0x07F9
    4f48:	ed 01       	movw	r28, r26
    4f4a:	e0 e0       	ldi	r30, 0x00	; 0
    4f4c:	f0 e0       	ldi	r31, 0x00	; 0
    4f4e:	40 e0       	ldi	r20, 0x00	; 0
    4f50:	50 e0       	ldi	r21, 0x00	; 0
    4f52:	21 c0       	rjmp	.+66     	; 0x4f96 <malloc+0x66>
    4f54:	88 81       	ld	r24, Y
    4f56:	99 81       	ldd	r25, Y+1	; 0x01
    4f58:	86 17       	cp	r24, r22
    4f5a:	97 07       	cpc	r25, r23
    4f5c:	69 f4       	brne	.+26     	; 0x4f78 <malloc+0x48>
    4f5e:	8a 81       	ldd	r24, Y+2	; 0x02
    4f60:	9b 81       	ldd	r25, Y+3	; 0x03
    4f62:	30 97       	sbiw	r30, 0x00	; 0
    4f64:	19 f0       	breq	.+6      	; 0x4f6c <malloc+0x3c>
    4f66:	93 83       	std	Z+3, r25	; 0x03
    4f68:	82 83       	std	Z+2, r24	; 0x02
    4f6a:	04 c0       	rjmp	.+8      	; 0x4f74 <malloc+0x44>
    4f6c:	90 93 f9 07 	sts	0x07F9, r25
    4f70:	80 93 f8 07 	sts	0x07F8, r24
    4f74:	fe 01       	movw	r30, r28
    4f76:	34 c0       	rjmp	.+104    	; 0x4fe0 <malloc+0xb0>
    4f78:	68 17       	cp	r22, r24
    4f7a:	79 07       	cpc	r23, r25
    4f7c:	38 f4       	brcc	.+14     	; 0x4f8c <malloc+0x5c>
    4f7e:	41 15       	cp	r20, r1
    4f80:	51 05       	cpc	r21, r1
    4f82:	19 f0       	breq	.+6      	; 0x4f8a <malloc+0x5a>
    4f84:	84 17       	cp	r24, r20
    4f86:	95 07       	cpc	r25, r21
    4f88:	08 f4       	brcc	.+2      	; 0x4f8c <malloc+0x5c>
    4f8a:	ac 01       	movw	r20, r24
    4f8c:	fe 01       	movw	r30, r28
    4f8e:	8a 81       	ldd	r24, Y+2	; 0x02
    4f90:	9b 81       	ldd	r25, Y+3	; 0x03
    4f92:	9c 01       	movw	r18, r24
    4f94:	e9 01       	movw	r28, r18
    4f96:	20 97       	sbiw	r28, 0x00	; 0
    4f98:	e9 f6       	brne	.-70     	; 0x4f54 <malloc+0x24>
    4f9a:	41 15       	cp	r20, r1
    4f9c:	51 05       	cpc	r21, r1
    4f9e:	a9 f1       	breq	.+106    	; 0x500a <malloc+0xda>
    4fa0:	ca 01       	movw	r24, r20
    4fa2:	86 1b       	sub	r24, r22
    4fa4:	97 0b       	sbc	r25, r23
    4fa6:	04 97       	sbiw	r24, 0x04	; 4
    4fa8:	08 f4       	brcc	.+2      	; 0x4fac <malloc+0x7c>
    4faa:	ba 01       	movw	r22, r20
    4fac:	e0 e0       	ldi	r30, 0x00	; 0
    4fae:	f0 e0       	ldi	r31, 0x00	; 0
    4fb0:	2a c0       	rjmp	.+84     	; 0x5006 <malloc+0xd6>
    4fb2:	8d 91       	ld	r24, X+
    4fb4:	9c 91       	ld	r25, X
    4fb6:	11 97       	sbiw	r26, 0x01	; 1
    4fb8:	84 17       	cp	r24, r20
    4fba:	95 07       	cpc	r25, r21
    4fbc:	f9 f4       	brne	.+62     	; 0x4ffc <malloc+0xcc>
    4fbe:	64 17       	cp	r22, r20
    4fc0:	75 07       	cpc	r23, r21
    4fc2:	81 f4       	brne	.+32     	; 0x4fe4 <malloc+0xb4>
    4fc4:	12 96       	adiw	r26, 0x02	; 2
    4fc6:	8d 91       	ld	r24, X+
    4fc8:	9c 91       	ld	r25, X
    4fca:	13 97       	sbiw	r26, 0x03	; 3
    4fcc:	30 97       	sbiw	r30, 0x00	; 0
    4fce:	19 f0       	breq	.+6      	; 0x4fd6 <malloc+0xa6>
    4fd0:	93 83       	std	Z+3, r25	; 0x03
    4fd2:	82 83       	std	Z+2, r24	; 0x02
    4fd4:	04 c0       	rjmp	.+8      	; 0x4fde <malloc+0xae>
    4fd6:	90 93 f9 07 	sts	0x07F9, r25
    4fda:	80 93 f8 07 	sts	0x07F8, r24
    4fde:	fd 01       	movw	r30, r26
    4fe0:	32 96       	adiw	r30, 0x02	; 2
    4fe2:	4f c0       	rjmp	.+158    	; 0x5082 <malloc+0x152>
    4fe4:	ca 01       	movw	r24, r20
    4fe6:	86 1b       	sub	r24, r22
    4fe8:	97 0b       	sbc	r25, r23
    4fea:	fd 01       	movw	r30, r26
    4fec:	e8 0f       	add	r30, r24
    4fee:	f9 1f       	adc	r31, r25
    4ff0:	61 93       	st	Z+, r22
    4ff2:	71 93       	st	Z+, r23
    4ff4:	02 97       	sbiw	r24, 0x02	; 2
    4ff6:	8d 93       	st	X+, r24
    4ff8:	9c 93       	st	X, r25
    4ffa:	43 c0       	rjmp	.+134    	; 0x5082 <malloc+0x152>
    4ffc:	fd 01       	movw	r30, r26
    4ffe:	82 81       	ldd	r24, Z+2	; 0x02
    5000:	93 81       	ldd	r25, Z+3	; 0x03
    5002:	9c 01       	movw	r18, r24
    5004:	d9 01       	movw	r26, r18
    5006:	10 97       	sbiw	r26, 0x00	; 0
    5008:	a1 f6       	brne	.-88     	; 0x4fb2 <malloc+0x82>
    500a:	80 91 f6 07 	lds	r24, 0x07F6
    500e:	90 91 f7 07 	lds	r25, 0x07F7
    5012:	89 2b       	or	r24, r25
    5014:	41 f4       	brne	.+16     	; 0x5026 <malloc+0xf6>
    5016:	80 91 5f 05 	lds	r24, 0x055F
    501a:	90 91 60 05 	lds	r25, 0x0560
    501e:	90 93 f7 07 	sts	0x07F7, r25
    5022:	80 93 f6 07 	sts	0x07F6, r24
    5026:	40 91 61 05 	lds	r20, 0x0561
    502a:	50 91 62 05 	lds	r21, 0x0562
    502e:	41 15       	cp	r20, r1
    5030:	51 05       	cpc	r21, r1
    5032:	41 f4       	brne	.+16     	; 0x5044 <malloc+0x114>
    5034:	4d b7       	in	r20, 0x3d	; 61
    5036:	5e b7       	in	r21, 0x3e	; 62
    5038:	80 91 5d 05 	lds	r24, 0x055D
    503c:	90 91 5e 05 	lds	r25, 0x055E
    5040:	48 1b       	sub	r20, r24
    5042:	59 0b       	sbc	r21, r25
    5044:	20 91 f6 07 	lds	r18, 0x07F6
    5048:	30 91 f7 07 	lds	r19, 0x07F7
    504c:	24 17       	cp	r18, r20
    504e:	35 07       	cpc	r19, r21
    5050:	b0 f4       	brcc	.+44     	; 0x507e <malloc+0x14e>
    5052:	ca 01       	movw	r24, r20
    5054:	82 1b       	sub	r24, r18
    5056:	93 0b       	sbc	r25, r19
    5058:	86 17       	cp	r24, r22
    505a:	97 07       	cpc	r25, r23
    505c:	80 f0       	brcs	.+32     	; 0x507e <malloc+0x14e>
    505e:	ab 01       	movw	r20, r22
    5060:	4e 5f       	subi	r20, 0xFE	; 254
    5062:	5f 4f       	sbci	r21, 0xFF	; 255
    5064:	84 17       	cp	r24, r20
    5066:	95 07       	cpc	r25, r21
    5068:	50 f0       	brcs	.+20     	; 0x507e <malloc+0x14e>
    506a:	42 0f       	add	r20, r18
    506c:	53 1f       	adc	r21, r19
    506e:	50 93 f7 07 	sts	0x07F7, r21
    5072:	40 93 f6 07 	sts	0x07F6, r20
    5076:	f9 01       	movw	r30, r18
    5078:	61 93       	st	Z+, r22
    507a:	71 93       	st	Z+, r23
    507c:	02 c0       	rjmp	.+4      	; 0x5082 <malloc+0x152>
    507e:	e0 e0       	ldi	r30, 0x00	; 0
    5080:	f0 e0       	ldi	r31, 0x00	; 0
    5082:	cf 01       	movw	r24, r30
    5084:	df 91       	pop	r29
    5086:	cf 91       	pop	r28
    5088:	08 95       	ret

0000508a <free>:
    508a:	cf 93       	push	r28
    508c:	df 93       	push	r29
    508e:	00 97       	sbiw	r24, 0x00	; 0
    5090:	09 f4       	brne	.+2      	; 0x5094 <free+0xa>
    5092:	50 c0       	rjmp	.+160    	; 0x5134 <free+0xaa>
    5094:	ec 01       	movw	r28, r24
    5096:	22 97       	sbiw	r28, 0x02	; 2
    5098:	1b 82       	std	Y+3, r1	; 0x03
    509a:	1a 82       	std	Y+2, r1	; 0x02
    509c:	a0 91 f8 07 	lds	r26, 0x07F8
    50a0:	b0 91 f9 07 	lds	r27, 0x07F9
    50a4:	10 97       	sbiw	r26, 0x00	; 0
    50a6:	09 f1       	breq	.+66     	; 0x50ea <free+0x60>
    50a8:	40 e0       	ldi	r20, 0x00	; 0
    50aa:	50 e0       	ldi	r21, 0x00	; 0
    50ac:	ac 17       	cp	r26, r28
    50ae:	bd 07       	cpc	r27, r29
    50b0:	08 f1       	brcs	.+66     	; 0x50f4 <free+0x6a>
    50b2:	bb 83       	std	Y+3, r27	; 0x03
    50b4:	aa 83       	std	Y+2, r26	; 0x02
    50b6:	fe 01       	movw	r30, r28
    50b8:	21 91       	ld	r18, Z+
    50ba:	31 91       	ld	r19, Z+
    50bc:	e2 0f       	add	r30, r18
    50be:	f3 1f       	adc	r31, r19
    50c0:	ae 17       	cp	r26, r30
    50c2:	bf 07       	cpc	r27, r31
    50c4:	79 f4       	brne	.+30     	; 0x50e4 <free+0x5a>
    50c6:	8d 91       	ld	r24, X+
    50c8:	9c 91       	ld	r25, X
    50ca:	11 97       	sbiw	r26, 0x01	; 1
    50cc:	28 0f       	add	r18, r24
    50ce:	39 1f       	adc	r19, r25
    50d0:	2e 5f       	subi	r18, 0xFE	; 254
    50d2:	3f 4f       	sbci	r19, 0xFF	; 255
    50d4:	39 83       	std	Y+1, r19	; 0x01
    50d6:	28 83       	st	Y, r18
    50d8:	12 96       	adiw	r26, 0x02	; 2
    50da:	8d 91       	ld	r24, X+
    50dc:	9c 91       	ld	r25, X
    50de:	13 97       	sbiw	r26, 0x03	; 3
    50e0:	9b 83       	std	Y+3, r25	; 0x03
    50e2:	8a 83       	std	Y+2, r24	; 0x02
    50e4:	41 15       	cp	r20, r1
    50e6:	51 05       	cpc	r21, r1
    50e8:	71 f4       	brne	.+28     	; 0x5106 <free+0x7c>
    50ea:	d0 93 f9 07 	sts	0x07F9, r29
    50ee:	c0 93 f8 07 	sts	0x07F8, r28
    50f2:	20 c0       	rjmp	.+64     	; 0x5134 <free+0xaa>
    50f4:	12 96       	adiw	r26, 0x02	; 2
    50f6:	8d 91       	ld	r24, X+
    50f8:	9c 91       	ld	r25, X
    50fa:	13 97       	sbiw	r26, 0x03	; 3
    50fc:	ad 01       	movw	r20, r26
    50fe:	00 97       	sbiw	r24, 0x00	; 0
    5100:	11 f0       	breq	.+4      	; 0x5106 <free+0x7c>
    5102:	dc 01       	movw	r26, r24
    5104:	d3 cf       	rjmp	.-90     	; 0x50ac <free+0x22>
    5106:	fa 01       	movw	r30, r20
    5108:	d3 83       	std	Z+3, r29	; 0x03
    510a:	c2 83       	std	Z+2, r28	; 0x02
    510c:	21 91       	ld	r18, Z+
    510e:	31 91       	ld	r19, Z+
    5110:	e2 0f       	add	r30, r18
    5112:	f3 1f       	adc	r31, r19
    5114:	ce 17       	cp	r28, r30
    5116:	df 07       	cpc	r29, r31
    5118:	69 f4       	brne	.+26     	; 0x5134 <free+0xaa>
    511a:	88 81       	ld	r24, Y
    511c:	99 81       	ldd	r25, Y+1	; 0x01
    511e:	28 0f       	add	r18, r24
    5120:	39 1f       	adc	r19, r25
    5122:	2e 5f       	subi	r18, 0xFE	; 254
    5124:	3f 4f       	sbci	r19, 0xFF	; 255
    5126:	fa 01       	movw	r30, r20
    5128:	31 83       	std	Z+1, r19	; 0x01
    512a:	20 83       	st	Z, r18
    512c:	8a 81       	ldd	r24, Y+2	; 0x02
    512e:	9b 81       	ldd	r25, Y+3	; 0x03
    5130:	93 83       	std	Z+3, r25	; 0x03
    5132:	82 83       	std	Z+2, r24	; 0x02
    5134:	df 91       	pop	r29
    5136:	cf 91       	pop	r28
    5138:	08 95       	ret

0000513a <memset>:
    513a:	dc 01       	movw	r26, r24
    513c:	01 c0       	rjmp	.+2      	; 0x5140 <memset+0x6>
    513e:	6d 93       	st	X+, r22
    5140:	41 50       	subi	r20, 0x01	; 1
    5142:	50 40       	sbci	r21, 0x00	; 0
    5144:	e0 f7       	brcc	.-8      	; 0x513e <memset+0x4>
    5146:	08 95       	ret

00005148 <_exit>:
    5148:	f8 94       	cli

0000514a <__stop_program>:
    514a:	ff cf       	rjmp	.-2      	; 0x514a <__stop_program>
