
DeltaDriver.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00005824  00800200  00003b6e  00003c02  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00003b6e  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000028c  00805a24  00805a24  00009426  2**0
                  ALLOC
  3 .debug_aranges 00000120  00000000  00000000  00009426  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_pubnames 00000648  00000000  00000000  00009546  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00001b70  00000000  00000000  00009b8e  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 000009b8  00000000  00000000  0000b6fe  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00001a26  00000000  00000000  0000c0b6  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000400  00000000  00000000  0000dadc  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00000843  00000000  00000000  0000dedc  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00001135  00000000  00000000  0000e71f  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 000000b0  00000000  00000000  0000f854  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
		case COMM_RXCORRUPT:
		printf("COMM_RXCORRUPT: Incorrect status packet!\n");
		break;

		default:
		printf("This is unknown error code!\n");
       0:	e6 c0       	rjmp	.+460    	; 0x1ce <__ctors_end>
 */
 void printAngles(char indicator[], double angles[3])
 {
    printf("%s - Angle 1: %.2f;   Angle 2: %.2f;  Angle 3: %.2f;\n",
           indicator, angles[0], angles[1], angles[2]);
 }
       2:	00 00       	nop
       4:	04 c1       	rjmp	.+520    	; 0x20e <__bad_interrupt>
       6:	00 00       	nop
       8:	02 c1       	rjmp	.+516    	; 0x20e <__bad_interrupt>
       a:	00 00       	nop
       c:	00 c1       	rjmp	.+512    	; 0x20e <__bad_interrupt>
       e:	00 00       	nop
      10:	fe c0       	rjmp	.+508    	; 0x20e <__bad_interrupt>
      12:	00 00       	nop
      14:	fc c0       	rjmp	.+504    	; 0x20e <__bad_interrupt>
      16:	00 00       	nop
      18:	fa c0       	rjmp	.+500    	; 0x20e <__bad_interrupt>
      1a:	00 00       	nop
      1c:	f8 c0       	rjmp	.+496    	; 0x20e <__bad_interrupt>
      1e:	00 00       	nop
      20:	f6 c0       	rjmp	.+492    	; 0x20e <__bad_interrupt>
      22:	00 00       	nop
      24:	f4 c0       	rjmp	.+488    	; 0x20e <__bad_interrupt>
      26:	00 00       	nop
      28:	f2 c0       	rjmp	.+484    	; 0x20e <__bad_interrupt>
      2a:	00 00       	nop
      2c:	f0 c0       	rjmp	.+480    	; 0x20e <__bad_interrupt>
      2e:	00 00       	nop
      30:	ee c0       	rjmp	.+476    	; 0x20e <__bad_interrupt>
      32:	00 00       	nop
      34:	ec c0       	rjmp	.+472    	; 0x20e <__bad_interrupt>
      36:	00 00       	nop
      38:	ea c0       	rjmp	.+468    	; 0x20e <__bad_interrupt>
      3a:	00 00       	nop
      3c:	e8 c0       	rjmp	.+464    	; 0x20e <__bad_interrupt>
      3e:	00 00       	nop
      40:	e6 c0       	rjmp	.+460    	; 0x20e <__bad_interrupt>
      42:	00 00       	nop
      44:	e4 c0       	rjmp	.+456    	; 0x20e <__bad_interrupt>
      46:	00 00       	nop
      48:	e2 c0       	rjmp	.+452    	; 0x20e <__bad_interrupt>
      4a:	00 00       	nop
      4c:	e0 c0       	rjmp	.+448    	; 0x20e <__bad_interrupt>
      4e:	00 00       	nop
      50:	de c0       	rjmp	.+444    	; 0x20e <__bad_interrupt>
      52:	00 00       	nop
      54:	dc c0       	rjmp	.+440    	; 0x20e <__bad_interrupt>
      56:	00 00       	nop
      58:	da c0       	rjmp	.+436    	; 0x20e <__bad_interrupt>
      5a:	00 00       	nop
      5c:	d8 c0       	rjmp	.+432    	; 0x20e <__bad_interrupt>
      5e:	00 00       	nop
      60:	d6 c0       	rjmp	.+428    	; 0x20e <__bad_interrupt>
      62:	00 00       	nop
      64:	a0 c4       	rjmp	.+2368   	; 0x9a6 <__vector_25>
      66:	00 00       	nop
      68:	d2 c0       	rjmp	.+420    	; 0x20e <__bad_interrupt>
      6a:	00 00       	nop
      6c:	d0 c0       	rjmp	.+416    	; 0x20e <__bad_interrupt>
      6e:	00 00       	nop
      70:	ce c0       	rjmp	.+412    	; 0x20e <__bad_interrupt>
      72:	00 00       	nop
      74:	cc c0       	rjmp	.+408    	; 0x20e <__bad_interrupt>
      76:	00 00       	nop
      78:	ca c0       	rjmp	.+404    	; 0x20e <__bad_interrupt>
      7a:	00 00       	nop
      7c:	c8 c0       	rjmp	.+400    	; 0x20e <__bad_interrupt>
      7e:	00 00       	nop
      80:	c6 c0       	rjmp	.+396    	; 0x20e <__bad_interrupt>
      82:	00 00       	nop
      84:	c4 c0       	rjmp	.+392    	; 0x20e <__bad_interrupt>
      86:	00 00       	nop
      88:	c2 c0       	rjmp	.+388    	; 0x20e <__bad_interrupt>
      8a:	00 00       	nop
      8c:	c0 c0       	rjmp	.+384    	; 0x20e <__bad_interrupt>
      8e:	00 00       	nop
      90:	8f c5       	rjmp	.+2846   	; 0xbb0 <__vector_36>
      92:	00 00       	nop
      94:	bc c0       	rjmp	.+376    	; 0x20e <__bad_interrupt>
      96:	00 00       	nop
      98:	ba c0       	rjmp	.+372    	; 0x20e <__bad_interrupt>
      9a:	00 00       	nop
      9c:	b8 c0       	rjmp	.+368    	; 0x20e <__bad_interrupt>
      9e:	00 00       	nop
      a0:	b6 c0       	rjmp	.+364    	; 0x20e <__bad_interrupt>
      a2:	00 00       	nop
      a4:	b4 c0       	rjmp	.+360    	; 0x20e <__bad_interrupt>
      a6:	00 00       	nop
      a8:	b2 c0       	rjmp	.+356    	; 0x20e <__bad_interrupt>
      aa:	00 00       	nop
      ac:	b0 c0       	rjmp	.+352    	; 0x20e <__bad_interrupt>
      ae:	00 00       	nop
      b0:	ae c0       	rjmp	.+348    	; 0x20e <__bad_interrupt>
      b2:	00 00       	nop
      b4:	ac c0       	rjmp	.+344    	; 0x20e <__bad_interrupt>
      b6:	00 00       	nop
      b8:	aa c0       	rjmp	.+340    	; 0x20e <__bad_interrupt>
      ba:	00 00       	nop
      bc:	a8 c0       	rjmp	.+336    	; 0x20e <__bad_interrupt>
      be:	00 00       	nop
      c0:	a6 c0       	rjmp	.+332    	; 0x20e <__bad_interrupt>
      c2:	00 00       	nop
      c4:	a4 c0       	rjmp	.+328    	; 0x20e <__bad_interrupt>
      c6:	00 00       	nop
      c8:	a2 c0       	rjmp	.+324    	; 0x20e <__bad_interrupt>
	...

000000cc <__c.1790>:
      cc:	6e 61 6e 00                                         nan.

000000d0 <__c.1788>:
      d0:	69 6e 66 00 00 40 7a 10 f3 5a 00 a0 72 4e 18 09     inf..@z..Z..rN..
      e0:	00 10 a5 d4 e8 00 00 e8 76 48 17 00 00 e4 0b 54     ........vH.....T
      f0:	02 00 00 ca 9a 3b 00 00 00 e1 f5 05 00 00 80 96     .....;..........
     100:	98 00 00 00 40 42 0f 00 00 00 a0 86 01 00 00 00     ....@B..........
     110:	10 27 00 00 00 00 e8 03 00 00 00 00 64 00 00 00     .'..........d...
     120:	00 00 0a 00 00 00 00 00 01 00 00 00 00 00 2c 76     ..............,v
     130:	d8 88 dc 67 4f 08 23 df c1 df ae 59 e1 b1 b7 96     ...gO.#....Y....
     140:	e5 e3 e4 53 c6 3a e6 51 99 76 96 e8 e6 c2 84 26     ...S.:.Q.v.....&
     150:	eb 89 8c 9b 62 ed 40 7c 6f fc ef bc 9c 9f 40 f2     ....b.@|o.....@.
     160:	ba a5 6f a5 f4 90 05 5a 2a f7 5c 93 6b 6c f9 67     ..o....Z*.\.kl.g
     170:	6d c1 1b fc e0 e4 0d 47 fe f5 20 e6 b5 00 d0 ed     m......G.. .....
     180:	90 2e 03 00 94 35 77 05 00 80 84 1e 08 00 00 20     .....5w........ 
     190:	4e 0a 00 00 00 c8 0c 33 33 33 33 0f 98 6e 12 83     N......3333..n..
     1a0:	11 41 ef 8d 21 14 89 3b e6 55 16 cf fe e6 db 18     .A..!..;.U......
     1b0:	d1 84 4b 38 1b f7 7c 1d 90 1d a4 bb e4 24 20 32     ..K8..|......$ 2
     1c0:	84 72 5e 22 81 00 c9 f1 24 ec a1 e5 3d 27           .r^"....$...='

000001ce <__ctors_end>:
     1ce:	11 24       	eor	r1, r1
     1d0:	1f be       	out	0x3f, r1	; 63
     1d2:	cf ef       	ldi	r28, 0xFF	; 255
     1d4:	d1 e2       	ldi	r29, 0x21	; 33
     1d6:	de bf       	out	0x3e, r29	; 62
     1d8:	cd bf       	out	0x3d, r28	; 61
     1da:	00 e0       	ldi	r16, 0x00	; 0
     1dc:	0c bf       	out	0x3c, r16	; 60

000001de <__do_copy_data>:
     1de:	1a e5       	ldi	r17, 0x5A	; 90
     1e0:	a0 e0       	ldi	r26, 0x00	; 0
     1e2:	b2 e0       	ldi	r27, 0x02	; 2
     1e4:	ee e6       	ldi	r30, 0x6E	; 110
     1e6:	fb e3       	ldi	r31, 0x3B	; 59
     1e8:	00 e0       	ldi	r16, 0x00	; 0
     1ea:	0b bf       	out	0x3b, r16	; 59
     1ec:	02 c0       	rjmp	.+4      	; 0x1f2 <__do_copy_data+0x14>
     1ee:	07 90       	elpm	r0, Z+
     1f0:	0d 92       	st	X+, r0
     1f2:	a4 32       	cpi	r26, 0x24	; 36
     1f4:	b1 07       	cpc	r27, r17
     1f6:	d9 f7       	brne	.-10     	; 0x1ee <__do_copy_data+0x10>

000001f8 <__do_clear_bss>:
     1f8:	1c e5       	ldi	r17, 0x5C	; 92
     1fa:	a4 e2       	ldi	r26, 0x24	; 36
     1fc:	ba e5       	ldi	r27, 0x5A	; 90
     1fe:	01 c0       	rjmp	.+2      	; 0x202 <.do_clear_bss_start>

00000200 <.do_clear_bss_loop>:
     200:	1d 92       	st	X+, r1

00000202 <.do_clear_bss_start>:
     202:	a0 3b       	cpi	r26, 0xB0	; 176
     204:	b1 07       	cpc	r27, r17
     206:	e1 f7       	brne	.-8      	; 0x200 <.do_clear_bss_loop>
     208:	a9 d7       	rcall	.+3922   	; 0x115c <main>
     20a:	0c 94 b5 1d 	jmp	0x3b6a	; 0x3b6a <_exit>

0000020e <__bad_interrupt>:
     20e:	f8 ce       	rjmp	.-528    	; 0x0 <__vectors>

00000210 <dxl_get_result>:
     210:	80 91 b2 05 	lds	r24, 0x05B2
     214:	90 91 b3 05 	lds	r25, 0x05B3
     218:	08 95       	ret

0000021a <dxl_set_txpacket_id>:
     21a:	80 93 26 5a 	sts	0x5A26, r24
     21e:	08 95       	ret

00000220 <dxl_set_txpacket_instruction>:
     220:	80 93 28 5a 	sts	0x5A28, r24
     224:	08 95       	ret

00000226 <dxl_set_txpacket_parameter>:
     226:	fc 01       	movw	r30, r24
     228:	ec 5d       	subi	r30, 0xDC	; 220
     22a:	f5 4a       	sbci	r31, 0xA5	; 165
     22c:	65 83       	std	Z+5, r22	; 0x05
     22e:	08 95       	ret

00000230 <dxl_set_txpacket_length>:
     230:	80 93 27 5a 	sts	0x5A27, r24
     234:	08 95       	ret

00000236 <dxl_get_rxpacket_error>:
     236:	20 e0       	ldi	r18, 0x00	; 0
     238:	30 e0       	ldi	r19, 0x00	; 0
     23a:	90 91 c8 5a 	lds	r25, 0x5AC8
     23e:	98 23       	and	r25, r24
     240:	11 f0       	breq	.+4      	; 0x246 <dxl_get_rxpacket_error+0x10>
     242:	21 e0       	ldi	r18, 0x01	; 1
     244:	30 e0       	ldi	r19, 0x00	; 0
     246:	c9 01       	movw	r24, r18
     248:	08 95       	ret

0000024a <dxl_get_rxpacket_length>:
     24a:	80 91 c7 5a 	lds	r24, 0x5AC7
     24e:	90 e0       	ldi	r25, 0x00	; 0
     250:	08 95       	ret

00000252 <dxl_get_rxpacket_parameter>:
     252:	fc 01       	movw	r30, r24
     254:	ec 53       	subi	r30, 0x3C	; 60
     256:	f5 4a       	sbci	r31, 0xA5	; 165
     258:	85 81       	ldd	r24, Z+5	; 0x05
     25a:	90 e0       	ldi	r25, 0x00	; 0
     25c:	08 95       	ret

0000025e <dxl_makeword>:
     25e:	36 2f       	mov	r19, r22
     260:	20 e0       	ldi	r18, 0x00	; 0
     262:	28 0f       	add	r18, r24
     264:	39 1f       	adc	r19, r25
     266:	c9 01       	movw	r24, r18
     268:	08 95       	ret

0000026a <dxl_get_lowbyte>:
     26a:	28 2f       	mov	r18, r24
     26c:	30 e0       	ldi	r19, 0x00	; 0
     26e:	c9 01       	movw	r24, r18
     270:	08 95       	ret

00000272 <dxl_get_highbyte>:
     272:	80 70       	andi	r24, 0x00	; 0
     274:	89 2f       	mov	r24, r25
     276:	90 e0       	ldi	r25, 0x00	; 0
     278:	08 95       	ret

0000027a <dxl_rx_packet>:
     27a:	0f 93       	push	r16
     27c:	1f 93       	push	r17
     27e:	cf 93       	push	r28
     280:	df 93       	push	r29
     282:	80 91 0c 5b 	lds	r24, 0x5B0C
     286:	90 91 0d 5b 	lds	r25, 0x5B0D
     28a:	89 2b       	or	r24, r25
     28c:	09 f4       	brne	.+2      	; 0x290 <dxl_rx_packet+0x16>
     28e:	b8 c0       	rjmp	.+368    	; 0x400 <dxl_rx_packet+0x186>
     290:	80 91 26 5a 	lds	r24, 0x5A26
     294:	8e 3f       	cpi	r24, 0xFE	; 254
     296:	09 f4       	brne	.+2      	; 0x29a <dxl_rx_packet+0x20>
     298:	a9 c0       	rjmp	.+338    	; 0x3ec <dxl_rx_packet+0x172>
     29a:	80 91 b2 05 	lds	r24, 0x05B2
     29e:	90 91 b3 05 	lds	r25, 0x05B3
     2a2:	89 2b       	or	r24, r25
     2a4:	29 f4       	brne	.+10     	; 0x2b0 <dxl_rx_packet+0x36>
     2a6:	10 92 0b 5b 	sts	0x5B0B, r1
     2aa:	86 e0       	ldi	r24, 0x06	; 6
     2ac:	80 93 0a 5b 	sts	0x5B0A, r24
     2b0:	80 91 0b 5b 	lds	r24, 0x5B0B
     2b4:	90 e0       	ldi	r25, 0x00	; 0
     2b6:	60 91 0a 5b 	lds	r22, 0x5B0A
     2ba:	70 e0       	ldi	r23, 0x00	; 0
     2bc:	68 1b       	sub	r22, r24
     2be:	79 0b       	sbc	r23, r25
     2c0:	8c 53       	subi	r24, 0x3C	; 60
     2c2:	95 4a       	sbci	r25, 0xA5	; 165
     2c4:	45 d3       	rcall	.+1674   	; 0x950 <dxl_hal_rx>
     2c6:	90 91 0b 5b 	lds	r25, 0x5B0B
     2ca:	98 0f       	add	r25, r24
     2cc:	90 93 0b 5b 	sts	0x5B0B, r25
     2d0:	80 91 0a 5b 	lds	r24, 0x5B0A
     2d4:	98 17       	cp	r25, r24
     2d6:	18 f4       	brcc	.+6      	; 0x2de <dxl_rx_packet+0x64>
     2d8:	46 d2       	rcall	.+1164   	; 0x766 <dxl_hal_timeout>
     2da:	01 97       	sbiw	r24, 0x01	; 1
     2dc:	71 f0       	breq	.+28     	; 0x2fa <dxl_rx_packet+0x80>
     2de:	70 91 0b 5b 	lds	r23, 0x5B0B
     2e2:	47 2f       	mov	r20, r23
     2e4:	50 e0       	ldi	r21, 0x00	; 0
     2e6:	da 01       	movw	r26, r20
     2e8:	11 97       	sbiw	r26, 0x01	; 1
     2ea:	8a 01       	movw	r16, r20
     2ec:	02 50       	subi	r16, 0x02	; 2
     2ee:	10 40       	sbci	r17, 0x00	; 0
     2f0:	60 e0       	ldi	r22, 0x00	; 0
     2f2:	ed 01       	movw	r28, r26
     2f4:	cc 53       	subi	r28, 0x3C	; 60
     2f6:	d5 4a       	sbci	r29, 0xA5	; 165
     2f8:	18 c0       	rjmp	.+48     	; 0x32a <dxl_rx_packet+0xb0>
     2fa:	80 91 0b 5b 	lds	r24, 0x5B0B
     2fe:	88 23       	and	r24, r24
     300:	09 f0       	breq	.+2      	; 0x304 <dxl_rx_packet+0x8a>
     302:	71 c0       	rjmp	.+226    	; 0x3e6 <dxl_rx_packet+0x16c>
     304:	86 e0       	ldi	r24, 0x06	; 6
     306:	90 e0       	ldi	r25, 0x00	; 0
     308:	73 c0       	rjmp	.+230    	; 0x3f0 <dxl_rx_packet+0x176>
     30a:	f9 01       	movw	r30, r18
     30c:	ec 53       	subi	r30, 0x3C	; 60
     30e:	f5 4a       	sbci	r31, 0xA5	; 165
     310:	80 81       	ld	r24, Z
     312:	8f 3f       	cpi	r24, 0xFF	; 255
     314:	19 f4       	brne	.+6      	; 0x31c <dxl_rx_packet+0xa2>
     316:	81 81       	ldd	r24, Z+1	; 0x01
     318:	8f 3f       	cpi	r24, 0xFF	; 255
     31a:	61 f0       	breq	.+24     	; 0x334 <dxl_rx_packet+0xba>
     31c:	20 17       	cp	r18, r16
     31e:	31 07       	cpc	r19, r17
     320:	19 f4       	brne	.+6      	; 0x328 <dxl_rx_packet+0xae>
     322:	88 81       	ld	r24, Y
     324:	8f 3f       	cpi	r24, 0xFF	; 255
     326:	31 f0       	breq	.+12     	; 0x334 <dxl_rx_packet+0xba>
     328:	6f 5f       	subi	r22, 0xFF	; 255
     32a:	26 2f       	mov	r18, r22
     32c:	30 e0       	ldi	r19, 0x00	; 0
     32e:	2a 17       	cp	r18, r26
     330:	3b 07       	cpc	r19, r27
     332:	5c f3       	brlt	.-42     	; 0x30a <dxl_rx_packet+0x90>
     334:	66 23       	and	r22, r22
     336:	a1 f0       	breq	.+40     	; 0x360 <dxl_rx_packet+0xe6>
     338:	90 e0       	ldi	r25, 0x00	; 0
     33a:	42 1b       	sub	r20, r18
     33c:	53 0b       	sbc	r21, r19
     33e:	08 c0       	rjmp	.+16     	; 0x350 <dxl_rx_packet+0xd6>
     340:	ec 53       	subi	r30, 0x3C	; 60
     342:	f5 4a       	sbci	r31, 0xA5	; 165
     344:	df 01       	movw	r26, r30
     346:	a2 0f       	add	r26, r18
     348:	b3 1f       	adc	r27, r19
     34a:	8c 91       	ld	r24, X
     34c:	80 83       	st	Z, r24
     34e:	9f 5f       	subi	r25, 0xFF	; 255
     350:	e9 2f       	mov	r30, r25
     352:	f0 e0       	ldi	r31, 0x00	; 0
     354:	e4 17       	cp	r30, r20
     356:	f5 07       	cpc	r31, r21
     358:	9c f3       	brlt	.-26     	; 0x340 <dxl_rx_packet+0xc6>
     35a:	76 1b       	sub	r23, r22
     35c:	70 93 0b 5b 	sts	0x5B0B, r23
     360:	20 91 0b 5b 	lds	r18, 0x5B0B
     364:	80 91 0a 5b 	lds	r24, 0x5B0A
     368:	28 17       	cp	r18, r24
     36a:	28 f1       	brcs	.+74     	; 0x3b6 <dxl_rx_packet+0x13c>
     36c:	90 91 26 5a 	lds	r25, 0x5A26
     370:	80 91 c6 5a 	lds	r24, 0x5AC6
     374:	98 17       	cp	r25, r24
     376:	b9 f5       	brne	.+110    	; 0x3e6 <dxl_rx_packet+0x16c>
     378:	60 91 c7 5a 	lds	r22, 0x5AC7
     37c:	6c 5f       	subi	r22, 0xFC	; 252
     37e:	60 93 0a 5b 	sts	0x5B0A, r22
     382:	26 17       	cp	r18, r22
     384:	88 f4       	brcc	.+34     	; 0x3a8 <dxl_rx_packet+0x12e>
     386:	82 2f       	mov	r24, r18
     388:	90 e0       	ldi	r25, 0x00	; 0
     38a:	70 e0       	ldi	r23, 0x00	; 0
     38c:	68 1b       	sub	r22, r24
     38e:	79 0b       	sbc	r23, r25
     390:	8c 53       	subi	r24, 0x3C	; 60
     392:	95 4a       	sbci	r25, 0xA5	; 165
     394:	dd d2       	rcall	.+1466   	; 0x950 <dxl_hal_rx>
     396:	90 91 0b 5b 	lds	r25, 0x5B0B
     39a:	98 0f       	add	r25, r24
     39c:	90 93 0b 5b 	sts	0x5B0B, r25
     3a0:	80 91 0a 5b 	lds	r24, 0x5B0A
     3a4:	98 17       	cp	r25, r24
     3a6:	38 f0       	brcs	.+14     	; 0x3b6 <dxl_rx_packet+0x13c>
     3a8:	80 91 c7 5a 	lds	r24, 0x5AC7
     3ac:	a8 2f       	mov	r26, r24
     3ae:	b0 e0       	ldi	r27, 0x00	; 0
     3b0:	20 e0       	ldi	r18, 0x00	; 0
     3b2:	90 e0       	ldi	r25, 0x00	; 0
     3b4:	0c c0       	rjmp	.+24     	; 0x3ce <dxl_rx_packet+0x154>
     3b6:	85 e0       	ldi	r24, 0x05	; 5
     3b8:	90 e0       	ldi	r25, 0x00	; 0
     3ba:	90 93 b3 05 	sts	0x05B3, r25
     3be:	80 93 b2 05 	sts	0x05B2, r24
     3c2:	1e c0       	rjmp	.+60     	; 0x400 <dxl_rx_packet+0x186>
     3c4:	ec 53       	subi	r30, 0x3C	; 60
     3c6:	f5 4a       	sbci	r31, 0xA5	; 165
     3c8:	82 81       	ldd	r24, Z+2	; 0x02
     3ca:	98 0f       	add	r25, r24
     3cc:	2f 5f       	subi	r18, 0xFF	; 255
     3ce:	e2 2f       	mov	r30, r18
     3d0:	f0 e0       	ldi	r31, 0x00	; 0
     3d2:	ae 17       	cp	r26, r30
     3d4:	bf 07       	cpc	r27, r31
     3d6:	b4 f7       	brge	.-20     	; 0x3c4 <dxl_rx_packet+0x14a>
     3d8:	ac 53       	subi	r26, 0x3C	; 60
     3da:	b5 4a       	sbci	r27, 0xA5	; 165
     3dc:	90 95       	com	r25
     3de:	13 96       	adiw	r26, 0x03	; 3
     3e0:	8c 91       	ld	r24, X
     3e2:	89 17       	cp	r24, r25
     3e4:	19 f0       	breq	.+6      	; 0x3ec <dxl_rx_packet+0x172>
     3e6:	87 e0       	ldi	r24, 0x07	; 7
     3e8:	90 e0       	ldi	r25, 0x00	; 0
     3ea:	02 c0       	rjmp	.+4      	; 0x3f0 <dxl_rx_packet+0x176>
     3ec:	81 e0       	ldi	r24, 0x01	; 1
     3ee:	90 e0       	ldi	r25, 0x00	; 0
     3f0:	90 93 b3 05 	sts	0x05B3, r25
     3f4:	80 93 b2 05 	sts	0x05B2, r24
     3f8:	10 92 0d 5b 	sts	0x5B0D, r1
     3fc:	10 92 0c 5b 	sts	0x5B0C, r1
     400:	df 91       	pop	r29
     402:	cf 91       	pop	r28
     404:	1f 91       	pop	r17
     406:	0f 91       	pop	r16
     408:	08 95       	ret

0000040a <dxl_tx_packet>:
     40a:	1f 93       	push	r17
     40c:	80 91 0c 5b 	lds	r24, 0x5B0C
     410:	90 91 0d 5b 	lds	r25, 0x5B0D
     414:	01 97       	sbiw	r24, 0x01	; 1
     416:	09 f4       	brne	.+2      	; 0x41a <dxl_tx_packet+0x10>
     418:	5d c0       	rjmp	.+186    	; 0x4d4 <dxl_tx_packet+0xca>
     41a:	81 e0       	ldi	r24, 0x01	; 1
     41c:	90 e0       	ldi	r25, 0x00	; 0
     41e:	90 93 0d 5b 	sts	0x5B0D, r25
     422:	80 93 0c 5b 	sts	0x5B0C, r24
     426:	80 91 27 5a 	lds	r24, 0x5A27
     42a:	89 39       	cpi	r24, 0x99	; 153
     42c:	40 f4       	brcc	.+16     	; 0x43e <dxl_tx_packet+0x34>
     42e:	90 91 28 5a 	lds	r25, 0x5A28
     432:	89 2f       	mov	r24, r25
     434:	81 50       	subi	r24, 0x01	; 1
     436:	86 30       	cpi	r24, 0x06	; 6
     438:	28 f0       	brcs	.+10     	; 0x444 <dxl_tx_packet+0x3a>
     43a:	93 38       	cpi	r25, 0x83	; 131
     43c:	19 f0       	breq	.+6      	; 0x444 <dxl_tx_packet+0x3a>
     43e:	84 e0       	ldi	r24, 0x04	; 4
     440:	90 e0       	ldi	r25, 0x00	; 0
     442:	2f c0       	rjmp	.+94     	; 0x4a2 <dxl_tx_packet+0x98>
     444:	8f ef       	ldi	r24, 0xFF	; 255
     446:	80 93 24 5a 	sts	0x5A24, r24
     44a:	80 93 25 5a 	sts	0x5A25, r24
     44e:	80 91 27 5a 	lds	r24, 0x5A27
     452:	a8 2f       	mov	r26, r24
     454:	b0 e0       	ldi	r27, 0x00	; 0
     456:	20 e0       	ldi	r18, 0x00	; 0
     458:	90 e0       	ldi	r25, 0x00	; 0
     45a:	05 c0       	rjmp	.+10     	; 0x466 <dxl_tx_packet+0x5c>
     45c:	ec 5d       	subi	r30, 0xDC	; 220
     45e:	f5 4a       	sbci	r31, 0xA5	; 165
     460:	82 81       	ldd	r24, Z+2	; 0x02
     462:	98 0f       	add	r25, r24
     464:	2f 5f       	subi	r18, 0xFF	; 255
     466:	e2 2f       	mov	r30, r18
     468:	f0 e0       	ldi	r31, 0x00	; 0
     46a:	ae 17       	cp	r26, r30
     46c:	bf 07       	cpc	r27, r31
     46e:	b4 f7       	brge	.-20     	; 0x45c <dxl_tx_packet+0x52>
     470:	ac 5d       	subi	r26, 0xDC	; 220
     472:	b5 4a       	sbci	r27, 0xA5	; 165
     474:	90 95       	com	r25
     476:	13 96       	adiw	r26, 0x03	; 3
     478:	9c 93       	st	X, r25
     47a:	80 91 b2 05 	lds	r24, 0x05B2
     47e:	90 91 b3 05 	lds	r25, 0x05B3
     482:	06 97       	sbiw	r24, 0x06	; 6
     484:	02 97       	sbiw	r24, 0x02	; 2
     486:	08 f4       	brcc	.+2      	; 0x48a <dxl_tx_packet+0x80>
     488:	34 d1       	rcall	.+616    	; 0x6f2 <dxl_hal_clear>
     48a:	10 91 27 5a 	lds	r17, 0x5A27
     48e:	1c 5f       	subi	r17, 0xFC	; 252
     490:	84 e2       	ldi	r24, 0x24	; 36
     492:	9a e5       	ldi	r25, 0x5A	; 90
     494:	61 2f       	mov	r22, r17
     496:	70 e0       	ldi	r23, 0x00	; 0
     498:	31 d1       	rcall	.+610    	; 0x6fc <dxl_hal_tx>
     49a:	18 17       	cp	r17, r24
     49c:	59 f0       	breq	.+22     	; 0x4b4 <dxl_tx_packet+0xaa>
     49e:	82 e0       	ldi	r24, 0x02	; 2
     4a0:	90 e0       	ldi	r25, 0x00	; 0
     4a2:	90 93 b3 05 	sts	0x05B3, r25
     4a6:	80 93 b2 05 	sts	0x05B2, r24
     4aa:	10 92 0d 5b 	sts	0x5B0D, r1
     4ae:	10 92 0c 5b 	sts	0x5B0C, r1
     4b2:	10 c0       	rjmp	.+32     	; 0x4d4 <dxl_tx_packet+0xca>
     4b4:	80 91 28 5a 	lds	r24, 0x5A28
     4b8:	82 30       	cpi	r24, 0x02	; 2
     4ba:	29 f4       	brne	.+10     	; 0x4c6 <dxl_tx_packet+0xbc>
     4bc:	80 91 2a 5a 	lds	r24, 0x5A2A
     4c0:	90 e0       	ldi	r25, 0x00	; 0
     4c2:	06 96       	adiw	r24, 0x06	; 6
     4c4:	02 c0       	rjmp	.+4      	; 0x4ca <dxl_tx_packet+0xc0>
     4c6:	86 e0       	ldi	r24, 0x06	; 6
     4c8:	90 e0       	ldi	r25, 0x00	; 0
     4ca:	3c d1       	rcall	.+632    	; 0x744 <dxl_hal_set_timeout>
     4cc:	10 92 b3 05 	sts	0x05B3, r1
     4d0:	10 92 b2 05 	sts	0x05B2, r1
     4d4:	1f 91       	pop	r17
     4d6:	08 95       	ret

000004d8 <dxl_txrx_packet>:
     4d8:	98 df       	rcall	.-208    	; 0x40a <dxl_tx_packet>
     4da:	80 91 b2 05 	lds	r24, 0x05B2
     4de:	90 91 b3 05 	lds	r25, 0x05B3
     4e2:	89 2b       	or	r24, r25
     4e4:	39 f4       	brne	.+14     	; 0x4f4 <dxl_txrx_packet+0x1c>
     4e6:	c9 de       	rcall	.-622    	; 0x27a <dxl_rx_packet>
     4e8:	80 91 b2 05 	lds	r24, 0x05B2
     4ec:	90 91 b3 05 	lds	r25, 0x05B3
     4f0:	05 97       	sbiw	r24, 0x05	; 5
     4f2:	c9 f3       	breq	.-14     	; 0x4e6 <dxl_txrx_packet+0xe>
     4f4:	08 95       	ret

000004f6 <dxl_write_word>:
     4f6:	28 2f       	mov	r18, r24
     4f8:	80 91 0c 5b 	lds	r24, 0x5B0C
     4fc:	90 91 0d 5b 	lds	r25, 0x5B0D
     500:	89 2b       	or	r24, r25
     502:	89 f4       	brne	.+34     	; 0x526 <dxl_write_word+0x30>
     504:	20 93 26 5a 	sts	0x5A26, r18
     508:	83 e0       	ldi	r24, 0x03	; 3
     50a:	80 93 28 5a 	sts	0x5A28, r24
     50e:	60 93 29 5a 	sts	0x5A29, r22
     512:	ca 01       	movw	r24, r20
     514:	40 93 2a 5a 	sts	0x5A2A, r20
     518:	80 70       	andi	r24, 0x00	; 0
     51a:	90 93 2b 5a 	sts	0x5A2B, r25
     51e:	85 e0       	ldi	r24, 0x05	; 5
     520:	80 93 27 5a 	sts	0x5A27, r24
     524:	d9 cf       	rjmp	.-78     	; 0x4d8 <dxl_txrx_packet>
     526:	ff cf       	rjmp	.-2      	; 0x526 <dxl_write_word+0x30>

00000528 <dxl_read_word>:
     528:	28 2f       	mov	r18, r24
     52a:	80 91 0c 5b 	lds	r24, 0x5B0C
     52e:	90 91 0d 5b 	lds	r25, 0x5B0D
     532:	89 2b       	or	r24, r25
     534:	b1 f4       	brne	.+44     	; 0x562 <dxl_read_word+0x3a>
     536:	20 93 26 5a 	sts	0x5A26, r18
     53a:	82 e0       	ldi	r24, 0x02	; 2
     53c:	80 93 28 5a 	sts	0x5A28, r24
     540:	60 93 29 5a 	sts	0x5A29, r22
     544:	80 93 2a 5a 	sts	0x5A2A, r24
     548:	84 e0       	ldi	r24, 0x04	; 4
     54a:	80 93 27 5a 	sts	0x5A27, r24
     54e:	c4 df       	rcall	.-120    	; 0x4d8 <dxl_txrx_packet>
     550:	30 91 ca 5a 	lds	r19, 0x5ACA
     554:	20 e0       	ldi	r18, 0x00	; 0
     556:	80 91 c9 5a 	lds	r24, 0x5AC9
     55a:	28 0f       	add	r18, r24
     55c:	31 1d       	adc	r19, r1
     55e:	c9 01       	movw	r24, r18
     560:	08 95       	ret
     562:	ff cf       	rjmp	.-2      	; 0x562 <dxl_read_word+0x3a>

00000564 <dxl_write_byte>:
     564:	28 2f       	mov	r18, r24
     566:	80 91 0c 5b 	lds	r24, 0x5B0C
     56a:	90 91 0d 5b 	lds	r25, 0x5B0D
     56e:	89 2b       	or	r24, r25
     570:	69 f4       	brne	.+26     	; 0x58c <dxl_write_byte+0x28>
     572:	20 93 26 5a 	sts	0x5A26, r18
     576:	83 e0       	ldi	r24, 0x03	; 3
     578:	80 93 28 5a 	sts	0x5A28, r24
     57c:	60 93 29 5a 	sts	0x5A29, r22
     580:	40 93 2a 5a 	sts	0x5A2A, r20
     584:	84 e0       	ldi	r24, 0x04	; 4
     586:	80 93 27 5a 	sts	0x5A27, r24
     58a:	a6 cf       	rjmp	.-180    	; 0x4d8 <dxl_txrx_packet>
     58c:	ff cf       	rjmp	.-2      	; 0x58c <dxl_write_byte+0x28>

0000058e <dxl_read_byte>:
     58e:	28 2f       	mov	r18, r24
     590:	80 91 0c 5b 	lds	r24, 0x5B0C
     594:	90 91 0d 5b 	lds	r25, 0x5B0D
     598:	89 2b       	or	r24, r25
     59a:	91 f4       	brne	.+36     	; 0x5c0 <dxl_read_byte+0x32>
     59c:	20 93 26 5a 	sts	0x5A26, r18
     5a0:	82 e0       	ldi	r24, 0x02	; 2
     5a2:	80 93 28 5a 	sts	0x5A28, r24
     5a6:	60 93 29 5a 	sts	0x5A29, r22
     5aa:	81 e0       	ldi	r24, 0x01	; 1
     5ac:	80 93 2a 5a 	sts	0x5A2A, r24
     5b0:	84 e0       	ldi	r24, 0x04	; 4
     5b2:	80 93 27 5a 	sts	0x5A27, r24
     5b6:	90 df       	rcall	.-224    	; 0x4d8 <dxl_txrx_packet>
     5b8:	80 91 c9 5a 	lds	r24, 0x5AC9
     5bc:	90 e0       	ldi	r25, 0x00	; 0
     5be:	08 95       	ret
     5c0:	ff cf       	rjmp	.-2      	; 0x5c0 <dxl_read_byte+0x32>

000005c2 <dxl_ping>:
     5c2:	28 2f       	mov	r18, r24
     5c4:	80 91 0c 5b 	lds	r24, 0x5B0C
     5c8:	90 91 0d 5b 	lds	r25, 0x5B0D
     5cc:	89 2b       	or	r24, r25
     5ce:	49 f4       	brne	.+18     	; 0x5e2 <dxl_ping+0x20>
     5d0:	20 93 26 5a 	sts	0x5A26, r18
     5d4:	81 e0       	ldi	r24, 0x01	; 1
     5d6:	80 93 28 5a 	sts	0x5A28, r24
     5da:	82 e0       	ldi	r24, 0x02	; 2
     5dc:	80 93 27 5a 	sts	0x5A27, r24
     5e0:	7b cf       	rjmp	.-266    	; 0x4d8 <dxl_txrx_packet>
     5e2:	ff cf       	rjmp	.-2      	; 0x5e2 <dxl_ping+0x20>

000005e4 <dxl_terminate>:
     5e4:	85 c0       	rjmp	.+266    	; 0x6f0 <dxl_hal_close>

000005e6 <dxl_initialize>:
     5e6:	0f 93       	push	r16
     5e8:	1f 93       	push	r17
     5ea:	8c 01       	movw	r16, r24
     5ec:	6f 5f       	subi	r22, 0xFF	; 255
     5ee:	7f 4f       	sbci	r23, 0xFF	; 255
     5f0:	88 27       	eor	r24, r24
     5f2:	77 fd       	sbrc	r23, 7
     5f4:	80 95       	com	r24
     5f6:	98 2f       	mov	r25, r24
     5f8:	0e 94 53 15 	call	0x2aa6	; 0x2aa6 <__floatsisf>
     5fc:	9b 01       	movw	r18, r22
     5fe:	ac 01       	movw	r20, r24
     600:	60 e0       	ldi	r22, 0x00	; 0
     602:	74 e2       	ldi	r23, 0x24	; 36
     604:	84 ef       	ldi	r24, 0xF4	; 244
     606:	99 e4       	ldi	r25, 0x49	; 73
     608:	0e 94 b8 14 	call	0x2970	; 0x2970 <__divsf3>
     60c:	ab 01       	movw	r20, r22
     60e:	bc 01       	movw	r22, r24
     610:	c8 01       	movw	r24, r16
     612:	15 d0       	rcall	.+42     	; 0x63e <dxl_hal_open>
     614:	89 2b       	or	r24, r25
     616:	19 f4       	brne	.+6      	; 0x61e <dxl_initialize+0x38>
     618:	20 e0       	ldi	r18, 0x00	; 0
     61a:	30 e0       	ldi	r19, 0x00	; 0
     61c:	0c c0       	rjmp	.+24     	; 0x636 <dxl_initialize+0x50>
     61e:	81 e0       	ldi	r24, 0x01	; 1
     620:	90 e0       	ldi	r25, 0x00	; 0
     622:	90 93 b3 05 	sts	0x05B3, r25
     626:	80 93 b2 05 	sts	0x05B2, r24
     62a:	10 92 0d 5b 	sts	0x5B0D, r1
     62e:	10 92 0c 5b 	sts	0x5B0C, r1
     632:	21 e0       	ldi	r18, 0x01	; 1
     634:	30 e0       	ldi	r19, 0x00	; 0
     636:	c9 01       	movw	r24, r18
     638:	1f 91       	pop	r17
     63a:	0f 91       	pop	r16
     63c:	08 95       	ret

0000063e <dxl_hal_open>:
     63e:	ef 92       	push	r14
     640:	ff 92       	push	r15
     642:	0f 93       	push	r16
     644:	1f 93       	push	r17
     646:	7a 01       	movw	r14, r20
     648:	8b 01       	movw	r16, r22
     64a:	82 e4       	ldi	r24, 0x42	; 66
     64c:	80 93 c0 00 	sts	0x00C0, r24
     650:	88 e9       	ldi	r24, 0x98	; 152
     652:	80 93 c1 00 	sts	0x00C1, r24
     656:	86 e0       	ldi	r24, 0x06	; 6
     658:	80 93 c2 00 	sts	0x00C2, r24
     65c:	60 e0       	ldi	r22, 0x00	; 0
     65e:	74 e2       	ldi	r23, 0x24	; 36
     660:	84 ef       	ldi	r24, 0xF4	; 244
     662:	99 e4       	ldi	r25, 0x49	; 73
     664:	a8 01       	movw	r20, r16
     666:	97 01       	movw	r18, r14
     668:	0e 94 b8 14 	call	0x2970	; 0x2970 <__divsf3>
     66c:	0e 94 25 15 	call	0x2a4a	; 0x2a4a <__fixunssfsi>
     670:	61 50       	subi	r22, 0x01	; 1
     672:	70 40       	sbci	r23, 0x00	; 0
     674:	70 93 c5 00 	sts	0x00C5, r23
     678:	60 93 c4 00 	sts	0x00C4, r22
     67c:	60 e0       	ldi	r22, 0x00	; 0
     67e:	74 e2       	ldi	r23, 0x24	; 36
     680:	84 e7       	ldi	r24, 0x74	; 116
     682:	99 e4       	ldi	r25, 0x49	; 73
     684:	a8 01       	movw	r20, r16
     686:	97 01       	movw	r18, r14
     688:	0e 94 b8 14 	call	0x2970	; 0x2970 <__divsf3>
     68c:	20 e0       	ldi	r18, 0x00	; 0
     68e:	30 e0       	ldi	r19, 0x00	; 0
     690:	40 e4       	ldi	r20, 0x40	; 64
     692:	51 e4       	ldi	r21, 0x41	; 65
     694:	0e 94 07 16 	call	0x2c0e	; 0x2c0e <__mulsf3>
     698:	60 93 9e 5c 	sts	0x5C9E, r22
     69c:	70 93 9f 5c 	sts	0x5C9F, r23
     6a0:	80 93 a0 5c 	sts	0x5CA0, r24
     6a4:	90 93 a1 5c 	sts	0x5CA1, r25
     6a8:	20 91 9e 5c 	lds	r18, 0x5C9E
     6ac:	30 91 9f 5c 	lds	r19, 0x5C9F
     6b0:	40 91 a0 5c 	lds	r20, 0x5CA0
     6b4:	50 91 a1 5c 	lds	r21, 0x5CA1
     6b8:	60 e0       	ldi	r22, 0x00	; 0
     6ba:	70 e0       	ldi	r23, 0x00	; 0
     6bc:	8a e7       	ldi	r24, 0x7A	; 122
     6be:	93 e4       	ldi	r25, 0x43	; 67
     6c0:	0e 94 b8 14 	call	0x2970	; 0x2970 <__divsf3>
     6c4:	0e 94 25 15 	call	0x2a4a	; 0x2a4a <__fixunssfsi>
     6c8:	70 93 9d 5c 	sts	0x5C9D, r23
     6cc:	60 93 9c 5c 	sts	0x5C9C, r22
     6d0:	72 98       	cbi	0x0e, 2	; 14
     6d2:	73 9a       	sbi	0x0e, 3	; 14
     6d4:	8f ef       	ldi	r24, 0xFF	; 255
     6d6:	80 93 c6 00 	sts	0x00C6, r24
     6da:	10 92 0e 5c 	sts	0x5C0E, r1
     6de:	10 92 0f 5c 	sts	0x5C0F, r1
     6e2:	81 e0       	ldi	r24, 0x01	; 1
     6e4:	90 e0       	ldi	r25, 0x00	; 0
     6e6:	1f 91       	pop	r17
     6e8:	0f 91       	pop	r16
     6ea:	ff 90       	pop	r15
     6ec:	ef 90       	pop	r14
     6ee:	08 95       	ret

000006f0 <dxl_hal_close>:
     6f0:	08 95       	ret

000006f2 <dxl_hal_clear>:
     6f2:	80 91 0f 5c 	lds	r24, 0x5C0F
     6f6:	80 93 0e 5c 	sts	0x5C0E, r24
     6fa:	08 95       	ret

000006fc <dxl_hal_tx>:
     6fc:	ac 01       	movw	r20, r24
     6fe:	f8 94       	cli
     700:	73 98       	cbi	0x0e, 3	; 14
     702:	72 9a       	sbi	0x0e, 2	; 14
     704:	20 e0       	ldi	r18, 0x00	; 0
     706:	30 e0       	ldi	r19, 0x00	; 0
     708:	11 c0       	rjmp	.+34     	; 0x72c <dxl_hal_tx+0x30>
     70a:	80 91 c0 00 	lds	r24, 0x00C0
     70e:	85 ff       	sbrs	r24, 5
     710:	fc cf       	rjmp	.-8      	; 0x70a <dxl_hal_tx+0xe>
     712:	80 91 c0 00 	lds	r24, 0x00C0
     716:	80 64       	ori	r24, 0x40	; 64
     718:	80 93 c0 00 	sts	0x00C0, r24
     71c:	fa 01       	movw	r30, r20
     71e:	e2 0f       	add	r30, r18
     720:	f3 1f       	adc	r31, r19
     722:	80 81       	ld	r24, Z
     724:	80 93 c6 00 	sts	0x00C6, r24
     728:	2f 5f       	subi	r18, 0xFF	; 255
     72a:	3f 4f       	sbci	r19, 0xFF	; 255
     72c:	26 17       	cp	r18, r22
     72e:	37 07       	cpc	r19, r23
     730:	64 f3       	brlt	.-40     	; 0x70a <dxl_hal_tx+0xe>
     732:	80 91 c0 00 	lds	r24, 0x00C0
     736:	86 ff       	sbrs	r24, 6
     738:	fc cf       	rjmp	.-8      	; 0x732 <dxl_hal_tx+0x36>
     73a:	72 98       	cbi	0x0e, 2	; 14
     73c:	73 9a       	sbi	0x0e, 3	; 14
     73e:	78 94       	sei
     740:	c9 01       	movw	r24, r18
     742:	08 95       	ret

00000744 <dxl_hal_set_timeout>:
     744:	10 92 a5 5c 	sts	0x5CA5, r1
     748:	10 92 a4 5c 	sts	0x5CA4, r1
     74c:	20 91 9c 5c 	lds	r18, 0x5C9C
     750:	30 91 9d 5c 	lds	r19, 0x5C9D
     754:	26 5f       	subi	r18, 0xF6	; 246
     756:	3f 4f       	sbci	r19, 0xFF	; 255
     758:	28 0f       	add	r18, r24
     75a:	39 1f       	adc	r19, r25
     75c:	30 93 a3 5c 	sts	0x5CA3, r19
     760:	20 93 a2 5c 	sts	0x5CA2, r18
     764:	08 95       	ret

00000766 <dxl_hal_timeout>:
     766:	af 92       	push	r10
     768:	bf 92       	push	r11
     76a:	cf 92       	push	r12
     76c:	df 92       	push	r13
     76e:	ef 92       	push	r14
     770:	ff 92       	push	r15
     772:	0f 93       	push	r16
     774:	1f 93       	push	r17
     776:	80 91 a4 5c 	lds	r24, 0x5CA4
     77a:	90 91 a5 5c 	lds	r25, 0x5CA5
     77e:	01 96       	adiw	r24, 0x01	; 1
     780:	90 93 a5 5c 	sts	0x5CA5, r25
     784:	80 93 a4 5c 	sts	0x5CA4, r24
     788:	20 91 a4 5c 	lds	r18, 0x5CA4
     78c:	30 91 a5 5c 	lds	r19, 0x5CA5
     790:	80 91 a2 5c 	lds	r24, 0x5CA2
     794:	90 91 a3 5c 	lds	r25, 0x5CA3
     798:	82 17       	cp	r24, r18
     79a:	93 07       	cpc	r25, r19
     79c:	18 f4       	brcc	.+6      	; 0x7a4 <dxl_hal_timeout+0x3e>
     79e:	21 e0       	ldi	r18, 0x01	; 1
     7a0:	30 e0       	ldi	r19, 0x00	; 0
     7a2:	74 c0       	rjmp	.+232    	; 0x88c <dxl_hal_timeout+0x126>
     7a4:	a0 90 9e 5c 	lds	r10, 0x5C9E
     7a8:	b0 90 9f 5c 	lds	r11, 0x5C9F
     7ac:	c0 90 a0 5c 	lds	r12, 0x5CA0
     7b0:	d0 90 a1 5c 	lds	r13, 0x5CA1
 */
void
_delay_us(double __us)
{
	uint8_t __ticks;
	double __tmp = ((F_CPU) / 3e6) * __us;
     7b4:	c6 01       	movw	r24, r12
     7b6:	b5 01       	movw	r22, r10
     7b8:	2b ea       	ldi	r18, 0xAB	; 171
     7ba:	3a ea       	ldi	r19, 0xAA	; 170
     7bc:	4a ea       	ldi	r20, 0xAA	; 170
     7be:	50 e4       	ldi	r21, 0x40	; 64
     7c0:	0e 94 07 16 	call	0x2c0e	; 0x2c0e <__mulsf3>
     7c4:	7b 01       	movw	r14, r22
     7c6:	8c 01       	movw	r16, r24
	if (__tmp < 1.0)
     7c8:	20 e0       	ldi	r18, 0x00	; 0
     7ca:	30 e0       	ldi	r19, 0x00	; 0
     7cc:	40 e8       	ldi	r20, 0x80	; 128
     7ce:	5f e3       	ldi	r21, 0x3F	; 63
     7d0:	0e 94 b4 14 	call	0x2968	; 0x2968 <__cmpsf2>
     7d4:	88 23       	and	r24, r24
     7d6:	14 f4       	brge	.+4      	; 0x7dc <dxl_hal_timeout+0x76>
     7d8:	61 e0       	ldi	r22, 0x01	; 1
     7da:	54 c0       	rjmp	.+168    	; 0x884 <dxl_hal_timeout+0x11e>
		__ticks = 1;
	else if (__tmp > 255)
     7dc:	c8 01       	movw	r24, r16
     7de:	b7 01       	movw	r22, r14
     7e0:	20 e0       	ldi	r18, 0x00	; 0
     7e2:	30 e0       	ldi	r19, 0x00	; 0
     7e4:	4f e7       	ldi	r20, 0x7F	; 127
     7e6:	53 e4       	ldi	r21, 0x43	; 67
     7e8:	0e 94 03 16 	call	0x2c06	; 0x2c06 <__gesf2>
     7ec:	18 16       	cp	r1, r24
     7ee:	0c f0       	brlt	.+2      	; 0x7f2 <dxl_hal_timeout+0x8c>
     7f0:	45 c0       	rjmp	.+138    	; 0x87c <dxl_hal_timeout+0x116>
	{
		_delay_ms(__us / 1000.0);
     7f2:	c6 01       	movw	r24, r12
     7f4:	b5 01       	movw	r22, r10
     7f6:	20 e0       	ldi	r18, 0x00	; 0
     7f8:	30 e0       	ldi	r19, 0x00	; 0
     7fa:	4a e7       	ldi	r20, 0x7A	; 122
     7fc:	54 e4       	ldi	r21, 0x44	; 68
     7fe:	0e 94 b8 14 	call	0x2970	; 0x2970 <__divsf3>
     802:	5b 01       	movw	r10, r22
     804:	6c 01       	movw	r12, r24
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
     806:	20 e0       	ldi	r18, 0x00	; 0
     808:	30 e0       	ldi	r19, 0x00	; 0
     80a:	4a e7       	ldi	r20, 0x7A	; 122
     80c:	55 e4       	ldi	r21, 0x45	; 69
     80e:	0e 94 07 16 	call	0x2c0e	; 0x2c0e <__mulsf3>
     812:	7b 01       	movw	r14, r22
     814:	8c 01       	movw	r16, r24
	if (__tmp < 1.0)
     816:	20 e0       	ldi	r18, 0x00	; 0
     818:	30 e0       	ldi	r19, 0x00	; 0
     81a:	40 e8       	ldi	r20, 0x80	; 128
     81c:	5f e3       	ldi	r21, 0x3F	; 63
     81e:	0e 94 b4 14 	call	0x2968	; 0x2968 <__cmpsf2>
     822:	88 23       	and	r24, r24
     824:	1c f4       	brge	.+6      	; 0x82c <dxl_hal_timeout+0xc6>
     826:	61 e0       	ldi	r22, 0x01	; 1
     828:	70 e0       	ldi	r23, 0x00	; 0
     82a:	24 c0       	rjmp	.+72     	; 0x874 <dxl_hal_timeout+0x10e>
		__ticks = 1;
	else if (__tmp > 65535)
     82c:	c8 01       	movw	r24, r16
     82e:	b7 01       	movw	r22, r14
     830:	20 e0       	ldi	r18, 0x00	; 0
     832:	3f ef       	ldi	r19, 0xFF	; 255
     834:	4f e7       	ldi	r20, 0x7F	; 127
     836:	57 e4       	ldi	r21, 0x47	; 71
     838:	0e 94 03 16 	call	0x2c06	; 0x2c06 <__gesf2>
     83c:	18 16       	cp	r1, r24
     83e:	b4 f4       	brge	.+44     	; 0x86c <dxl_hal_timeout+0x106>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     840:	c6 01       	movw	r24, r12
     842:	b5 01       	movw	r22, r10
     844:	20 e0       	ldi	r18, 0x00	; 0
     846:	30 e0       	ldi	r19, 0x00	; 0
     848:	40 e2       	ldi	r20, 0x20	; 32
     84a:	51 e4       	ldi	r21, 0x41	; 65
     84c:	0e 94 07 16 	call	0x2c0e	; 0x2c0e <__mulsf3>
     850:	0e 94 25 15 	call	0x2a4a	; 0x2a4a <__fixunssfsi>
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
     854:	80 e9       	ldi	r24, 0x90	; 144
     856:	91 e0       	ldi	r25, 0x01	; 1
     858:	05 c0       	rjmp	.+10     	; 0x864 <dxl_hal_timeout+0xfe>
     85a:	fc 01       	movw	r30, r24
     85c:	31 97       	sbiw	r30, 0x01	; 1
     85e:	f1 f7       	brne	.-4      	; 0x85c <dxl_hal_timeout+0xf6>
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     860:	61 50       	subi	r22, 0x01	; 1
     862:	70 40       	sbci	r23, 0x00	; 0
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     864:	61 15       	cp	r22, r1
     866:	71 05       	cpc	r23, r1
     868:	c1 f7       	brne	.-16     	; 0x85a <dxl_hal_timeout+0xf4>
     86a:	0e c0       	rjmp	.+28     	; 0x888 <dxl_hal_timeout+0x122>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     86c:	c8 01       	movw	r24, r16
     86e:	b7 01       	movw	r22, r14
     870:	0e 94 25 15 	call	0x2a4a	; 0x2a4a <__fixunssfsi>
     874:	cb 01       	movw	r24, r22
     876:	01 97       	sbiw	r24, 0x01	; 1
     878:	f1 f7       	brne	.-4      	; 0x876 <dxl_hal_timeout+0x110>
     87a:	06 c0       	rjmp	.+12     	; 0x888 <dxl_hal_timeout+0x122>
	{
		_delay_ms(__us / 1000.0);
		return;
	}
	else
		__ticks = (uint8_t)__tmp;
     87c:	c8 01       	movw	r24, r16
     87e:	b7 01       	movw	r22, r14
     880:	0e 94 25 15 	call	0x2a4a	; 0x2a4a <__fixunssfsi>
    can be achieved.
*/
void
_delay_loop_1(uint8_t __count)
{
	__asm__ volatile (
     884:	6a 95       	dec	r22
     886:	f1 f7       	brne	.-4      	; 0x884 <dxl_hal_timeout+0x11e>
     888:	20 e0       	ldi	r18, 0x00	; 0
     88a:	30 e0       	ldi	r19, 0x00	; 0
     88c:	c9 01       	movw	r24, r18
     88e:	1f 91       	pop	r17
     890:	0f 91       	pop	r16
     892:	ff 90       	pop	r15
     894:	ef 90       	pop	r14
     896:	df 90       	pop	r13
     898:	cf 90       	pop	r12
     89a:	bf 90       	pop	r11
     89c:	af 90       	pop	r10
     89e:	08 95       	ret

000008a0 <dxl_hal_get_qstate>:
     8a0:	90 91 0e 5c 	lds	r25, 0x5C0E
     8a4:	80 91 0f 5c 	lds	r24, 0x5C0F
     8a8:	98 17       	cp	r25, r24
     8aa:	19 f4       	brne	.+6      	; 0x8b2 <dxl_hal_get_qstate+0x12>
     8ac:	20 e0       	ldi	r18, 0x00	; 0
     8ae:	30 e0       	ldi	r19, 0x00	; 0
     8b0:	17 c0       	rjmp	.+46     	; 0x8e0 <dxl_hal_get_qstate+0x40>
     8b2:	90 91 0e 5c 	lds	r25, 0x5C0E
     8b6:	80 91 0f 5c 	lds	r24, 0x5C0F
     8ba:	98 17       	cp	r25, r24
     8bc:	38 f4       	brcc	.+14     	; 0x8cc <dxl_hal_get_qstate+0x2c>
     8be:	80 91 0f 5c 	lds	r24, 0x5C0F
     8c2:	90 91 0e 5c 	lds	r25, 0x5C0E
     8c6:	28 2f       	mov	r18, r24
     8c8:	30 e0       	ldi	r19, 0x00	; 0
     8ca:	08 c0       	rjmp	.+16     	; 0x8dc <dxl_hal_get_qstate+0x3c>
     8cc:	80 91 0f 5c 	lds	r24, 0x5C0F
     8d0:	90 91 0e 5c 	lds	r25, 0x5C0E
     8d4:	28 2f       	mov	r18, r24
     8d6:	30 e0       	ldi	r19, 0x00	; 0
     8d8:	20 50       	subi	r18, 0x00	; 0
     8da:	3f 4f       	sbci	r19, 0xFF	; 255
     8dc:	29 1b       	sub	r18, r25
     8de:	31 09       	sbc	r19, r1
     8e0:	c9 01       	movw	r24, r18
     8e2:	08 95       	ret

000008e4 <dxl_hal_put_queue>:
     8e4:	1f 93       	push	r17
     8e6:	18 2f       	mov	r17, r24
     8e8:	db df       	rcall	.-74     	; 0x8a0 <dxl_hal_get_qstate>
     8ea:	8f 3f       	cpi	r24, 0xFF	; 255
     8ec:	91 05       	cpc	r25, r1
     8ee:	91 f0       	breq	.+36     	; 0x914 <dxl_hal_put_queue+0x30>
     8f0:	e0 91 0f 5c 	lds	r30, 0x5C0F
     8f4:	f0 e0       	ldi	r31, 0x00	; 0
     8f6:	e2 5f       	subi	r30, 0xF2	; 242
     8f8:	f4 4a       	sbci	r31, 0xA4	; 164
     8fa:	10 83       	st	Z, r17
     8fc:	80 91 0f 5c 	lds	r24, 0x5C0F
     900:	8f 3f       	cpi	r24, 0xFF	; 255
     902:	19 f4       	brne	.+6      	; 0x90a <dxl_hal_put_queue+0x26>
     904:	10 92 0f 5c 	sts	0x5C0F, r1
     908:	05 c0       	rjmp	.+10     	; 0x914 <dxl_hal_put_queue+0x30>
     90a:	80 91 0f 5c 	lds	r24, 0x5C0F
     90e:	8f 5f       	subi	r24, 0xFF	; 255
     910:	80 93 0f 5c 	sts	0x5C0F, r24
     914:	1f 91       	pop	r17
     916:	08 95       	ret

00000918 <dxl_hal_get_queue>:
     918:	90 91 0e 5c 	lds	r25, 0x5C0E
     91c:	80 91 0f 5c 	lds	r24, 0x5C0F
     920:	98 17       	cp	r25, r24
     922:	11 f4       	brne	.+4      	; 0x928 <dxl_hal_get_queue+0x10>
     924:	ef ef       	ldi	r30, 0xFF	; 255
     926:	12 c0       	rjmp	.+36     	; 0x94c <dxl_hal_get_queue+0x34>
     928:	e0 91 0e 5c 	lds	r30, 0x5C0E
     92c:	f0 e0       	ldi	r31, 0x00	; 0
     92e:	e2 5f       	subi	r30, 0xF2	; 242
     930:	f4 4a       	sbci	r31, 0xA4	; 164
     932:	e0 81       	ld	r30, Z
     934:	80 91 0e 5c 	lds	r24, 0x5C0E
     938:	8f 3f       	cpi	r24, 0xFF	; 255
     93a:	19 f4       	brne	.+6      	; 0x942 <dxl_hal_get_queue+0x2a>
     93c:	10 92 0e 5c 	sts	0x5C0E, r1
     940:	05 c0       	rjmp	.+10     	; 0x94c <dxl_hal_get_queue+0x34>
     942:	80 91 0e 5c 	lds	r24, 0x5C0E
     946:	8f 5f       	subi	r24, 0xFF	; 255
     948:	80 93 0e 5c 	sts	0x5C0E, r24
     94c:	8e 2f       	mov	r24, r30
     94e:	08 95       	ret

00000950 <dxl_hal_rx>:
     950:	ef 92       	push	r14
     952:	ff 92       	push	r15
     954:	0f 93       	push	r16
     956:	1f 93       	push	r17
     958:	cf 93       	push	r28
     95a:	df 93       	push	r29
     95c:	7c 01       	movw	r14, r24
     95e:	eb 01       	movw	r28, r22
     960:	90 91 0e 5c 	lds	r25, 0x5C0E
     964:	80 91 0f 5c 	lds	r24, 0x5C0F
     968:	98 17       	cp	r25, r24
     96a:	19 f4       	brne	.+6      	; 0x972 <dxl_hal_rx+0x22>
     96c:	00 e0       	ldi	r16, 0x00	; 0
     96e:	10 e0       	ldi	r17, 0x00	; 0
     970:	12 c0       	rjmp	.+36     	; 0x996 <dxl_hal_rx+0x46>
     972:	96 df       	rcall	.-212    	; 0x8a0 <dxl_hal_get_qstate>
     974:	8c 01       	movw	r16, r24
     976:	c8 17       	cp	r28, r24
     978:	d9 07       	cpc	r29, r25
     97a:	0c f4       	brge	.+2      	; 0x97e <dxl_hal_rx+0x2e>
     97c:	8e 01       	movw	r16, r28
     97e:	c0 e0       	ldi	r28, 0x00	; 0
     980:	d0 e0       	ldi	r29, 0x00	; 0
     982:	06 c0       	rjmp	.+12     	; 0x990 <dxl_hal_rx+0x40>
     984:	c9 df       	rcall	.-110    	; 0x918 <dxl_hal_get_queue>
     986:	f7 01       	movw	r30, r14
     988:	ec 0f       	add	r30, r28
     98a:	fd 1f       	adc	r31, r29
     98c:	80 83       	st	Z, r24
     98e:	21 96       	adiw	r28, 0x01	; 1
     990:	c0 17       	cp	r28, r16
     992:	d1 07       	cpc	r29, r17
     994:	bc f3       	brlt	.-18     	; 0x984 <dxl_hal_rx+0x34>
     996:	c8 01       	movw	r24, r16
     998:	df 91       	pop	r29
     99a:	cf 91       	pop	r28
     99c:	1f 91       	pop	r17
     99e:	0f 91       	pop	r16
     9a0:	ff 90       	pop	r15
     9a2:	ef 90       	pop	r14
     9a4:	08 95       	ret

000009a6 <__vector_25>:
     9a6:	1f 92       	push	r1
     9a8:	0f 92       	push	r0
     9aa:	0f b6       	in	r0, 0x3f	; 63
     9ac:	0f 92       	push	r0
     9ae:	0b b6       	in	r0, 0x3b	; 59
     9b0:	0f 92       	push	r0
     9b2:	11 24       	eor	r1, r1
     9b4:	2f 93       	push	r18
     9b6:	3f 93       	push	r19
     9b8:	4f 93       	push	r20
     9ba:	5f 93       	push	r21
     9bc:	6f 93       	push	r22
     9be:	7f 93       	push	r23
     9c0:	8f 93       	push	r24
     9c2:	9f 93       	push	r25
     9c4:	af 93       	push	r26
     9c6:	bf 93       	push	r27
     9c8:	ef 93       	push	r30
     9ca:	ff 93       	push	r31
     9cc:	80 91 c6 00 	lds	r24, 0x00C6
     9d0:	89 df       	rcall	.-238    	; 0x8e4 <dxl_hal_put_queue>
     9d2:	ff 91       	pop	r31
     9d4:	ef 91       	pop	r30
     9d6:	bf 91       	pop	r27
     9d8:	af 91       	pop	r26
     9da:	9f 91       	pop	r25
     9dc:	8f 91       	pop	r24
     9de:	7f 91       	pop	r23
     9e0:	6f 91       	pop	r22
     9e2:	5f 91       	pop	r21
     9e4:	4f 91       	pop	r20
     9e6:	3f 91       	pop	r19
     9e8:	2f 91       	pop	r18
     9ea:	0f 90       	pop	r0
     9ec:	0b be       	out	0x3b, r0	; 59
     9ee:	0f 90       	pop	r0
     9f0:	0f be       	out	0x3f, r0	; 63
     9f2:	0f 90       	pop	r0
     9f4:	1f 90       	pop	r1
     9f6:	18 95       	reti

000009f8 <serial_write>:
     9f8:	ac 01       	movw	r20, r24
     9fa:	20 e0       	ldi	r18, 0x00	; 0
     9fc:	30 e0       	ldi	r19, 0x00	; 0
     9fe:	0c c0       	rjmp	.+24     	; 0xa18 <serial_write+0x20>
     a00:	80 91 c8 00 	lds	r24, 0x00C8
     a04:	85 ff       	sbrs	r24, 5
     a06:	fc cf       	rjmp	.-8      	; 0xa00 <serial_write+0x8>
     a08:	fa 01       	movw	r30, r20
     a0a:	e2 0f       	add	r30, r18
     a0c:	f3 1f       	adc	r31, r19
     a0e:	80 81       	ld	r24, Z
     a10:	80 93 ce 00 	sts	0x00CE, r24
     a14:	2f 5f       	subi	r18, 0xFF	; 255
     a16:	3f 4f       	sbci	r19, 0xFF	; 255
     a18:	26 17       	cp	r18, r22
     a1a:	37 07       	cpc	r19, r23
     a1c:	8c f3       	brlt	.-30     	; 0xa00 <serial_write+0x8>
     a1e:	08 95       	ret

00000a20 <serial_read>:
     a20:	dc 01       	movw	r26, r24
     a22:	90 91 90 5c 	lds	r25, 0x5C90
     a26:	80 91 91 5c 	lds	r24, 0x5C91
     a2a:	98 17       	cp	r25, r24
     a2c:	11 f4       	brne	.+4      	; 0xa32 <serial_read+0x12>
     a2e:	80 e0       	ldi	r24, 0x00	; 0
     a30:	08 95       	ret
     a32:	90 91 90 5c 	lds	r25, 0x5C90
     a36:	80 91 91 5c 	lds	r24, 0x5C91
     a3a:	98 17       	cp	r25, r24
     a3c:	19 f4       	brne	.+6      	; 0xa44 <serial_read+0x24>
     a3e:	20 e0       	ldi	r18, 0x00	; 0
     a40:	30 e0       	ldi	r19, 0x00	; 0
     a42:	17 c0       	rjmp	.+46     	; 0xa72 <serial_read+0x52>
     a44:	90 91 90 5c 	lds	r25, 0x5C90
     a48:	80 91 91 5c 	lds	r24, 0x5C91
     a4c:	98 17       	cp	r25, r24
     a4e:	38 f4       	brcc	.+14     	; 0xa5e <serial_read+0x3e>
     a50:	80 91 91 5c 	lds	r24, 0x5C91
     a54:	90 91 90 5c 	lds	r25, 0x5C90
     a58:	28 2f       	mov	r18, r24
     a5a:	30 e0       	ldi	r19, 0x00	; 0
     a5c:	08 c0       	rjmp	.+16     	; 0xa6e <serial_read+0x4e>
     a5e:	80 91 91 5c 	lds	r24, 0x5C91
     a62:	90 91 90 5c 	lds	r25, 0x5C90
     a66:	28 2f       	mov	r18, r24
     a68:	30 e0       	ldi	r19, 0x00	; 0
     a6a:	20 58       	subi	r18, 0x80	; 128
     a6c:	3f 4f       	sbci	r19, 0xFF	; 255
     a6e:	29 1b       	sub	r18, r25
     a70:	31 09       	sbc	r19, r1
     a72:	a9 01       	movw	r20, r18
     a74:	62 17       	cp	r22, r18
     a76:	73 07       	cpc	r23, r19
     a78:	0c f4       	brge	.+2      	; 0xa7c <serial_read+0x5c>
     a7a:	ab 01       	movw	r20, r22
     a7c:	20 e0       	ldi	r18, 0x00	; 0
     a7e:	30 e0       	ldi	r19, 0x00	; 0
     a80:	20 c0       	rjmp	.+64     	; 0xac2 <serial_read+0xa2>
     a82:	90 91 90 5c 	lds	r25, 0x5C90
     a86:	80 91 91 5c 	lds	r24, 0x5C91
     a8a:	98 17       	cp	r25, r24
     a8c:	11 f4       	brne	.+4      	; 0xa92 <serial_read+0x72>
     a8e:	9f ef       	ldi	r25, 0xFF	; 255
     a90:	12 c0       	rjmp	.+36     	; 0xab6 <serial_read+0x96>
     a92:	e0 91 90 5c 	lds	r30, 0x5C90
     a96:	f0 e0       	ldi	r31, 0x00	; 0
     a98:	e0 5f       	subi	r30, 0xF0	; 240
     a9a:	f3 4a       	sbci	r31, 0xA3	; 163
     a9c:	90 81       	ld	r25, Z
     a9e:	80 91 90 5c 	lds	r24, 0x5C90
     aa2:	8f 37       	cpi	r24, 0x7F	; 127
     aa4:	19 f4       	brne	.+6      	; 0xaac <serial_read+0x8c>
     aa6:	10 92 90 5c 	sts	0x5C90, r1
     aaa:	05 c0       	rjmp	.+10     	; 0xab6 <serial_read+0x96>
     aac:	80 91 90 5c 	lds	r24, 0x5C90
     ab0:	8f 5f       	subi	r24, 0xFF	; 255
     ab2:	80 93 90 5c 	sts	0x5C90, r24
     ab6:	fd 01       	movw	r30, r26
     ab8:	e2 0f       	add	r30, r18
     aba:	f3 1f       	adc	r31, r19
     abc:	90 83       	st	Z, r25
     abe:	2f 5f       	subi	r18, 0xFF	; 255
     ac0:	3f 4f       	sbci	r19, 0xFF	; 255
     ac2:	24 17       	cp	r18, r20
     ac4:	35 07       	cpc	r19, r21
     ac6:	ec f2       	brlt	.-70     	; 0xa82 <serial_read+0x62>
     ac8:	84 2f       	mov	r24, r20
     aca:	08 95       	ret

00000acc <serial_get_qstate>:
     acc:	90 91 90 5c 	lds	r25, 0x5C90
     ad0:	80 91 91 5c 	lds	r24, 0x5C91
     ad4:	98 17       	cp	r25, r24
     ad6:	19 f4       	brne	.+6      	; 0xade <serial_get_qstate+0x12>
     ad8:	20 e0       	ldi	r18, 0x00	; 0
     ada:	30 e0       	ldi	r19, 0x00	; 0
     adc:	17 c0       	rjmp	.+46     	; 0xb0c <serial_get_qstate+0x40>
     ade:	90 91 90 5c 	lds	r25, 0x5C90
     ae2:	80 91 91 5c 	lds	r24, 0x5C91
     ae6:	98 17       	cp	r25, r24
     ae8:	38 f4       	brcc	.+14     	; 0xaf8 <serial_get_qstate+0x2c>
     aea:	80 91 91 5c 	lds	r24, 0x5C91
     aee:	90 91 90 5c 	lds	r25, 0x5C90
     af2:	28 2f       	mov	r18, r24
     af4:	30 e0       	ldi	r19, 0x00	; 0
     af6:	08 c0       	rjmp	.+16     	; 0xb08 <serial_get_qstate+0x3c>
     af8:	80 91 91 5c 	lds	r24, 0x5C91
     afc:	90 91 90 5c 	lds	r25, 0x5C90
     b00:	28 2f       	mov	r18, r24
     b02:	30 e0       	ldi	r19, 0x00	; 0
     b04:	20 58       	subi	r18, 0x80	; 128
     b06:	3f 4f       	sbci	r19, 0xFF	; 255
     b08:	29 1b       	sub	r18, r25
     b0a:	31 09       	sbc	r19, r1
     b0c:	c9 01       	movw	r24, r18
     b0e:	08 95       	ret

00000b10 <serial_put_queue>:
     b10:	48 2f       	mov	r20, r24
     b12:	90 91 90 5c 	lds	r25, 0x5C90
     b16:	80 91 91 5c 	lds	r24, 0x5C91
     b1a:	98 17       	cp	r25, r24
     b1c:	d1 f0       	breq	.+52     	; 0xb52 <serial_put_queue+0x42>
     b1e:	90 91 90 5c 	lds	r25, 0x5C90
     b22:	80 91 91 5c 	lds	r24, 0x5C91
     b26:	98 17       	cp	r25, r24
     b28:	38 f4       	brcc	.+14     	; 0xb38 <serial_put_queue+0x28>
     b2a:	80 91 91 5c 	lds	r24, 0x5C91
     b2e:	90 91 90 5c 	lds	r25, 0x5C90
     b32:	28 2f       	mov	r18, r24
     b34:	30 e0       	ldi	r19, 0x00	; 0
     b36:	08 c0       	rjmp	.+16     	; 0xb48 <serial_put_queue+0x38>
     b38:	80 91 91 5c 	lds	r24, 0x5C91
     b3c:	90 91 90 5c 	lds	r25, 0x5C90
     b40:	28 2f       	mov	r18, r24
     b42:	30 e0       	ldi	r19, 0x00	; 0
     b44:	20 58       	subi	r18, 0x80	; 128
     b46:	3f 4f       	sbci	r19, 0xFF	; 255
     b48:	29 1b       	sub	r18, r25
     b4a:	31 09       	sbc	r19, r1
     b4c:	2f 37       	cpi	r18, 0x7F	; 127
     b4e:	31 05       	cpc	r19, r1
     b50:	91 f0       	breq	.+36     	; 0xb76 <serial_put_queue+0x66>
     b52:	e0 91 91 5c 	lds	r30, 0x5C91
     b56:	f0 e0       	ldi	r31, 0x00	; 0
     b58:	e0 5f       	subi	r30, 0xF0	; 240
     b5a:	f3 4a       	sbci	r31, 0xA3	; 163
     b5c:	40 83       	st	Z, r20
     b5e:	80 91 91 5c 	lds	r24, 0x5C91
     b62:	8f 37       	cpi	r24, 0x7F	; 127
     b64:	19 f4       	brne	.+6      	; 0xb6c <serial_put_queue+0x5c>
     b66:	10 92 91 5c 	sts	0x5C91, r1
     b6a:	08 95       	ret
     b6c:	80 91 91 5c 	lds	r24, 0x5C91
     b70:	8f 5f       	subi	r24, 0xFF	; 255
     b72:	80 93 91 5c 	sts	0x5C91, r24
     b76:	08 95       	ret

00000b78 <serial_get_queue>:
     b78:	90 91 90 5c 	lds	r25, 0x5C90
     b7c:	80 91 91 5c 	lds	r24, 0x5C91
     b80:	98 17       	cp	r25, r24
     b82:	11 f4       	brne	.+4      	; 0xb88 <serial_get_queue+0x10>
     b84:	ef ef       	ldi	r30, 0xFF	; 255
     b86:	12 c0       	rjmp	.+36     	; 0xbac <serial_get_queue+0x34>
     b88:	e0 91 90 5c 	lds	r30, 0x5C90
     b8c:	f0 e0       	ldi	r31, 0x00	; 0
     b8e:	e0 5f       	subi	r30, 0xF0	; 240
     b90:	f3 4a       	sbci	r31, 0xA3	; 163
     b92:	e0 81       	ld	r30, Z
     b94:	80 91 90 5c 	lds	r24, 0x5C90
     b98:	8f 37       	cpi	r24, 0x7F	; 127
     b9a:	19 f4       	brne	.+6      	; 0xba2 <serial_get_queue+0x2a>
     b9c:	10 92 90 5c 	sts	0x5C90, r1
     ba0:	05 c0       	rjmp	.+10     	; 0xbac <serial_get_queue+0x34>
     ba2:	80 91 90 5c 	lds	r24, 0x5C90
     ba6:	8f 5f       	subi	r24, 0xFF	; 255
     ba8:	80 93 90 5c 	sts	0x5C90, r24
     bac:	8e 2f       	mov	r24, r30
     bae:	08 95       	ret

00000bb0 <__vector_36>:
     bb0:	1f 92       	push	r1
     bb2:	0f 92       	push	r0
     bb4:	0f b6       	in	r0, 0x3f	; 63
     bb6:	0f 92       	push	r0
     bb8:	0b b6       	in	r0, 0x3b	; 59
     bba:	0f 92       	push	r0
     bbc:	11 24       	eor	r1, r1
     bbe:	2f 93       	push	r18
     bc0:	3f 93       	push	r19
     bc2:	4f 93       	push	r20
     bc4:	5f 93       	push	r21
     bc6:	6f 93       	push	r22
     bc8:	7f 93       	push	r23
     bca:	8f 93       	push	r24
     bcc:	9f 93       	push	r25
     bce:	af 93       	push	r26
     bd0:	bf 93       	push	r27
     bd2:	ef 93       	push	r30
     bd4:	ff 93       	push	r31
     bd6:	80 91 ce 00 	lds	r24, 0x00CE
     bda:	9a df       	rcall	.-204    	; 0xb10 <serial_put_queue>
     bdc:	ff 91       	pop	r31
     bde:	ef 91       	pop	r30
     be0:	bf 91       	pop	r27
     be2:	af 91       	pop	r26
     be4:	9f 91       	pop	r25
     be6:	8f 91       	pop	r24
     be8:	7f 91       	pop	r23
     bea:	6f 91       	pop	r22
     bec:	5f 91       	pop	r21
     bee:	4f 91       	pop	r20
     bf0:	3f 91       	pop	r19
     bf2:	2f 91       	pop	r18
     bf4:	0f 90       	pop	r0
     bf6:	0b be       	out	0x3b, r0	; 59
     bf8:	0f 90       	pop	r0
     bfa:	0f be       	out	0x3f, r0	; 63
     bfc:	0f 90       	pop	r0
     bfe:	1f 90       	pop	r1
     c00:	18 95       	reti

00000c02 <std_putchar>:
     c02:	df 93       	push	r29
     c04:	cf 93       	push	r28
     c06:	0f 92       	push	r0
     c08:	0f 92       	push	r0
     c0a:	cd b7       	in	r28, 0x3d	; 61
     c0c:	de b7       	in	r29, 0x3e	; 62
     c0e:	98 2f       	mov	r25, r24
     c10:	8a 30       	cpi	r24, 0x0A	; 10
     c12:	99 f4       	brne	.+38     	; 0xc3a <std_putchar+0x38>
     c14:	8d e0       	ldi	r24, 0x0D	; 13
     c16:	89 83       	std	Y+1, r24	; 0x01
     c18:	9a 83       	std	Y+2, r25	; 0x02
     c1a:	fe 01       	movw	r30, r28
     c1c:	31 96       	adiw	r30, 0x01	; 1
     c1e:	9e 01       	movw	r18, r28
     c20:	2d 5f       	subi	r18, 0xFD	; 253
     c22:	3f 4f       	sbci	r19, 0xFF	; 255
     c24:	80 91 c8 00 	lds	r24, 0x00C8
     c28:	85 ff       	sbrs	r24, 5
     c2a:	fc cf       	rjmp	.-8      	; 0xc24 <std_putchar+0x22>
     c2c:	81 91       	ld	r24, Z+
     c2e:	80 93 ce 00 	sts	0x00CE, r24
     c32:	e2 17       	cp	r30, r18
     c34:	f3 07       	cpc	r31, r19
     c36:	b1 f7       	brne	.-20     	; 0xc24 <std_putchar+0x22>
     c38:	06 c0       	rjmp	.+12     	; 0xc46 <std_putchar+0x44>
     c3a:	80 91 c8 00 	lds	r24, 0x00C8
     c3e:	85 ff       	sbrs	r24, 5
     c40:	fc cf       	rjmp	.-8      	; 0xc3a <std_putchar+0x38>
     c42:	90 93 ce 00 	sts	0x00CE, r25
     c46:	80 e0       	ldi	r24, 0x00	; 0
     c48:	90 e0       	ldi	r25, 0x00	; 0
     c4a:	0f 90       	pop	r0
     c4c:	0f 90       	pop	r0
     c4e:	cf 91       	pop	r28
     c50:	df 91       	pop	r29
     c52:	08 95       	ret

00000c54 <std_getchar>:
     c54:	90 91 90 5c 	lds	r25, 0x5C90
     c58:	80 91 91 5c 	lds	r24, 0x5C91
     c5c:	98 17       	cp	r25, r24
     c5e:	d1 f3       	breq	.-12     	; 0xc54 <std_getchar>
     c60:	90 91 90 5c 	lds	r25, 0x5C90
     c64:	80 91 91 5c 	lds	r24, 0x5C91
     c68:	98 17       	cp	r25, r24
     c6a:	38 f4       	brcc	.+14     	; 0xc7a <std_getchar+0x26>
     c6c:	80 91 91 5c 	lds	r24, 0x5C91
     c70:	90 91 90 5c 	lds	r25, 0x5C90
     c74:	28 2f       	mov	r18, r24
     c76:	30 e0       	ldi	r19, 0x00	; 0
     c78:	08 c0       	rjmp	.+16     	; 0xc8a <std_getchar+0x36>
     c7a:	80 91 91 5c 	lds	r24, 0x5C91
     c7e:	90 91 90 5c 	lds	r25, 0x5C90
     c82:	28 2f       	mov	r18, r24
     c84:	30 e0       	ldi	r19, 0x00	; 0
     c86:	20 58       	subi	r18, 0x80	; 128
     c88:	3f 4f       	sbci	r19, 0xFF	; 255
     c8a:	29 1b       	sub	r18, r25
     c8c:	31 09       	sbc	r19, r1
     c8e:	23 2b       	or	r18, r19
     c90:	09 f3       	breq	.-62     	; 0xc54 <std_getchar>
     c92:	90 91 90 5c 	lds	r25, 0x5C90
     c96:	80 91 91 5c 	lds	r24, 0x5C91
     c9a:	98 17       	cp	r25, r24
     c9c:	11 f4       	brne	.+4      	; 0xca2 <std_getchar+0x4e>
     c9e:	ef ef       	ldi	r30, 0xFF	; 255
     ca0:	15 c0       	rjmp	.+42     	; 0xccc <std_getchar+0x78>
     ca2:	e0 91 90 5c 	lds	r30, 0x5C90
     ca6:	f0 e0       	ldi	r31, 0x00	; 0
     ca8:	e0 5f       	subi	r30, 0xF0	; 240
     caa:	f3 4a       	sbci	r31, 0xA3	; 163
     cac:	e0 81       	ld	r30, Z
     cae:	80 91 90 5c 	lds	r24, 0x5C90
     cb2:	8f 37       	cpi	r24, 0x7F	; 127
     cb4:	19 f4       	brne	.+6      	; 0xcbc <std_getchar+0x68>
     cb6:	10 92 90 5c 	sts	0x5C90, r1
     cba:	05 c0       	rjmp	.+10     	; 0xcc6 <std_getchar+0x72>
     cbc:	80 91 90 5c 	lds	r24, 0x5C90
     cc0:	8f 5f       	subi	r24, 0xFF	; 255
     cc2:	80 93 90 5c 	sts	0x5C90, r24
     cc6:	ed 30       	cpi	r30, 0x0D	; 13
     cc8:	09 f4       	brne	.+2      	; 0xccc <std_getchar+0x78>
     cca:	ea e0       	ldi	r30, 0x0A	; 10
     ccc:	8e 2f       	mov	r24, r30
     cce:	90 e0       	ldi	r25, 0x00	; 0
     cd0:	08 95       	ret

00000cd2 <serial_initialize>:
     cd2:	0e 94 53 15 	call	0x2aa6	; 0x2aa6 <__floatsisf>
     cd6:	9b 01       	movw	r18, r22
     cd8:	ac 01       	movw	r20, r24
     cda:	60 e0       	ldi	r22, 0x00	; 0
     cdc:	74 e2       	ldi	r23, 0x24	; 36
     cde:	84 ef       	ldi	r24, 0xF4	; 244
     ce0:	99 e4       	ldi	r25, 0x49	; 73
     ce2:	0e 94 b8 14 	call	0x2970	; 0x2970 <__divsf3>
     ce6:	0e 94 25 15 	call	0x2a4a	; 0x2a4a <__fixunssfsi>
     cea:	61 50       	subi	r22, 0x01	; 1
     cec:	70 40       	sbci	r23, 0x00	; 0
     cee:	22 e4       	ldi	r18, 0x42	; 66
     cf0:	20 93 c8 00 	sts	0x00C8, r18
     cf4:	28 e9       	ldi	r18, 0x98	; 152
     cf6:	20 93 c9 00 	sts	0x00C9, r18
     cfa:	26 e0       	ldi	r18, 0x06	; 6
     cfc:	20 93 ca 00 	sts	0x00CA, r18
     d00:	2f ef       	ldi	r18, 0xFF	; 255
     d02:	20 93 ce 00 	sts	0x00CE, r18
     d06:	10 92 90 5c 	sts	0x5C90, r1
     d0a:	10 92 91 5c 	sts	0x5C91, r1
     d0e:	27 2f       	mov	r18, r23
     d10:	33 27       	eor	r19, r19
     d12:	27 fd       	sbrc	r18, 7
     d14:	3a 95       	dec	r19
     d16:	20 93 cd 00 	sts	0x00CD, r18
     d1a:	60 93 cc 00 	sts	0x00CC, r22
     d1e:	72 98       	cbi	0x0e, 2	; 14
     d20:	73 9a       	sbi	0x0e, 3	; 14
     d22:	81 e0       	ldi	r24, 0x01	; 1
     d24:	96 e0       	ldi	r25, 0x06	; 6
     d26:	6a e2       	ldi	r22, 0x2A	; 42
     d28:	76 e0       	ldi	r23, 0x06	; 6
     d2a:	0e 94 ef 1a 	call	0x35de	; 0x35de <fdevopen>
     d2e:	90 93 93 5c 	sts	0x5C93, r25
     d32:	80 93 92 5c 	sts	0x5C92, r24
     d36:	08 95       	ret

00000d38 <parseAll>:
	return 1;
}

//Begin general function declarations

int parseAll(char dataIn){
     d38:	ef 92       	push	r14
     d3a:	ff 92       	push	r15
     d3c:	0f 93       	push	r16
     d3e:	1f 93       	push	r17
     d40:	68 2f       	mov	r22, r24
	int parseError = 0;
	
	switch (parseState){
     d42:	80 91 ba 05 	lds	r24, 0x05BA
     d46:	90 91 bb 05 	lds	r25, 0x05BB
     d4a:	82 30       	cpi	r24, 0x02	; 2
     d4c:	91 05       	cpc	r25, r1
     d4e:	09 f4       	brne	.+2      	; 0xd52 <parseAll+0x1a>
     d50:	67 c0       	rjmp	.+206    	; 0xe20 <parseAll+0xe8>
     d52:	83 30       	cpi	r24, 0x03	; 3
     d54:	91 05       	cpc	r25, r1
     d56:	24 f4       	brge	.+8      	; 0xd60 <parseAll+0x28>
     d58:	01 97       	sbiw	r24, 0x01	; 1
     d5a:	09 f0       	breq	.+2      	; 0xd5e <parseAll+0x26>
     d5c:	f8 c1       	rjmp	.+1008   	; 0x114e <parseAll+0x416>
     d5e:	08 c0       	rjmp	.+16     	; 0xd70 <parseAll+0x38>
     d60:	83 30       	cpi	r24, 0x03	; 3
     d62:	91 05       	cpc	r25, r1
     d64:	09 f4       	brne	.+2      	; 0xd68 <parseAll+0x30>
     d66:	e2 c0       	rjmp	.+452    	; 0xf2c <parseAll+0x1f4>
     d68:	04 97       	sbiw	r24, 0x04	; 4
     d6a:	09 f0       	breq	.+2      	; 0xd6e <parseAll+0x36>
     d6c:	f0 c1       	rjmp	.+992    	; 0x114e <parseAll+0x416>
     d6e:	64 c1       	rjmp	.+712    	; 0x1038 <parseAll+0x300>
		
		case WATCH_BEGIN:
			if(dataIn == '$'){
     d70:	64 32       	cpi	r22, 0x24	; 36
     d72:	69 f5       	brne	.+90     	; 0xdce <parseAll+0x96>
				parseState = WATCH_X;
     d74:	82 e0       	ldi	r24, 0x02	; 2
     d76:	90 e0       	ldi	r25, 0x00	; 0
     d78:	90 93 bb 05 	sts	0x05BB, r25
     d7c:	80 93 ba 05 	sts	0x05BA, r24
				xBuffer = 0;
     d80:	80 e0       	ldi	r24, 0x00	; 0
     d82:	90 e0       	ldi	r25, 0x00	; 0
     d84:	a0 e0       	ldi	r26, 0x00	; 0
     d86:	b0 e0       	ldi	r27, 0x00	; 0
     d88:	80 93 94 5c 	sts	0x5C94, r24
     d8c:	90 93 95 5c 	sts	0x5C95, r25
     d90:	a0 93 96 5c 	sts	0x5C96, r26
     d94:	b0 93 97 5c 	sts	0x5C97, r27
				yBuffer = 0;
     d98:	80 93 98 5c 	sts	0x5C98, r24
     d9c:	90 93 99 5c 	sts	0x5C99, r25
     da0:	a0 93 9a 5c 	sts	0x5C9A, r26
     da4:	b0 93 9b 5c 	sts	0x5C9B, r27
				zBuffer = 0;
     da8:	80 93 be 05 	sts	0x05BE, r24
     dac:	90 93 bf 05 	sts	0x05BF, r25
     db0:	a0 93 c0 05 	sts	0x05C0, r26
     db4:	b0 93 c1 05 	sts	0x05C1, r27
				signState = POSITIVE;	
     db8:	87 e0       	ldi	r24, 0x07	; 7
     dba:	90 e0       	ldi	r25, 0x00	; 0
     dbc:	90 93 c3 05 	sts	0x05C3, r25
     dc0:	80 93 c2 05 	sts	0x05C2, r24
				printf("\nReading Packet...\n");
     dc4:	81 eb       	ldi	r24, 0xB1	; 177
     dc6:	93 e0       	ldi	r25, 0x03	; 3
     dc8:	0e 94 fc 1b 	call	0x37f8	; 0x37f8 <puts>
     dcc:	c0 c1       	rjmp	.+896    	; 0x114e <parseAll+0x416>
			}
			else if((dataIn == 'y') && (dataState == CONFIRM_DATA)){
     dce:	69 37       	cpi	r22, 0x79	; 121
     dd0:	69 f4       	brne	.+26     	; 0xdec <parseAll+0xb4>
     dd2:	80 91 bc 05 	lds	r24, 0x05BC
     dd6:	90 91 bd 05 	lds	r25, 0x05BD
     dda:	09 97       	sbiw	r24, 0x09	; 9
     ddc:	d1 f4       	brne	.+52     	; 0xe12 <parseAll+0xda>
				dataState = SEND_DATA;
     dde:	8a e0       	ldi	r24, 0x0A	; 10
     de0:	90 e0       	ldi	r25, 0x00	; 0
     de2:	90 93 bd 05 	sts	0x05BD, r25
     de6:	80 93 bc 05 	sts	0x05BC, r24
     dea:	b1 c1       	rjmp	.+866    	; 0x114e <parseAll+0x416>
			}
			else if((dataIn == 'n') && (dataState == NEW_DATA)){
     dec:	6e 36       	cpi	r22, 0x6E	; 110
     dee:	89 f4       	brne	.+34     	; 0xe12 <parseAll+0xda>
     df0:	80 91 bc 05 	lds	r24, 0x05BC
     df4:	90 91 bd 05 	lds	r25, 0x05BD
     df8:	06 97       	sbiw	r24, 0x06	; 6
     dfa:	59 f4       	brne	.+22     	; 0xe12 <parseAll+0xda>
				printf("\nAbort Send!!\n\n");
     dfc:	84 ec       	ldi	r24, 0xC4	; 196
     dfe:	93 e0       	ldi	r25, 0x03	; 3
     e00:	0e 94 fc 1b 	call	0x37f8	; 0x37f8 <puts>
				dataState = OLD_DATA;
     e04:	85 e0       	ldi	r24, 0x05	; 5
     e06:	90 e0       	ldi	r25, 0x00	; 0
     e08:	90 93 bd 05 	sts	0x05BD, r25
     e0c:	80 93 bc 05 	sts	0x05BC, r24
     e10:	9e c1       	rjmp	.+828    	; 0x114e <parseAll+0x416>
			}
			else{
				dataState = OLD_DATA;
     e12:	85 e0       	ldi	r24, 0x05	; 5
     e14:	90 e0       	ldi	r25, 0x00	; 0
     e16:	90 93 bd 05 	sts	0x05BD, r25
     e1a:	80 93 bc 05 	sts	0x05BC, r24
     e1e:	97 c1       	rjmp	.+814    	; 0x114e <parseAll+0x416>
				//printf("waiting on input\n");
			}
			break;
			
		case WATCH_X:
			if((dataIn == '0') | (dataIn == '1') | (dataIn == '2') | (dataIn == '3') | (dataIn == '4') | (dataIn == '5') | (dataIn == '6') | (dataIn == '7') | (dataIn == '8') | (dataIn == '9')){
     e20:	86 2f       	mov	r24, r22
     e22:	80 53       	subi	r24, 0x30	; 48
     e24:	8a 30       	cpi	r24, 0x0A	; 10
     e26:	40 f5       	brcc	.+80     	; 0xe78 <parseAll+0x140>
				xBuffer = (dataIn - '0') + xBuffer*10;
     e28:	70 e0       	ldi	r23, 0x00	; 0
     e2a:	60 53       	subi	r22, 0x30	; 48
     e2c:	70 40       	sbci	r23, 0x00	; 0
     e2e:	88 27       	eor	r24, r24
     e30:	77 fd       	sbrc	r23, 7
     e32:	80 95       	com	r24
     e34:	98 2f       	mov	r25, r24
     e36:	0e 94 53 15 	call	0x2aa6	; 0x2aa6 <__floatsisf>
     e3a:	7b 01       	movw	r14, r22
     e3c:	8c 01       	movw	r16, r24
     e3e:	60 91 94 5c 	lds	r22, 0x5C94
     e42:	70 91 95 5c 	lds	r23, 0x5C95
     e46:	80 91 96 5c 	lds	r24, 0x5C96
     e4a:	90 91 97 5c 	lds	r25, 0x5C97
     e4e:	20 e0       	ldi	r18, 0x00	; 0
     e50:	30 e0       	ldi	r19, 0x00	; 0
     e52:	40 e2       	ldi	r20, 0x20	; 32
     e54:	51 e4       	ldi	r21, 0x41	; 65
     e56:	0e 94 07 16 	call	0x2c0e	; 0x2c0e <__mulsf3>
     e5a:	9b 01       	movw	r18, r22
     e5c:	ac 01       	movw	r20, r24
     e5e:	c8 01       	movw	r24, r16
     e60:	b7 01       	movw	r22, r14
     e62:	0e 94 50 14 	call	0x28a0	; 0x28a0 <__addsf3>
     e66:	60 93 94 5c 	sts	0x5C94, r22
     e6a:	70 93 95 5c 	sts	0x5C95, r23
     e6e:	80 93 96 5c 	sts	0x5C96, r24
     e72:	90 93 97 5c 	sts	0x5C97, r25
     e76:	6b c1       	rjmp	.+726    	; 0x114e <parseAll+0x416>
			}
			else if(dataIn == ','){
     e78:	6c 32       	cpi	r22, 0x2C	; 44
     e7a:	09 f0       	breq	.+2      	; 0xe7e <parseAll+0x146>
     e7c:	43 c0       	rjmp	.+134    	; 0xf04 <parseAll+0x1cc>
				parseState = WATCH_Y;
     e7e:	83 e0       	ldi	r24, 0x03	; 3
     e80:	90 e0       	ldi	r25, 0x00	; 0
     e82:	90 93 bb 05 	sts	0x05BB, r25
     e86:	80 93 ba 05 	sts	0x05BA, r24
				if(signState == NEGATIVE)
     e8a:	80 91 c2 05 	lds	r24, 0x05C2
     e8e:	90 91 c3 05 	lds	r25, 0x05C3
     e92:	08 97       	sbiw	r24, 0x08	; 8
     e94:	89 f4       	brne	.+34     	; 0xeb8 <parseAll+0x180>
					xBuffer = -(xBuffer);
     e96:	80 91 94 5c 	lds	r24, 0x5C94
     e9a:	90 91 95 5c 	lds	r25, 0x5C95
     e9e:	a0 91 96 5c 	lds	r26, 0x5C96
     ea2:	b0 91 97 5c 	lds	r27, 0x5C97
     ea6:	b0 58       	subi	r27, 0x80	; 128
     ea8:	80 93 94 5c 	sts	0x5C94, r24
     eac:	90 93 95 5c 	sts	0x5C95, r25
     eb0:	a0 93 96 5c 	sts	0x5C96, r26
     eb4:	b0 93 97 5c 	sts	0x5C97, r27
				signState = POSITIVE;
     eb8:	87 e0       	ldi	r24, 0x07	; 7
     eba:	90 e0       	ldi	r25, 0x00	; 0
     ebc:	90 93 c3 05 	sts	0x05C3, r25
     ec0:	80 93 c2 05 	sts	0x05C2, r24
				printf("Read X: %f thou\n", xBuffer);
     ec4:	00 d0       	rcall	.+0      	; 0xec6 <parseAll+0x18e>
     ec6:	00 d0       	rcall	.+0      	; 0xec8 <parseAll+0x190>
     ec8:	ed b7       	in	r30, 0x3d	; 61
     eca:	fe b7       	in	r31, 0x3e	; 62
     ecc:	31 96       	adiw	r30, 0x01	; 1
     ece:	83 ed       	ldi	r24, 0xD3	; 211
     ed0:	93 e0       	ldi	r25, 0x03	; 3
     ed2:	91 83       	std	Z+1, r25	; 0x01
     ed4:	80 83       	st	Z, r24
     ed6:	80 91 94 5c 	lds	r24, 0x5C94
     eda:	90 91 95 5c 	lds	r25, 0x5C95
     ede:	a0 91 96 5c 	lds	r26, 0x5C96
     ee2:	b0 91 97 5c 	lds	r27, 0x5C97
     ee6:	82 83       	std	Z+2, r24	; 0x02
     ee8:	93 83       	std	Z+3, r25	; 0x03
     eea:	a4 83       	std	Z+4, r26	; 0x04
     eec:	b5 83       	std	Z+5, r27	; 0x05
     eee:	0e 94 eb 1b 	call	0x37d6	; 0x37d6 <printf>
     ef2:	8d b7       	in	r24, 0x3d	; 61
     ef4:	9e b7       	in	r25, 0x3e	; 62
     ef6:	06 96       	adiw	r24, 0x06	; 6
     ef8:	0f b6       	in	r0, 0x3f	; 63
     efa:	f8 94       	cli
     efc:	9e bf       	out	0x3e, r25	; 62
     efe:	0f be       	out	0x3f, r0	; 63
     f00:	8d bf       	out	0x3d, r24	; 61
     f02:	25 c1       	rjmp	.+586    	; 0x114e <parseAll+0x416>
			}
			else if(dataIn == '-'){
     f04:	6d 32       	cpi	r22, 0x2D	; 45
     f06:	39 f4       	brne	.+14     	; 0xf16 <parseAll+0x1de>
				signState = NEGATIVE;
     f08:	88 e0       	ldi	r24, 0x08	; 8
     f0a:	90 e0       	ldi	r25, 0x00	; 0
     f0c:	90 93 c3 05 	sts	0x05C3, r25
     f10:	80 93 c2 05 	sts	0x05C2, r24
     f14:	1c c1       	rjmp	.+568    	; 0x114e <parseAll+0x416>
			}
			else{
				printf("\nBad Data!\n");
     f16:	84 ee       	ldi	r24, 0xE4	; 228
     f18:	93 e0       	ldi	r25, 0x03	; 3
     f1a:	0e 94 fc 1b 	call	0x37f8	; 0x37f8 <puts>
				parseState = WATCH_BEGIN;
     f1e:	81 e0       	ldi	r24, 0x01	; 1
     f20:	90 e0       	ldi	r25, 0x00	; 0
     f22:	90 93 bb 05 	sts	0x05BB, r25
     f26:	80 93 ba 05 	sts	0x05BA, r24
     f2a:	11 c1       	rjmp	.+546    	; 0x114e <parseAll+0x416>
			}
			break;
			
		case WATCH_Y:
			if((dataIn == '0') | (dataIn == '1') | (dataIn == '2') | (dataIn == '3') | (dataIn == '4') | (dataIn == '5') | (dataIn == '6') | (dataIn == '7') | (dataIn == '8') | (dataIn == '9')){
     f2c:	86 2f       	mov	r24, r22
     f2e:	80 53       	subi	r24, 0x30	; 48
     f30:	8a 30       	cpi	r24, 0x0A	; 10
     f32:	40 f5       	brcc	.+80     	; 0xf84 <parseAll+0x24c>
				yBuffer = (dataIn - '0') + yBuffer*10;
     f34:	70 e0       	ldi	r23, 0x00	; 0
     f36:	60 53       	subi	r22, 0x30	; 48
     f38:	70 40       	sbci	r23, 0x00	; 0
     f3a:	88 27       	eor	r24, r24
     f3c:	77 fd       	sbrc	r23, 7
     f3e:	80 95       	com	r24
     f40:	98 2f       	mov	r25, r24
     f42:	0e 94 53 15 	call	0x2aa6	; 0x2aa6 <__floatsisf>
     f46:	7b 01       	movw	r14, r22
     f48:	8c 01       	movw	r16, r24
     f4a:	60 91 98 5c 	lds	r22, 0x5C98
     f4e:	70 91 99 5c 	lds	r23, 0x5C99
     f52:	80 91 9a 5c 	lds	r24, 0x5C9A
     f56:	90 91 9b 5c 	lds	r25, 0x5C9B
     f5a:	20 e0       	ldi	r18, 0x00	; 0
     f5c:	30 e0       	ldi	r19, 0x00	; 0
     f5e:	40 e2       	ldi	r20, 0x20	; 32
     f60:	51 e4       	ldi	r21, 0x41	; 65
     f62:	0e 94 07 16 	call	0x2c0e	; 0x2c0e <__mulsf3>
     f66:	9b 01       	movw	r18, r22
     f68:	ac 01       	movw	r20, r24
     f6a:	c8 01       	movw	r24, r16
     f6c:	b7 01       	movw	r22, r14
     f6e:	0e 94 50 14 	call	0x28a0	; 0x28a0 <__addsf3>
     f72:	60 93 98 5c 	sts	0x5C98, r22
     f76:	70 93 99 5c 	sts	0x5C99, r23
     f7a:	80 93 9a 5c 	sts	0x5C9A, r24
     f7e:	90 93 9b 5c 	sts	0x5C9B, r25
     f82:	e5 c0       	rjmp	.+458    	; 0x114e <parseAll+0x416>
			}
			else if(dataIn == ','){
     f84:	6c 32       	cpi	r22, 0x2C	; 44
     f86:	09 f0       	breq	.+2      	; 0xf8a <parseAll+0x252>
     f88:	43 c0       	rjmp	.+134    	; 0x1010 <parseAll+0x2d8>
				parseState = WATCH_Z;
     f8a:	84 e0       	ldi	r24, 0x04	; 4
     f8c:	90 e0       	ldi	r25, 0x00	; 0
     f8e:	90 93 bb 05 	sts	0x05BB, r25
     f92:	80 93 ba 05 	sts	0x05BA, r24
				if(signState == NEGATIVE)
     f96:	80 91 c2 05 	lds	r24, 0x05C2
     f9a:	90 91 c3 05 	lds	r25, 0x05C3
     f9e:	08 97       	sbiw	r24, 0x08	; 8
     fa0:	89 f4       	brne	.+34     	; 0xfc4 <parseAll+0x28c>
				yBuffer = -(yBuffer);
     fa2:	80 91 98 5c 	lds	r24, 0x5C98
     fa6:	90 91 99 5c 	lds	r25, 0x5C99
     faa:	a0 91 9a 5c 	lds	r26, 0x5C9A
     fae:	b0 91 9b 5c 	lds	r27, 0x5C9B
     fb2:	b0 58       	subi	r27, 0x80	; 128
     fb4:	80 93 98 5c 	sts	0x5C98, r24
     fb8:	90 93 99 5c 	sts	0x5C99, r25
     fbc:	a0 93 9a 5c 	sts	0x5C9A, r26
     fc0:	b0 93 9b 5c 	sts	0x5C9B, r27
				signState = POSITIVE;
     fc4:	87 e0       	ldi	r24, 0x07	; 7
     fc6:	90 e0       	ldi	r25, 0x00	; 0
     fc8:	90 93 c3 05 	sts	0x05C3, r25
     fcc:	80 93 c2 05 	sts	0x05C2, r24
				printf("Read Y: %f thou\n", yBuffer);
     fd0:	00 d0       	rcall	.+0      	; 0xfd2 <parseAll+0x29a>
     fd2:	00 d0       	rcall	.+0      	; 0xfd4 <parseAll+0x29c>
     fd4:	ed b7       	in	r30, 0x3d	; 61
     fd6:	fe b7       	in	r31, 0x3e	; 62
     fd8:	31 96       	adiw	r30, 0x01	; 1
     fda:	8f ee       	ldi	r24, 0xEF	; 239
     fdc:	93 e0       	ldi	r25, 0x03	; 3
     fde:	91 83       	std	Z+1, r25	; 0x01
     fe0:	80 83       	st	Z, r24
     fe2:	80 91 98 5c 	lds	r24, 0x5C98
     fe6:	90 91 99 5c 	lds	r25, 0x5C99
     fea:	a0 91 9a 5c 	lds	r26, 0x5C9A
     fee:	b0 91 9b 5c 	lds	r27, 0x5C9B
     ff2:	82 83       	std	Z+2, r24	; 0x02
     ff4:	93 83       	std	Z+3, r25	; 0x03
     ff6:	a4 83       	std	Z+4, r26	; 0x04
     ff8:	b5 83       	std	Z+5, r27	; 0x05
     ffa:	0e 94 eb 1b 	call	0x37d6	; 0x37d6 <printf>
     ffe:	8d b7       	in	r24, 0x3d	; 61
    1000:	9e b7       	in	r25, 0x3e	; 62
    1002:	06 96       	adiw	r24, 0x06	; 6
    1004:	0f b6       	in	r0, 0x3f	; 63
    1006:	f8 94       	cli
    1008:	9e bf       	out	0x3e, r25	; 62
    100a:	0f be       	out	0x3f, r0	; 63
    100c:	8d bf       	out	0x3d, r24	; 61
    100e:	9f c0       	rjmp	.+318    	; 0x114e <parseAll+0x416>
			}
			else if(dataIn == '-'){
    1010:	6d 32       	cpi	r22, 0x2D	; 45
    1012:	39 f4       	brne	.+14     	; 0x1022 <parseAll+0x2ea>
				signState = NEGATIVE;
    1014:	88 e0       	ldi	r24, 0x08	; 8
    1016:	90 e0       	ldi	r25, 0x00	; 0
    1018:	90 93 c3 05 	sts	0x05C3, r25
    101c:	80 93 c2 05 	sts	0x05C2, r24
    1020:	96 c0       	rjmp	.+300    	; 0x114e <parseAll+0x416>
			}
			else{
				printf("\nBad Data!\n");
    1022:	84 ee       	ldi	r24, 0xE4	; 228
    1024:	93 e0       	ldi	r25, 0x03	; 3
    1026:	0e 94 fc 1b 	call	0x37f8	; 0x37f8 <puts>
				parseState = WATCH_BEGIN;
    102a:	81 e0       	ldi	r24, 0x01	; 1
    102c:	90 e0       	ldi	r25, 0x00	; 0
    102e:	90 93 bb 05 	sts	0x05BB, r25
    1032:	80 93 ba 05 	sts	0x05BA, r24
    1036:	8b c0       	rjmp	.+278    	; 0x114e <parseAll+0x416>
			}
			break;
			
		case WATCH_Z:
			if((dataIn == '0') | (dataIn == '1') | (dataIn == '2') | (dataIn == '3') | (dataIn == '4') | (dataIn == '5') | (dataIn == '6') | (dataIn == '7') | (dataIn == '8') | (dataIn == '9')){
    1038:	86 2f       	mov	r24, r22
    103a:	80 53       	subi	r24, 0x30	; 48
    103c:	8a 30       	cpi	r24, 0x0A	; 10
    103e:	40 f5       	brcc	.+80     	; 0x1090 <parseAll+0x358>
				zBuffer = (dataIn - '0') + zBuffer*10;
    1040:	70 e0       	ldi	r23, 0x00	; 0
    1042:	60 53       	subi	r22, 0x30	; 48
    1044:	70 40       	sbci	r23, 0x00	; 0
    1046:	88 27       	eor	r24, r24
    1048:	77 fd       	sbrc	r23, 7
    104a:	80 95       	com	r24
    104c:	98 2f       	mov	r25, r24
    104e:	0e 94 53 15 	call	0x2aa6	; 0x2aa6 <__floatsisf>
    1052:	7b 01       	movw	r14, r22
    1054:	8c 01       	movw	r16, r24
    1056:	60 91 be 05 	lds	r22, 0x05BE
    105a:	70 91 bf 05 	lds	r23, 0x05BF
    105e:	80 91 c0 05 	lds	r24, 0x05C0
    1062:	90 91 c1 05 	lds	r25, 0x05C1
    1066:	20 e0       	ldi	r18, 0x00	; 0
    1068:	30 e0       	ldi	r19, 0x00	; 0
    106a:	40 e2       	ldi	r20, 0x20	; 32
    106c:	51 e4       	ldi	r21, 0x41	; 65
    106e:	0e 94 07 16 	call	0x2c0e	; 0x2c0e <__mulsf3>
    1072:	9b 01       	movw	r18, r22
    1074:	ac 01       	movw	r20, r24
    1076:	c8 01       	movw	r24, r16
    1078:	b7 01       	movw	r22, r14
    107a:	0e 94 50 14 	call	0x28a0	; 0x28a0 <__addsf3>
    107e:	60 93 be 05 	sts	0x05BE, r22
    1082:	70 93 bf 05 	sts	0x05BF, r23
    1086:	80 93 c0 05 	sts	0x05C0, r24
    108a:	90 93 c1 05 	sts	0x05C1, r25
    108e:	5f c0       	rjmp	.+190    	; 0x114e <parseAll+0x416>
			}
			else if(dataIn == '*'){ //Packet complete!
    1090:	6a 32       	cpi	r22, 0x2A	; 42
    1092:	09 f0       	breq	.+2      	; 0x1096 <parseAll+0x35e>
    1094:	49 c0       	rjmp	.+146    	; 0x1128 <parseAll+0x3f0>
				if(signState == NEGATIVE)
    1096:	80 91 c2 05 	lds	r24, 0x05C2
    109a:	90 91 c3 05 	lds	r25, 0x05C3
    109e:	08 97       	sbiw	r24, 0x08	; 8
    10a0:	89 f4       	brne	.+34     	; 0x10c4 <parseAll+0x38c>
				zBuffer = -(zBuffer);
    10a2:	80 91 be 05 	lds	r24, 0x05BE
    10a6:	90 91 bf 05 	lds	r25, 0x05BF
    10aa:	a0 91 c0 05 	lds	r26, 0x05C0
    10ae:	b0 91 c1 05 	lds	r27, 0x05C1
    10b2:	b0 58       	subi	r27, 0x80	; 128
    10b4:	80 93 be 05 	sts	0x05BE, r24
    10b8:	90 93 bf 05 	sts	0x05BF, r25
    10bc:	a0 93 c0 05 	sts	0x05C0, r26
    10c0:	b0 93 c1 05 	sts	0x05C1, r27
				signState = POSITIVE; //reset
    10c4:	87 e0       	ldi	r24, 0x07	; 7
    10c6:	90 e0       	ldi	r25, 0x00	; 0
    10c8:	90 93 c3 05 	sts	0x05C3, r25
    10cc:	80 93 c2 05 	sts	0x05C2, r24
				printf("Read Z: %f thou\n", zBuffer);
    10d0:	00 d0       	rcall	.+0      	; 0x10d2 <parseAll+0x39a>
    10d2:	00 d0       	rcall	.+0      	; 0x10d4 <parseAll+0x39c>
    10d4:	ed b7       	in	r30, 0x3d	; 61
    10d6:	fe b7       	in	r31, 0x3e	; 62
    10d8:	31 96       	adiw	r30, 0x01	; 1
    10da:	80 e0       	ldi	r24, 0x00	; 0
    10dc:	94 e0       	ldi	r25, 0x04	; 4
    10de:	91 83       	std	Z+1, r25	; 0x01
    10e0:	80 83       	st	Z, r24
    10e2:	80 91 be 05 	lds	r24, 0x05BE
    10e6:	90 91 bf 05 	lds	r25, 0x05BF
    10ea:	a0 91 c0 05 	lds	r26, 0x05C0
    10ee:	b0 91 c1 05 	lds	r27, 0x05C1
    10f2:	82 83       	std	Z+2, r24	; 0x02
    10f4:	93 83       	std	Z+3, r25	; 0x03
    10f6:	a4 83       	std	Z+4, r26	; 0x04
    10f8:	b5 83       	std	Z+5, r27	; 0x05
    10fa:	0e 94 eb 1b 	call	0x37d6	; 0x37d6 <printf>
				dataState = NEW_DATA; 
    10fe:	86 e0       	ldi	r24, 0x06	; 6
    1100:	90 e0       	ldi	r25, 0x00	; 0
    1102:	90 93 bd 05 	sts	0x05BD, r25
    1106:	80 93 bc 05 	sts	0x05BC, r24
				parseState = WATCH_BEGIN;
    110a:	81 e0       	ldi	r24, 0x01	; 1
    110c:	90 e0       	ldi	r25, 0x00	; 0
    110e:	90 93 bb 05 	sts	0x05BB, r25
    1112:	80 93 ba 05 	sts	0x05BA, r24
    1116:	8d b7       	in	r24, 0x3d	; 61
    1118:	9e b7       	in	r25, 0x3e	; 62
    111a:	06 96       	adiw	r24, 0x06	; 6
    111c:	0f b6       	in	r0, 0x3f	; 63
    111e:	f8 94       	cli
    1120:	9e bf       	out	0x3e, r25	; 62
    1122:	0f be       	out	0x3f, r0	; 63
    1124:	8d bf       	out	0x3d, r24	; 61
    1126:	13 c0       	rjmp	.+38     	; 0x114e <parseAll+0x416>
				
				
				
			}
			else if(dataIn == '-'){
    1128:	6d 32       	cpi	r22, 0x2D	; 45
    112a:	39 f4       	brne	.+14     	; 0x113a <parseAll+0x402>
				signState = NEGATIVE;
    112c:	88 e0       	ldi	r24, 0x08	; 8
    112e:	90 e0       	ldi	r25, 0x00	; 0
    1130:	90 93 c3 05 	sts	0x05C3, r25
    1134:	80 93 c2 05 	sts	0x05C2, r24
    1138:	0a c0       	rjmp	.+20     	; 0x114e <parseAll+0x416>
			}
			else{
				printf("\nbad Data\n");
    113a:	81 e1       	ldi	r24, 0x11	; 17
    113c:	94 e0       	ldi	r25, 0x04	; 4
    113e:	0e 94 fc 1b 	call	0x37f8	; 0x37f8 <puts>
				parseState = WATCH_BEGIN;
    1142:	81 e0       	ldi	r24, 0x01	; 1
    1144:	90 e0       	ldi	r25, 0x00	; 0
    1146:	90 93 bb 05 	sts	0x05BB, r25
    114a:	80 93 ba 05 	sts	0x05BA, r24
			}
		
	}
	
	return parseError;
}
    114e:	80 e0       	ldi	r24, 0x00	; 0
    1150:	90 e0       	ldi	r25, 0x00	; 0
    1152:	1f 91       	pop	r17
    1154:	0f 91       	pop	r16
    1156:	ff 90       	pop	r15
    1158:	ef 90       	pop	r14
    115a:	08 95       	ret

0000115c <main>:
void PrintCommStatus(int CommStatus);
void PrintErrorCode(void);


int main(void)
{
    115c:	2f 92       	push	r2
    115e:	3f 92       	push	r3
    1160:	4f 92       	push	r4
    1162:	5f 92       	push	r5
    1164:	6f 92       	push	r6
    1166:	7f 92       	push	r7
    1168:	8f 92       	push	r8
    116a:	9f 92       	push	r9
    116c:	af 92       	push	r10
    116e:	bf 92       	push	r11
    1170:	cf 92       	push	r12
    1172:	df 92       	push	r13
    1174:	ef 92       	push	r14
    1176:	ff 92       	push	r15
    1178:	0f 93       	push	r16
    117a:	1f 93       	push	r17
    117c:	df 93       	push	r29
    117e:	cf 93       	push	r28
    1180:	cd b7       	in	r28, 0x3d	; 61
    1182:	de b7       	in	r29, 0x3e	; 62
    1184:	a2 97       	sbiw	r28, 0x22	; 34
    1186:	0f b6       	in	r0, 0x3f	; 63
    1188:	f8 94       	cli
    118a:	de bf       	out	0x3e, r29	; 62
    118c:	0f be       	out	0x3f, r0	; 63
    118e:	cd bf       	out	0x3d, r28	; 61
	serial_initialize(57600); // USART Initialize
    1190:	60 e0       	ldi	r22, 0x00	; 0
    1192:	71 ee       	ldi	r23, 0xE1	; 225
    1194:	80 e0       	ldi	r24, 0x00	; 0
    1196:	90 e0       	ldi	r25, 0x00	; 0
    1198:	9c dd       	rcall	.-1224   	; 0xcd2 <serial_initialize>
	dxl_initialize( 0, DEFAULT_BAUDNUM ); // Not using device index. i.e., 0 indexing on device number
    119a:	80 e0       	ldi	r24, 0x00	; 0
    119c:	90 e0       	ldi	r25, 0x00	; 0
    119e:	61 e0       	ldi	r22, 0x01	; 1
    11a0:	70 e0       	ldi	r23, 0x00	; 0
    11a2:	21 da       	rcall	.-3006   	; 0x5e6 <dxl_initialize>
	dxl_initialize( 1, DEFAULT_BAUDNUM ); // Init #2
    11a4:	81 e0       	ldi	r24, 0x01	; 1
    11a6:	90 e0       	ldi	r25, 0x00	; 0
    11a8:	61 e0       	ldi	r22, 0x01	; 1
    11aa:	70 e0       	ldi	r23, 0x00	; 0
    11ac:	1c da       	rcall	.-3016   	; 0x5e6 <dxl_initialize>
	dxl_initialize( 2, DEFAULT_BAUDNUM ); // Init #3
    11ae:	82 e0       	ldi	r24, 0x02	; 2
    11b0:	90 e0       	ldi	r25, 0x00	; 0
    11b2:	61 e0       	ldi	r22, 0x01	; 1
    11b4:	70 e0       	ldi	r23, 0x00	; 0
    11b6:	17 da       	rcall	.-3026   	; 0x5e6 <dxl_initialize>
	sei(); // set enable interrupt
    11b8:	78 94       	sei
    11ba:	20 e1       	ldi	r18, 0x10	; 16
    11bc:	37 e2       	ldi	r19, 0x27	; 39
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
    11be:	40 e9       	ldi	r20, 0x90	; 144
    11c0:	51 e0       	ldi	r21, 0x01	; 1
    11c2:	ca 01       	movw	r24, r20
    11c4:	01 97       	sbiw	r24, 0x01	; 1
    11c6:	f1 f7       	brne	.-4      	; 0x11c4 <main+0x68>
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    11c8:	21 50       	subi	r18, 0x01	; 1
    11ca:	30 40       	sbci	r19, 0x00	; 0
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    11cc:	d1 f7       	brne	.-12     	; 0x11c2 <main+0x66>
	int bMoving, wPresentPos;
	int CommStatus;
	
	struct point p;
	double angles[3];
	angles[0] = 180;
    11ce:	80 e0       	ldi	r24, 0x00	; 0
    11d0:	90 e0       	ldi	r25, 0x00	; 0
    11d2:	a4 e3       	ldi	r26, 0x34	; 52
    11d4:	b3 e4       	ldi	r27, 0x43	; 67
    11d6:	8d 87       	std	Y+13, r24	; 0x0d
    11d8:	9e 87       	std	Y+14, r25	; 0x0e
    11da:	af 87       	std	Y+15, r26	; 0x0f
    11dc:	b8 8b       	std	Y+16, r27	; 0x10
	angles[1] = 180;
    11de:	89 8b       	std	Y+17, r24	; 0x11
    11e0:	9a 8b       	std	Y+18, r25	; 0x12
    11e2:	ab 8b       	std	Y+19, r26	; 0x13
    11e4:	bc 8b       	std	Y+20, r27	; 0x14
	angles[2] = 180;
    11e6:	8d 8b       	std	Y+21, r24	; 0x15
    11e8:	9e 8b       	std	Y+22, r25	; 0x16
    11ea:	af 8b       	std	Y+23, r26	; 0x17
    11ec:	b8 8f       	std	Y+24, r27	; 0x18
	
	dxl_write_word( 1, P_GOAL_POSITION_L, (int) angles[0]*11.3778 ); //4096./360=11.3778  <--- Ticks per degree
    11ee:	81 e0       	ldi	r24, 0x01	; 1
    11f0:	90 e0       	ldi	r25, 0x00	; 0
    11f2:	6e e1       	ldi	r22, 0x1E	; 30
    11f4:	70 e0       	ldi	r23, 0x00	; 0
    11f6:	40 e0       	ldi	r20, 0x00	; 0
    11f8:	58 e0       	ldi	r21, 0x08	; 8
    11fa:	7d d9       	rcall	.-3334   	; 0x4f6 <dxl_write_word>
	dxl_write_word( 2, P_GOAL_POSITION_L, (int) angles[1]*11.3778 ); //Command #2
    11fc:	69 89       	ldd	r22, Y+17	; 0x11
    11fe:	7a 89       	ldd	r23, Y+18	; 0x12
    1200:	8b 89       	ldd	r24, Y+19	; 0x13
    1202:	9c 89       	ldd	r25, Y+20	; 0x14
    1204:	0e 94 20 15 	call	0x2a40	; 0x2a40 <__fixsfsi>
    1208:	88 27       	eor	r24, r24
    120a:	77 fd       	sbrc	r23, 7
    120c:	80 95       	com	r24
    120e:	98 2f       	mov	r25, r24
    1210:	0e 94 53 15 	call	0x2aa6	; 0x2aa6 <__floatsisf>
    1214:	28 e7       	ldi	r18, 0x78	; 120
    1216:	3b e0       	ldi	r19, 0x0B	; 11
    1218:	46 e3       	ldi	r20, 0x36	; 54
    121a:	51 e4       	ldi	r21, 0x41	; 65
    121c:	0e 94 07 16 	call	0x2c0e	; 0x2c0e <__mulsf3>
    1220:	0e 94 20 15 	call	0x2a40	; 0x2a40 <__fixsfsi>
    1224:	9b 01       	movw	r18, r22
    1226:	ac 01       	movw	r20, r24
    1228:	82 e0       	ldi	r24, 0x02	; 2
    122a:	90 e0       	ldi	r25, 0x00	; 0
    122c:	6e e1       	ldi	r22, 0x1E	; 30
    122e:	70 e0       	ldi	r23, 0x00	; 0
    1230:	a9 01       	movw	r20, r18
    1232:	61 d9       	rcall	.-3390   	; 0x4f6 <dxl_write_word>
	dxl_write_word( 3, P_GOAL_POSITION_L, (int) angles[2]*11.3778 ); //Command #3
    1234:	6d 89       	ldd	r22, Y+21	; 0x15
    1236:	7e 89       	ldd	r23, Y+22	; 0x16
    1238:	8f 89       	ldd	r24, Y+23	; 0x17
    123a:	98 8d       	ldd	r25, Y+24	; 0x18
    123c:	0e 94 20 15 	call	0x2a40	; 0x2a40 <__fixsfsi>
    1240:	88 27       	eor	r24, r24
    1242:	77 fd       	sbrc	r23, 7
    1244:	80 95       	com	r24
    1246:	98 2f       	mov	r25, r24
    1248:	0e 94 53 15 	call	0x2aa6	; 0x2aa6 <__floatsisf>
    124c:	28 e7       	ldi	r18, 0x78	; 120
    124e:	3b e0       	ldi	r19, 0x0B	; 11
    1250:	46 e3       	ldi	r20, 0x36	; 54
    1252:	51 e4       	ldi	r21, 0x41	; 65
    1254:	0e 94 07 16 	call	0x2c0e	; 0x2c0e <__mulsf3>
    1258:	0e 94 20 15 	call	0x2a40	; 0x2a40 <__fixsfsi>
    125c:	9b 01       	movw	r18, r22
    125e:	ac 01       	movw	r20, r24
    1260:	83 e0       	ldi	r24, 0x03	; 3
    1262:	90 e0       	ldi	r25, 0x00	; 0
    1264:	6e e1       	ldi	r22, 0x1E	; 30
    1266:	70 e0       	ldi	r23, 0x00	; 0
    1268:	a9 01       	movw	r20, r18
    126a:	45 d9       	rcall	.-3446   	; 0x4f6 <dxl_write_word>
	
	printf("Initialization complete.\n");
    126c:	8b e1       	ldi	r24, 0x1B	; 27
    126e:	94 e0       	ldi	r25, 0x04	; 4
    1270:	0e 94 fc 1b 	call	0x37f8	; 0x37f8 <puts>
		PrintCommStatus(CommStatus);
		
		//END DYNAMIXEL DEMO CODE
		*/
		
		if(parseAll(getchar()) != 0){
    1274:	0f 2e       	mov	r0, r31
    1276:	f6 ea       	ldi	r31, 0xA6	; 166
    1278:	4f 2e       	mov	r4, r31
    127a:	fc e5       	ldi	r31, 0x5C	; 92
    127c:	5f 2e       	mov	r5, r31
    127e:	f0 2d       	mov	r31, r0
    1280:	f2 01       	movw	r30, r4
    1282:	80 81       	ld	r24, Z
    1284:	91 81       	ldd	r25, Z+1	; 0x01
    1286:	0e 94 3a 1b 	call	0x3674	; 0x3674 <fgetc>
    128a:	56 dd       	rcall	.-1364   	; 0xd38 <parseAll>
    128c:	89 2b       	or	r24, r25
    128e:	21 f0       	breq	.+8      	; 0x1298 <main+0x13c>
			printf("\nError!\n");
    1290:	84 e3       	ldi	r24, 0x34	; 52
    1292:	94 e0       	ldi	r25, 0x04	; 4
    1294:	0e 94 fc 1b 	call	0x37f8	; 0x37f8 <puts>
			};
		
		if(dataState == NEW_DATA){
    1298:	80 91 bc 05 	lds	r24, 0x05BC
    129c:	90 91 bd 05 	lds	r25, 0x05BD
    12a0:	86 30       	cpi	r24, 0x06	; 6
    12a2:	91 05       	cpc	r25, r1
    12a4:	09 f0       	breq	.+2      	; 0x12a8 <main+0x14c>
    12a6:	af c1       	rjmp	.+862    	; 0x1606 <main+0x4aa>
			p.x = (xBuffer)/1000.;
    12a8:	60 91 94 5c 	lds	r22, 0x5C94
    12ac:	70 91 95 5c 	lds	r23, 0x5C95
    12b0:	80 91 96 5c 	lds	r24, 0x5C96
    12b4:	90 91 97 5c 	lds	r25, 0x5C97
    12b8:	20 e0       	ldi	r18, 0x00	; 0
    12ba:	30 e0       	ldi	r19, 0x00	; 0
    12bc:	4a e7       	ldi	r20, 0x7A	; 122
    12be:	54 e4       	ldi	r21, 0x44	; 68
    12c0:	0e 94 b8 14 	call	0x2970	; 0x2970 <__divsf3>
    12c4:	3b 01       	movw	r6, r22
    12c6:	4c 01       	movw	r8, r24
    12c8:	89 a2       	std	Y+33, r8	; 0x21
    12ca:	9a a2       	std	Y+34, r9	; 0x22
			p.y = (yBuffer)/1000.;
    12cc:	60 91 98 5c 	lds	r22, 0x5C98
    12d0:	70 91 99 5c 	lds	r23, 0x5C99
    12d4:	80 91 9a 5c 	lds	r24, 0x5C9A
    12d8:	90 91 9b 5c 	lds	r25, 0x5C9B
    12dc:	20 e0       	ldi	r18, 0x00	; 0
    12de:	30 e0       	ldi	r19, 0x00	; 0
    12e0:	4a e7       	ldi	r20, 0x7A	; 122
    12e2:	54 e4       	ldi	r21, 0x44	; 68
    12e4:	0e 94 b8 14 	call	0x2970	; 0x2970 <__divsf3>
    12e8:	5b 01       	movw	r10, r22
    12ea:	6c 01       	movw	r12, r24
    12ec:	6d 8f       	std	Y+29, r22	; 0x1d
    12ee:	be 8e       	std	Y+30, r11	; 0x1e
    12f0:	cf 8e       	std	Y+31, r12	; 0x1f
    12f2:	d8 a2       	std	Y+32, r13	; 0x20
			p.z = (zBuffer)/1000.;
    12f4:	60 91 be 05 	lds	r22, 0x05BE
    12f8:	70 91 bf 05 	lds	r23, 0x05BF
    12fc:	80 91 c0 05 	lds	r24, 0x05C0
    1300:	90 91 c1 05 	lds	r25, 0x05C1
    1304:	20 e0       	ldi	r18, 0x00	; 0
    1306:	30 e0       	ldi	r19, 0x00	; 0
    1308:	4a e7       	ldi	r20, 0x7A	; 122
    130a:	54 e4       	ldi	r21, 0x44	; 68
    130c:	0e 94 b8 14 	call	0x2970	; 0x2970 <__divsf3>
    1310:	7b 01       	movw	r14, r22
    1312:	8c 01       	movw	r16, r24
    1314:	69 8f       	std	Y+25, r22	; 0x19
    1316:	fa 8e       	std	Y+26, r15	; 0x1a
    1318:	0b 8f       	std	Y+27, r16	; 0x1b
    131a:	1c 8f       	std	Y+28, r17	; 0x1c
			
			printf("\n\nNew input received\n");
    131c:	8c e3       	ldi	r24, 0x3C	; 60
    131e:	94 e0       	ldi	r25, 0x04	; 4
    1320:	0e 94 fc 1b 	call	0x37f8	; 0x37f8 <puts>
			
			printf("\nIn inches:\nX: %f\nY: %f\nZ: %f\n", p.x, p.y, p.z);
    1324:	8d b7       	in	r24, 0x3d	; 61
    1326:	9e b7       	in	r25, 0x3e	; 62
    1328:	0e 97       	sbiw	r24, 0x0e	; 14
    132a:	0f b6       	in	r0, 0x3f	; 63
    132c:	f8 94       	cli
    132e:	9e bf       	out	0x3e, r25	; 62
    1330:	0f be       	out	0x3f, r0	; 63
    1332:	8d bf       	out	0x3d, r24	; 61
    1334:	ed b7       	in	r30, 0x3d	; 61
    1336:	fe b7       	in	r31, 0x3e	; 62
    1338:	31 96       	adiw	r30, 0x01	; 1
    133a:	81 e5       	ldi	r24, 0x51	; 81
    133c:	94 e0       	ldi	r25, 0x04	; 4
    133e:	91 83       	std	Z+1, r25	; 0x01
    1340:	80 83       	st	Z, r24
    1342:	86 2d       	mov	r24, r6
    1344:	97 2d       	mov	r25, r7
    1346:	a8 2d       	mov	r26, r8
    1348:	b9 2d       	mov	r27, r9
    134a:	82 83       	std	Z+2, r24	; 0x02
    134c:	93 83       	std	Z+3, r25	; 0x03
    134e:	a4 83       	std	Z+4, r26	; 0x04
    1350:	b5 83       	std	Z+5, r27	; 0x05
    1352:	8a 2d       	mov	r24, r10
    1354:	9b 2d       	mov	r25, r11
    1356:	ac 2d       	mov	r26, r12
    1358:	bd 2d       	mov	r27, r13
    135a:	86 83       	std	Z+6, r24	; 0x06
    135c:	97 83       	std	Z+7, r25	; 0x07
    135e:	a0 87       	std	Z+8, r26	; 0x08
    1360:	b1 87       	std	Z+9, r27	; 0x09
    1362:	8e 2d       	mov	r24, r14
    1364:	9f 2d       	mov	r25, r15
    1366:	a0 2f       	mov	r26, r16
    1368:	b1 2f       	mov	r27, r17
    136a:	82 87       	std	Z+10, r24	; 0x0a
    136c:	93 87       	std	Z+11, r25	; 0x0b
    136e:	a4 87       	std	Z+12, r26	; 0x0c
    1370:	b5 87       	std	Z+13, r27	; 0x0d
    1372:	0e 94 eb 1b 	call	0x37d6	; 0x37d6 <printf>
			
			if (pointValid(p)){
    1376:	8e 2d       	mov	r24, r14
    1378:	9f 2d       	mov	r25, r15
    137a:	a0 2f       	mov	r26, r16
    137c:	b1 2f       	mov	r27, r17
    137e:	89 87       	std	Y+9, r24	; 0x09
    1380:	9a 87       	std	Y+10, r25	; 0x0a
    1382:	ab 87       	std	Y+11, r26	; 0x0b
    1384:	bc 87       	std	Y+12, r27	; 0x0c
    1386:	8a 2d       	mov	r24, r10
    1388:	9b 2d       	mov	r25, r11
    138a:	ac 2d       	mov	r26, r12
    138c:	bd 2d       	mov	r27, r13
    138e:	8d 83       	std	Y+5, r24	; 0x05
    1390:	9e 83       	std	Y+6, r25	; 0x06
    1392:	af 83       	std	Y+7, r26	; 0x07
    1394:	b8 87       	std	Y+8, r27	; 0x08
    1396:	86 2d       	mov	r24, r6
    1398:	97 2d       	mov	r25, r7
    139a:	a8 2d       	mov	r26, r8
    139c:	b9 2d       	mov	r27, r9
    139e:	89 83       	std	Y+1, r24	; 0x01
    13a0:	9a 83       	std	Y+2, r25	; 0x02
    13a2:	ab 83       	std	Y+3, r26	; 0x03
    13a4:	bc 83       	std	Y+4, r27	; 0x04
    13a6:	ed b7       	in	r30, 0x3d	; 61
    13a8:	fe b7       	in	r31, 0x3e	; 62
    13aa:	3e 96       	adiw	r30, 0x0e	; 14
    13ac:	0f b6       	in	r0, 0x3f	; 63
    13ae:	f8 94       	cli
    13b0:	fe bf       	out	0x3e, r31	; 62
    13b2:	0f be       	out	0x3f, r0	; 63
    13b4:	ed bf       	out	0x3d, r30	; 61
    13b6:	e9 80       	ldd	r14, Y+1	; 0x01
    13b8:	fa 80       	ldd	r15, Y+2	; 0x02
    13ba:	0b 81       	ldd	r16, Y+3	; 0x03
    13bc:	1c 81       	ldd	r17, Y+4	; 0x04
    13be:	2d 81       	ldd	r18, Y+5	; 0x05
    13c0:	3e 81       	ldd	r19, Y+6	; 0x06
    13c2:	4f 81       	ldd	r20, Y+7	; 0x07
    13c4:	58 85       	ldd	r21, Y+8	; 0x08
    13c6:	69 85       	ldd	r22, Y+9	; 0x09
    13c8:	7a 85       	ldd	r23, Y+10	; 0x0a
    13ca:	8b 85       	ldd	r24, Y+11	; 0x0b
    13cc:	9c 85       	ldd	r25, Y+12	; 0x0c
    13ce:	0e 94 df 13 	call	0x27be	; 0x27be <pointValid>
    13d2:	89 2b       	or	r24, r25
    13d4:	09 f4       	brne	.+2      	; 0x13d8 <main+0x27c>
    13d6:	08 c1       	rjmp	.+528    	; 0x15e8 <main+0x48c>
				printf("\nPoint is Valid.\n");
    13d8:	80 e7       	ldi	r24, 0x70	; 112
    13da:	94 e0       	ldi	r25, 0x04	; 4
    13dc:	0e 94 fc 1b 	call	0x37f8	; 0x37f8 <puts>
				lookupAngles(INVERSE_TABLE, angles, p);
    13e0:	29 8d       	ldd	r18, Y+25	; 0x19
    13e2:	3a 8d       	ldd	r19, Y+26	; 0x1a
    13e4:	4b 8d       	ldd	r20, Y+27	; 0x1b
    13e6:	5c 8d       	ldd	r21, Y+28	; 0x1c
    13e8:	82 2f       	mov	r24, r18
    13ea:	93 2f       	mov	r25, r19
    13ec:	a4 2f       	mov	r26, r20
    13ee:	b5 2f       	mov	r27, r21
    13f0:	89 87       	std	Y+9, r24	; 0x09
    13f2:	9a 87       	std	Y+10, r25	; 0x0a
    13f4:	ab 87       	std	Y+11, r26	; 0x0b
    13f6:	bc 87       	std	Y+12, r27	; 0x0c
    13f8:	2d 8d       	ldd	r18, Y+29	; 0x1d
    13fa:	3e 8d       	ldd	r19, Y+30	; 0x1e
    13fc:	4f 8d       	ldd	r20, Y+31	; 0x1f
    13fe:	58 a1       	ldd	r21, Y+32	; 0x20
    1400:	82 2f       	mov	r24, r18
    1402:	93 2f       	mov	r25, r19
    1404:	a4 2f       	mov	r26, r20
    1406:	b5 2f       	mov	r27, r21
    1408:	8d 83       	std	Y+5, r24	; 0x05
    140a:	9e 83       	std	Y+6, r25	; 0x06
    140c:	af 83       	std	Y+7, r26	; 0x07
    140e:	b8 87       	std	Y+8, r27	; 0x08
    1410:	49 a1       	ldd	r20, Y+33	; 0x21
    1412:	5a a1       	ldd	r21, Y+34	; 0x22
    1414:	86 2d       	mov	r24, r6
    1416:	97 2d       	mov	r25, r7
    1418:	a4 2f       	mov	r26, r20
    141a:	b5 2f       	mov	r27, r21
    141c:	89 83       	std	Y+1, r24	; 0x01
    141e:	9a 83       	std	Y+2, r25	; 0x02
    1420:	ab 83       	std	Y+3, r26	; 0x03
    1422:	bc 83       	std	Y+4, r27	; 0x04
    1424:	84 ec       	ldi	r24, 0xC4	; 196
    1426:	95 e0       	ldi	r25, 0x05	; 5
    1428:	be 01       	movw	r22, r28
    142a:	63 5f       	subi	r22, 0xF3	; 243
    142c:	7f 4f       	sbci	r23, 0xFF	; 255
    142e:	a9 80       	ldd	r10, Y+1	; 0x01
    1430:	ba 80       	ldd	r11, Y+2	; 0x02
    1432:	cb 80       	ldd	r12, Y+3	; 0x03
    1434:	dc 80       	ldd	r13, Y+4	; 0x04
    1436:	ed 80       	ldd	r14, Y+5	; 0x05
    1438:	fe 80       	ldd	r15, Y+6	; 0x06
    143a:	0f 81       	ldd	r16, Y+7	; 0x07
    143c:	18 85       	ldd	r17, Y+8	; 0x08
    143e:	29 85       	ldd	r18, Y+9	; 0x09
    1440:	3a 85       	ldd	r19, Y+10	; 0x0a
    1442:	4b 85       	ldd	r20, Y+11	; 0x0b
    1444:	5c 85       	ldd	r21, Y+12	; 0x0c
    1446:	c7 d1       	rcall	.+910    	; 0x17d6 <lookupAngles>
				
				if (isnan(angles[0])){
    1448:	2d 85       	ldd	r18, Y+13	; 0x0d
    144a:	3e 85       	ldd	r19, Y+14	; 0x0e
    144c:	4f 85       	ldd	r20, Y+15	; 0x0f
    144e:	58 89       	ldd	r21, Y+16	; 0x10
    1450:	ca 01       	movw	r24, r20
    1452:	b9 01       	movw	r22, r18
    1454:	0e 94 6a 16 	call	0x2cd4	; 0x2cd4 <__unordsf2>
    1458:	88 23       	and	r24, r24
    145a:	69 f0       	breq	.+26     	; 0x1476 <main+0x31a>
					printf("No Kinematic Solution.");
    145c:	0f 92       	push	r0
    145e:	0f 92       	push	r0
    1460:	81 e8       	ldi	r24, 0x81	; 129
    1462:	94 e0       	ldi	r25, 0x04	; 4
    1464:	ed b7       	in	r30, 0x3d	; 61
    1466:	fe b7       	in	r31, 0x3e	; 62
    1468:	92 83       	std	Z+2, r25	; 0x02
    146a:	81 83       	std	Z+1, r24	; 0x01
    146c:	0e 94 eb 1b 	call	0x37d6	; 0x37d6 <printf>
    1470:	0f 90       	pop	r0
    1472:	0f 90       	pop	r0
    1474:	b2 c0       	rjmp	.+356    	; 0x15da <main+0x47e>
				}
				else{
					printf("\nProposed position:\n");
    1476:	88 e9       	ldi	r24, 0x98	; 152
    1478:	94 e0       	ldi	r25, 0x04	; 4
    147a:	0e 94 fc 1b 	call	0x37f8	; 0x37f8 <puts>
					printf("X Pos: %f;  Y Pos: %f;  Z Pos: %f\n", p.x, p.y, p.z);
    147e:	ed b7       	in	r30, 0x3d	; 61
    1480:	fe b7       	in	r31, 0x3e	; 62
    1482:	3e 97       	sbiw	r30, 0x0e	; 14
    1484:	0f b6       	in	r0, 0x3f	; 63
    1486:	f8 94       	cli
    1488:	fe bf       	out	0x3e, r31	; 62
    148a:	0f be       	out	0x3f, r0	; 63
    148c:	ed bf       	out	0x3d, r30	; 61
    148e:	31 96       	adiw	r30, 0x01	; 1
    1490:	8c ea       	ldi	r24, 0xAC	; 172
    1492:	94 e0       	ldi	r25, 0x04	; 4
    1494:	91 83       	std	Z+1, r25	; 0x01
    1496:	80 83       	st	Z, r24
    1498:	49 a1       	ldd	r20, Y+33	; 0x21
    149a:	5a a1       	ldd	r21, Y+34	; 0x22
    149c:	86 2d       	mov	r24, r6
    149e:	97 2d       	mov	r25, r7
    14a0:	a4 2f       	mov	r26, r20
    14a2:	b5 2f       	mov	r27, r21
    14a4:	82 83       	std	Z+2, r24	; 0x02
    14a6:	93 83       	std	Z+3, r25	; 0x03
    14a8:	a4 83       	std	Z+4, r26	; 0x04
    14aa:	b5 83       	std	Z+5, r27	; 0x05
    14ac:	2d 8d       	ldd	r18, Y+29	; 0x1d
    14ae:	3e 8d       	ldd	r19, Y+30	; 0x1e
    14b0:	4f 8d       	ldd	r20, Y+31	; 0x1f
    14b2:	58 a1       	ldd	r21, Y+32	; 0x20
    14b4:	82 2f       	mov	r24, r18
    14b6:	93 2f       	mov	r25, r19
    14b8:	a4 2f       	mov	r26, r20
    14ba:	b5 2f       	mov	r27, r21
    14bc:	86 83       	std	Z+6, r24	; 0x06
    14be:	97 83       	std	Z+7, r25	; 0x07
    14c0:	a0 87       	std	Z+8, r26	; 0x08
    14c2:	b1 87       	std	Z+9, r27	; 0x09
    14c4:	29 8d       	ldd	r18, Y+25	; 0x19
    14c6:	3a 8d       	ldd	r19, Y+26	; 0x1a
    14c8:	4b 8d       	ldd	r20, Y+27	; 0x1b
    14ca:	5c 8d       	ldd	r21, Y+28	; 0x1c
    14cc:	82 2f       	mov	r24, r18
    14ce:	93 2f       	mov	r25, r19
    14d0:	a4 2f       	mov	r26, r20
    14d2:	b5 2f       	mov	r27, r21
    14d4:	82 87       	std	Z+10, r24	; 0x0a
    14d6:	93 87       	std	Z+11, r25	; 0x0b
    14d8:	a4 87       	std	Z+12, r26	; 0x0c
    14da:	b5 87       	std	Z+13, r27	; 0x0d
    14dc:	0e 94 eb 1b 	call	0x37d6	; 0x37d6 <printf>
					printf("Angle 1: %f;  Angle 2: %f;  Angle 3: %f\n", angles[0], angles[1], angles[2]);
    14e0:	ed b7       	in	r30, 0x3d	; 61
    14e2:	fe b7       	in	r31, 0x3e	; 62
    14e4:	31 96       	adiw	r30, 0x01	; 1
    14e6:	8f ec       	ldi	r24, 0xCF	; 207
    14e8:	94 e0       	ldi	r25, 0x04	; 4
    14ea:	91 83       	std	Z+1, r25	; 0x01
    14ec:	80 83       	st	Z, r24
    14ee:	8d 85       	ldd	r24, Y+13	; 0x0d
    14f0:	9e 85       	ldd	r25, Y+14	; 0x0e
    14f2:	af 85       	ldd	r26, Y+15	; 0x0f
    14f4:	b8 89       	ldd	r27, Y+16	; 0x10
    14f6:	82 83       	std	Z+2, r24	; 0x02
    14f8:	93 83       	std	Z+3, r25	; 0x03
    14fa:	a4 83       	std	Z+4, r26	; 0x04
    14fc:	b5 83       	std	Z+5, r27	; 0x05
    14fe:	89 89       	ldd	r24, Y+17	; 0x11
    1500:	9a 89       	ldd	r25, Y+18	; 0x12
    1502:	ab 89       	ldd	r26, Y+19	; 0x13
    1504:	bc 89       	ldd	r27, Y+20	; 0x14
    1506:	86 83       	std	Z+6, r24	; 0x06
    1508:	97 83       	std	Z+7, r25	; 0x07
    150a:	a0 87       	std	Z+8, r26	; 0x08
    150c:	b1 87       	std	Z+9, r27	; 0x09
    150e:	8d 89       	ldd	r24, Y+21	; 0x15
    1510:	9e 89       	ldd	r25, Y+22	; 0x16
    1512:	af 89       	ldd	r26, Y+23	; 0x17
    1514:	b8 8d       	ldd	r27, Y+24	; 0x18
    1516:	82 87       	std	Z+10, r24	; 0x0a
    1518:	93 87       	std	Z+11, r25	; 0x0b
    151a:	a4 87       	std	Z+12, r26	; 0x0c
    151c:	b5 87       	std	Z+13, r27	; 0x0d
    151e:	0e 94 eb 1b 	call	0x37d6	; 0x37d6 <printf>
					printf("Motor 1: %f;  Motor 2: %f;  Motor 3: %f\n", (int) angles[0]*11.3778, (int) angles[1]*11.3778, (int) angles[2]*11.3778);
    1522:	0d b7       	in	r16, 0x3d	; 61
    1524:	1e b7       	in	r17, 0x3e	; 62
    1526:	0f 5f       	subi	r16, 0xFF	; 255
    1528:	1f 4f       	sbci	r17, 0xFF	; 255
    152a:	88 ef       	ldi	r24, 0xF8	; 248
    152c:	94 e0       	ldi	r25, 0x04	; 4
    152e:	f8 01       	movw	r30, r16
    1530:	91 83       	std	Z+1, r25	; 0x01
    1532:	80 83       	st	Z, r24
    1534:	6d 85       	ldd	r22, Y+13	; 0x0d
    1536:	7e 85       	ldd	r23, Y+14	; 0x0e
    1538:	8f 85       	ldd	r24, Y+15	; 0x0f
    153a:	98 89       	ldd	r25, Y+16	; 0x10
    153c:	0e 94 20 15 	call	0x2a40	; 0x2a40 <__fixsfsi>
    1540:	88 27       	eor	r24, r24
    1542:	77 fd       	sbrc	r23, 7
    1544:	80 95       	com	r24
    1546:	98 2f       	mov	r25, r24
    1548:	0e 94 53 15 	call	0x2aa6	; 0x2aa6 <__floatsisf>
    154c:	28 e7       	ldi	r18, 0x78	; 120
    154e:	3b e0       	ldi	r19, 0x0B	; 11
    1550:	46 e3       	ldi	r20, 0x36	; 54
    1552:	51 e4       	ldi	r21, 0x41	; 65
    1554:	0e 94 07 16 	call	0x2c0e	; 0x2c0e <__mulsf3>
    1558:	f8 01       	movw	r30, r16
    155a:	62 83       	std	Z+2, r22	; 0x02
    155c:	73 83       	std	Z+3, r23	; 0x03
    155e:	84 83       	std	Z+4, r24	; 0x04
    1560:	95 83       	std	Z+5, r25	; 0x05
    1562:	69 89       	ldd	r22, Y+17	; 0x11
    1564:	7a 89       	ldd	r23, Y+18	; 0x12
    1566:	8b 89       	ldd	r24, Y+19	; 0x13
    1568:	9c 89       	ldd	r25, Y+20	; 0x14
    156a:	0e 94 20 15 	call	0x2a40	; 0x2a40 <__fixsfsi>
    156e:	88 27       	eor	r24, r24
    1570:	77 fd       	sbrc	r23, 7
    1572:	80 95       	com	r24
    1574:	98 2f       	mov	r25, r24
    1576:	0e 94 53 15 	call	0x2aa6	; 0x2aa6 <__floatsisf>
    157a:	28 e7       	ldi	r18, 0x78	; 120
    157c:	3b e0       	ldi	r19, 0x0B	; 11
    157e:	46 e3       	ldi	r20, 0x36	; 54
    1580:	51 e4       	ldi	r21, 0x41	; 65
    1582:	0e 94 07 16 	call	0x2c0e	; 0x2c0e <__mulsf3>
    1586:	f8 01       	movw	r30, r16
    1588:	66 83       	std	Z+6, r22	; 0x06
    158a:	77 83       	std	Z+7, r23	; 0x07
    158c:	80 87       	std	Z+8, r24	; 0x08
    158e:	91 87       	std	Z+9, r25	; 0x09
    1590:	6d 89       	ldd	r22, Y+21	; 0x15
    1592:	7e 89       	ldd	r23, Y+22	; 0x16
    1594:	8f 89       	ldd	r24, Y+23	; 0x17
    1596:	98 8d       	ldd	r25, Y+24	; 0x18
    1598:	0e 94 20 15 	call	0x2a40	; 0x2a40 <__fixsfsi>
    159c:	88 27       	eor	r24, r24
    159e:	77 fd       	sbrc	r23, 7
    15a0:	80 95       	com	r24
    15a2:	98 2f       	mov	r25, r24
    15a4:	0e 94 53 15 	call	0x2aa6	; 0x2aa6 <__floatsisf>
    15a8:	28 e7       	ldi	r18, 0x78	; 120
    15aa:	3b e0       	ldi	r19, 0x0B	; 11
    15ac:	46 e3       	ldi	r20, 0x36	; 54
    15ae:	51 e4       	ldi	r21, 0x41	; 65
    15b0:	0e 94 07 16 	call	0x2c0e	; 0x2c0e <__mulsf3>
    15b4:	f8 01       	movw	r30, r16
    15b6:	62 87       	std	Z+10, r22	; 0x0a
    15b8:	73 87       	std	Z+11, r23	; 0x0b
    15ba:	84 87       	std	Z+12, r24	; 0x0c
    15bc:	95 87       	std	Z+13, r25	; 0x0d
    15be:	0e 94 eb 1b 	call	0x37d6	; 0x37d6 <printf>
					printf("Confirm? (y/n)\n");
    15c2:	8d b7       	in	r24, 0x3d	; 61
    15c4:	9e b7       	in	r25, 0x3e	; 62
    15c6:	0e 96       	adiw	r24, 0x0e	; 14
    15c8:	0f b6       	in	r0, 0x3f	; 63
    15ca:	f8 94       	cli
    15cc:	9e bf       	out	0x3e, r25	; 62
    15ce:	0f be       	out	0x3f, r0	; 63
    15d0:	8d bf       	out	0x3d, r24	; 61
    15d2:	81 e2       	ldi	r24, 0x21	; 33
    15d4:	95 e0       	ldi	r25, 0x05	; 5
    15d6:	0e 94 fc 1b 	call	0x37f8	; 0x37f8 <puts>
				}
			
				dataState = CONFIRM_DATA;
    15da:	e9 e0       	ldi	r30, 0x09	; 9
    15dc:	f0 e0       	ldi	r31, 0x00	; 0
    15de:	f0 93 bd 05 	sts	0x05BD, r31
    15e2:	e0 93 bc 05 	sts	0x05BC, r30
    15e6:	4c ce       	rjmp	.-872    	; 0x1280 <main+0x124>
			}
			else{
				printf("Point is not Valid.\n");
    15e8:	80 e3       	ldi	r24, 0x30	; 48
    15ea:	95 e0       	ldi	r25, 0x05	; 5
    15ec:	0e 94 fc 1b 	call	0x37f8	; 0x37f8 <puts>
				printf("Abort.\n\n");
    15f0:	84 e4       	ldi	r24, 0x44	; 68
    15f2:	95 e0       	ldi	r25, 0x05	; 5
    15f4:	0e 94 fc 1b 	call	0x37f8	; 0x37f8 <puts>
				dataState = OLD_DATA;
    15f8:	85 e0       	ldi	r24, 0x05	; 5
    15fa:	90 e0       	ldi	r25, 0x00	; 0
    15fc:	90 93 bd 05 	sts	0x05BD, r25
    1600:	80 93 bc 05 	sts	0x05BC, r24
    1604:	3d ce       	rjmp	.-902    	; 0x1280 <main+0x124>

			
			
			
		}
		else if((dataState == SEND_DATA)){
    1606:	0a 97       	sbiw	r24, 0x0a	; 10
    1608:	09 f0       	breq	.+2      	; 0x160c <main+0x4b0>
    160a:	3a ce       	rjmp	.-908    	; 0x1280 <main+0x124>
			dxl_write_word( 1, P_GOAL_POSITION_L, (int) angles[0]*11.3778 ); //4096./360=11.3778  <--- Ticks per degree
    160c:	6d 85       	ldd	r22, Y+13	; 0x0d
    160e:	7e 85       	ldd	r23, Y+14	; 0x0e
    1610:	8f 85       	ldd	r24, Y+15	; 0x0f
    1612:	98 89       	ldd	r25, Y+16	; 0x10
    1614:	0e 94 20 15 	call	0x2a40	; 0x2a40 <__fixsfsi>
    1618:	88 27       	eor	r24, r24
    161a:	77 fd       	sbrc	r23, 7
    161c:	80 95       	com	r24
    161e:	98 2f       	mov	r25, r24
    1620:	0e 94 53 15 	call	0x2aa6	; 0x2aa6 <__floatsisf>
    1624:	28 e7       	ldi	r18, 0x78	; 120
    1626:	3b e0       	ldi	r19, 0x0B	; 11
    1628:	46 e3       	ldi	r20, 0x36	; 54
    162a:	51 e4       	ldi	r21, 0x41	; 65
    162c:	0e 94 07 16 	call	0x2c0e	; 0x2c0e <__mulsf3>
    1630:	0e 94 20 15 	call	0x2a40	; 0x2a40 <__fixsfsi>
    1634:	9b 01       	movw	r18, r22
    1636:	ac 01       	movw	r20, r24
    1638:	81 e0       	ldi	r24, 0x01	; 1
    163a:	90 e0       	ldi	r25, 0x00	; 0
    163c:	6e e1       	ldi	r22, 0x1E	; 30
    163e:	70 e0       	ldi	r23, 0x00	; 0
    1640:	a9 01       	movw	r20, r18
    1642:	0e 94 7b 02 	call	0x4f6	; 0x4f6 <dxl_write_word>
			dxl_write_word( 2, P_GOAL_POSITION_L, (int) angles[1]*11.3778 ); //Command #2
    1646:	69 89       	ldd	r22, Y+17	; 0x11
    1648:	7a 89       	ldd	r23, Y+18	; 0x12
    164a:	8b 89       	ldd	r24, Y+19	; 0x13
    164c:	9c 89       	ldd	r25, Y+20	; 0x14
    164e:	0e 94 20 15 	call	0x2a40	; 0x2a40 <__fixsfsi>
    1652:	88 27       	eor	r24, r24
    1654:	77 fd       	sbrc	r23, 7
    1656:	80 95       	com	r24
    1658:	98 2f       	mov	r25, r24
    165a:	0e 94 53 15 	call	0x2aa6	; 0x2aa6 <__floatsisf>
    165e:	28 e7       	ldi	r18, 0x78	; 120
    1660:	3b e0       	ldi	r19, 0x0B	; 11
    1662:	46 e3       	ldi	r20, 0x36	; 54
    1664:	51 e4       	ldi	r21, 0x41	; 65
    1666:	0e 94 07 16 	call	0x2c0e	; 0x2c0e <__mulsf3>
    166a:	0e 94 20 15 	call	0x2a40	; 0x2a40 <__fixsfsi>
    166e:	9b 01       	movw	r18, r22
    1670:	ac 01       	movw	r20, r24
    1672:	82 e0       	ldi	r24, 0x02	; 2
    1674:	90 e0       	ldi	r25, 0x00	; 0
    1676:	6e e1       	ldi	r22, 0x1E	; 30
    1678:	70 e0       	ldi	r23, 0x00	; 0
    167a:	a9 01       	movw	r20, r18
    167c:	0e 94 7b 02 	call	0x4f6	; 0x4f6 <dxl_write_word>
			dxl_write_word( 3, P_GOAL_POSITION_L, (int) angles[2]*11.3778 ); //Command #3
    1680:	6d 89       	ldd	r22, Y+21	; 0x15
    1682:	7e 89       	ldd	r23, Y+22	; 0x16
    1684:	8f 89       	ldd	r24, Y+23	; 0x17
    1686:	98 8d       	ldd	r25, Y+24	; 0x18
    1688:	0e 94 20 15 	call	0x2a40	; 0x2a40 <__fixsfsi>
    168c:	88 27       	eor	r24, r24
    168e:	77 fd       	sbrc	r23, 7
    1690:	80 95       	com	r24
    1692:	98 2f       	mov	r25, r24
    1694:	0e 94 53 15 	call	0x2aa6	; 0x2aa6 <__floatsisf>
    1698:	28 e7       	ldi	r18, 0x78	; 120
    169a:	3b e0       	ldi	r19, 0x0B	; 11
    169c:	46 e3       	ldi	r20, 0x36	; 54
    169e:	51 e4       	ldi	r21, 0x41	; 65
    16a0:	0e 94 07 16 	call	0x2c0e	; 0x2c0e <__mulsf3>
    16a4:	0e 94 20 15 	call	0x2a40	; 0x2a40 <__fixsfsi>
    16a8:	9b 01       	movw	r18, r22
    16aa:	ac 01       	movw	r20, r24
    16ac:	83 e0       	ldi	r24, 0x03	; 3
    16ae:	90 e0       	ldi	r25, 0x00	; 0
    16b0:	6e e1       	ldi	r22, 0x1E	; 30
    16b2:	70 e0       	ldi	r23, 0x00	; 0
    16b4:	a9 01       	movw	r20, r18
    16b6:	0e 94 7b 02 	call	0x4f6	; 0x4f6 <dxl_write_word>
			printf("Command sent!\n\n");
    16ba:	8c e4       	ldi	r24, 0x4C	; 76
    16bc:	95 e0       	ldi	r25, 0x05	; 5
    16be:	0e 94 fc 1b 	call	0x37f8	; 0x37f8 <puts>
			dataState = OLD_DATA;
    16c2:	e5 e0       	ldi	r30, 0x05	; 5
    16c4:	f0 e0       	ldi	r31, 0x00	; 0
    16c6:	f0 93 bd 05 	sts	0x05BD, r31
    16ca:	e0 93 bc 05 	sts	0x05BC, r30
    16ce:	d8 cd       	rjmp	.-1104   	; 0x1280 <main+0x124>

000016d0 <pointToIndex>:
 * Returns the index in the lookup table corresponding to the point 'point' on
 * the corresponding 'axis' ('x', 'y', or 'z').
 */
int pointToIndex(char axis, double point)
{
    if (axis == 'x')
    16d0:	88 37       	cpi	r24, 0x78	; 120
    16d2:	59 f4       	brne	.+22     	; 0x16ea <pointToIndex+0x1a>
        return (int) ((point - X_TABLE_MIN ) / X_TABLE_RES);
    16d4:	cb 01       	movw	r24, r22
    16d6:	ba 01       	movw	r22, r20
    16d8:	20 e0       	ldi	r18, 0x00	; 0
    16da:	30 e0       	ldi	r19, 0x00	; 0
    16dc:	40 ee       	ldi	r20, 0xE0	; 224
    16de:	50 e4       	ldi	r21, 0x40	; 64
    16e0:	0e 94 50 14 	call	0x28a0	; 0x28a0 <__addsf3>
    16e4:	0e 94 20 15 	call	0x2a40	; 0x2a40 <__fixsfsi>
    16e8:	28 c0       	rjmp	.+80     	; 0x173a <pointToIndex+0x6a>
    else if (axis == 'y')
    16ea:	89 37       	cpi	r24, 0x79	; 121
    16ec:	59 f4       	brne	.+22     	; 0x1704 <pointToIndex+0x34>
        return (int) ((point - Y_TABLE_MIN ) / Y_TABLE_RES);
    16ee:	cb 01       	movw	r24, r22
    16f0:	ba 01       	movw	r22, r20
    16f2:	20 e0       	ldi	r18, 0x00	; 0
    16f4:	30 e0       	ldi	r19, 0x00	; 0
    16f6:	40 ee       	ldi	r20, 0xE0	; 224
    16f8:	50 e4       	ldi	r21, 0x40	; 64
    16fa:	0e 94 50 14 	call	0x28a0	; 0x28a0 <__addsf3>
    16fe:	0e 94 20 15 	call	0x2a40	; 0x2a40 <__fixsfsi>
    1702:	1b c0       	rjmp	.+54     	; 0x173a <pointToIndex+0x6a>
    else if (axis == 'z')
    1704:	8a 37       	cpi	r24, 0x7A	; 122
    1706:	59 f4       	brne	.+22     	; 0x171e <pointToIndex+0x4e>
        return (int) ((point - Z_TABLE_MIN ) / Z_TABLE_RES);
    1708:	cb 01       	movw	r24, r22
    170a:	ba 01       	movw	r22, r20
    170c:	20 e0       	ldi	r18, 0x00	; 0
    170e:	30 e0       	ldi	r19, 0x00	; 0
    1710:	40 e6       	ldi	r20, 0x60	; 96
    1712:	51 e4       	ldi	r21, 0x41	; 65
    1714:	0e 94 50 14 	call	0x28a0	; 0x28a0 <__addsf3>
    1718:	0e 94 20 15 	call	0x2a40	; 0x2a40 <__fixsfsi>
    171c:	0e c0       	rjmp	.+28     	; 0x173a <pointToIndex+0x6a>
    else
    {
        fprintf(stderr, "'axis' must be 'x', 'y', or 'z'.");
    171e:	20 91 aa 5c 	lds	r18, 0x5CAA
    1722:	30 91 ab 5c 	lds	r19, 0x5CAB
    1726:	81 e9       	ldi	r24, 0x91	; 145
    1728:	95 e0       	ldi	r25, 0x05	; 5
    172a:	61 e0       	ldi	r22, 0x01	; 1
    172c:	70 e0       	ldi	r23, 0x00	; 0
    172e:	40 e2       	ldi	r20, 0x20	; 32
    1730:	50 e0       	ldi	r21, 0x00	; 0
    1732:	0e 94 a8 1b 	call	0x3750	; 0x3750 <fwrite>
    1736:	6f ef       	ldi	r22, 0xFF	; 255
    1738:	7f ef       	ldi	r23, 0xFF	; 255
        return -1;
    }
}
    173a:	86 2f       	mov	r24, r22
    173c:	97 2f       	mov	r25, r23
    173e:	08 95       	ret

00001740 <indexToPoint>:
/**
 * Returns the coordinate on axis 'axis' ('x', 'y', or 'z') corresponding to
 * index 'index' from the lookup table.
 */
double indexToPoint(char axis, int index)
{
    1740:	9b 01       	movw	r18, r22
    if (axis == 'x')
    1742:	88 37       	cpi	r24, 0x78	; 120
    1744:	81 f4       	brne	.+32     	; 0x1766 <indexToPoint+0x26>
        return X_TABLE_MIN + X_TABLE_RES * index;
    1746:	b9 01       	movw	r22, r18
    1748:	88 27       	eor	r24, r24
    174a:	77 fd       	sbrc	r23, 7
    174c:	80 95       	com	r24
    174e:	98 2f       	mov	r25, r24
    1750:	0e 94 53 15 	call	0x2aa6	; 0x2aa6 <__floatsisf>
    1754:	20 e0       	ldi	r18, 0x00	; 0
    1756:	30 e0       	ldi	r19, 0x00	; 0
    1758:	40 ee       	ldi	r20, 0xE0	; 224
    175a:	50 e4       	ldi	r21, 0x40	; 64
    175c:	0e 94 4f 14 	call	0x289e	; 0x289e <__subsf3>
    1760:	e6 2f       	mov	r30, r22
    1762:	69 2f       	mov	r22, r25
    1764:	34 c0       	rjmp	.+104    	; 0x17ce <indexToPoint+0x8e>
    else if (axis == 'y')
    1766:	89 37       	cpi	r24, 0x79	; 121
    1768:	81 f4       	brne	.+32     	; 0x178a <indexToPoint+0x4a>
        return Y_TABLE_MIN + Y_TABLE_RES * index;
    176a:	b9 01       	movw	r22, r18
    176c:	88 27       	eor	r24, r24
    176e:	77 fd       	sbrc	r23, 7
    1770:	80 95       	com	r24
    1772:	98 2f       	mov	r25, r24
    1774:	0e 94 53 15 	call	0x2aa6	; 0x2aa6 <__floatsisf>
    1778:	20 e0       	ldi	r18, 0x00	; 0
    177a:	30 e0       	ldi	r19, 0x00	; 0
    177c:	40 ee       	ldi	r20, 0xE0	; 224
    177e:	50 e4       	ldi	r21, 0x40	; 64
    1780:	0e 94 4f 14 	call	0x289e	; 0x289e <__subsf3>
    1784:	e6 2f       	mov	r30, r22
    1786:	69 2f       	mov	r22, r25
    1788:	22 c0       	rjmp	.+68     	; 0x17ce <indexToPoint+0x8e>
    else if (axis == 'z')
    178a:	8a 37       	cpi	r24, 0x7A	; 122
    178c:	81 f4       	brne	.+32     	; 0x17ae <indexToPoint+0x6e>
        return Z_TABLE_MIN + Z_TABLE_RES * index;
    178e:	b9 01       	movw	r22, r18
    1790:	88 27       	eor	r24, r24
    1792:	77 fd       	sbrc	r23, 7
    1794:	80 95       	com	r24
    1796:	98 2f       	mov	r25, r24
    1798:	0e 94 53 15 	call	0x2aa6	; 0x2aa6 <__floatsisf>
    179c:	20 e0       	ldi	r18, 0x00	; 0
    179e:	30 e0       	ldi	r19, 0x00	; 0
    17a0:	40 e6       	ldi	r20, 0x60	; 96
    17a2:	51 e4       	ldi	r21, 0x41	; 65
    17a4:	0e 94 4f 14 	call	0x289e	; 0x289e <__subsf3>
    17a8:	e6 2f       	mov	r30, r22
    17aa:	69 2f       	mov	r22, r25
    17ac:	10 c0       	rjmp	.+32     	; 0x17ce <indexToPoint+0x8e>
    else
    {
        fprintf(stderr, "'axis' must be 'x', 'y', or 'z'.");
    17ae:	20 91 aa 5c 	lds	r18, 0x5CAA
    17b2:	30 91 ab 5c 	lds	r19, 0x5CAB
    17b6:	81 e9       	ldi	r24, 0x91	; 145
    17b8:	95 e0       	ldi	r25, 0x05	; 5
    17ba:	61 e0       	ldi	r22, 0x01	; 1
    17bc:	70 e0       	ldi	r23, 0x00	; 0
    17be:	40 e2       	ldi	r20, 0x20	; 32
    17c0:	50 e0       	ldi	r21, 0x00	; 0
    17c2:	0e 94 a8 1b 	call	0x3750	; 0x3750 <fwrite>
    17c6:	e0 e0       	ldi	r30, 0x00	; 0
    17c8:	70 e0       	ldi	r23, 0x00	; 0
    17ca:	80 ec       	ldi	r24, 0xC0	; 192
    17cc:	6f e7       	ldi	r22, 0x7F	; 127
        return NAN;
    }
}
    17ce:	56 2f       	mov	r21, r22
    17d0:	6e 2f       	mov	r22, r30
    17d2:	95 2f       	mov	r25, r21
    17d4:	08 95       	ret

000017d6 <lookupAngles>:
 * 'angles'. If no solution exists, sets 'angles[0]', 'angles[1]', and
 * 'angles[2]' equal to NAN.
 */
void lookupAngles(double inverseTable[X_TABLE_DIM][Y_TABLE_DIM][Z_TABLE_DIM][3],
                  double* angles, struct point p)
{
    17d6:	2f 92       	push	r2
    17d8:	3f 92       	push	r3
    17da:	4f 92       	push	r4
    17dc:	5f 92       	push	r5
    17de:	6f 92       	push	r6
    17e0:	7f 92       	push	r7
    17e2:	8f 92       	push	r8
    17e4:	9f 92       	push	r9
    17e6:	af 92       	push	r10
    17e8:	bf 92       	push	r11
    17ea:	cf 92       	push	r12
    17ec:	df 92       	push	r13
    17ee:	ef 92       	push	r14
    17f0:	ff 92       	push	r15
    17f2:	0f 93       	push	r16
    17f4:	1f 93       	push	r17
    17f6:	df 93       	push	r29
    17f8:	cf 93       	push	r28
    17fa:	cd b7       	in	r28, 0x3d	; 61
    17fc:	de b7       	in	r29, 0x3e	; 62
    17fe:	c8 51       	subi	r28, 0x18	; 24
    1800:	d1 40       	sbci	r29, 0x01	; 1
    1802:	0f b6       	in	r0, 0x3f	; 63
    1804:	f8 94       	cli
    1806:	de bf       	out	0x3e, r29	; 62
    1808:	0f be       	out	0x3f, r0	; 63
    180a:	cd bf       	out	0x3d, r28	; 61
    180c:	c3 51       	subi	r28, 0x13	; 19
    180e:	df 4f       	sbci	r29, 0xFF	; 255
    1810:	99 83       	std	Y+1, r25	; 0x01
    1812:	88 83       	st	Y, r24
    1814:	cd 5e       	subi	r28, 0xED	; 237
    1816:	d0 40       	sbci	r29, 0x00	; 0
    1818:	c1 51       	subi	r28, 0x11	; 17
    181a:	df 4f       	sbci	r29, 0xFF	; 255
    181c:	79 83       	std	Y+1, r23	; 0x01
    181e:	68 83       	st	Y, r22
    1820:	cf 5e       	subi	r28, 0xEF	; 239
    1822:	d0 40       	sbci	r29, 0x00	; 0
    1824:	fe 01       	movw	r30, r28
    1826:	ef 59       	subi	r30, 0x9F	; 159
    1828:	ff 4f       	sbci	r31, 0xFF	; 255
    182a:	a0 82       	st	Z, r10
    182c:	b1 82       	std	Z+1, r11	; 0x01
    182e:	c2 82       	std	Z+2, r12	; 0x02
    1830:	d3 82       	std	Z+3, r13	; 0x03
    1832:	e4 82       	std	Z+4, r14	; 0x04
    1834:	f5 82       	std	Z+5, r15	; 0x05
    1836:	06 83       	std	Z+6, r16	; 0x06
    1838:	17 83       	std	Z+7, r17	; 0x07
    183a:	20 87       	std	Z+8, r18	; 0x08
    183c:	31 87       	std	Z+9, r19	; 0x09
    183e:	42 87       	std	Z+10, r20	; 0x0a
    1840:	53 87       	std	Z+11, r21	; 0x0b
    1842:	a0 80       	ld	r10, Z
    1844:	b1 80       	ldd	r11, Z+1	; 0x01
    1846:	c2 80       	ldd	r12, Z+2	; 0x02
    1848:	d3 80       	ldd	r13, Z+3	; 0x03
    184a:	e9 96       	adiw	r28, 0x39	; 57
    184c:	ac ae       	std	Y+60, r10	; 0x3c
    184e:	bd ae       	std	Y+61, r11	; 0x3d
    1850:	ce ae       	std	Y+62, r12	; 0x3e
    1852:	df ae       	std	Y+63, r13	; 0x3f
    1854:	e9 97       	sbiw	r28, 0x39	; 57
    1856:	24 81       	ldd	r18, Z+4	; 0x04
    1858:	35 81       	ldd	r19, Z+5	; 0x05
    185a:	46 81       	ldd	r20, Z+6	; 0x06
    185c:	57 81       	ldd	r21, Z+7	; 0x07
    185e:	e5 96       	adiw	r28, 0x35	; 53
    1860:	2c af       	std	Y+60, r18	; 0x3c
    1862:	3d af       	std	Y+61, r19	; 0x3d
    1864:	4e af       	std	Y+62, r20	; 0x3e
    1866:	5f af       	std	Y+63, r21	; 0x3f
    1868:	e5 97       	sbiw	r28, 0x35	; 53
    186a:	40 85       	ldd	r20, Z+8	; 0x08
    186c:	51 85       	ldd	r21, Z+9	; 0x09
    186e:	62 85       	ldd	r22, Z+10	; 0x0a
    1870:	73 85       	ldd	r23, Z+11	; 0x0b
    1872:	e1 96       	adiw	r28, 0x31	; 49
    1874:	4c af       	std	Y+60, r20	; 0x3c
    1876:	5d af       	std	Y+61, r21	; 0x3d
    1878:	6e af       	std	Y+62, r22	; 0x3e
    187a:	7f af       	std	Y+63, r23	; 0x3f
    187c:	e1 97       	sbiw	r28, 0x31	; 49
    int DEBUG_PRINT = 0; /* Results in print statements for debugging. */
    /* First, check boundaries of table. */
    if (!(p.x >= X_TABLE_MIN &&
    187e:	c6 01       	movw	r24, r12
    1880:	b5 01       	movw	r22, r10
    1882:	20 e0       	ldi	r18, 0x00	; 0
    1884:	30 e0       	ldi	r19, 0x00	; 0
    1886:	40 ee       	ldi	r20, 0xE0	; 224
    1888:	50 ec       	ldi	r21, 0xC0	; 192
    188a:	0e 94 03 16 	call	0x2c06	; 0x2c06 <__gesf2>
    188e:	88 23       	and	r24, r24
    1890:	0c f4       	brge	.+2      	; 0x1894 <lookupAngles+0xbe>
    1892:	46 c0       	rjmp	.+140    	; 0x1920 <lookupAngles+0x14a>
    1894:	e9 96       	adiw	r28, 0x39	; 57
    1896:	6c ad       	ldd	r22, Y+60	; 0x3c
    1898:	7d ad       	ldd	r23, Y+61	; 0x3d
    189a:	8e ad       	ldd	r24, Y+62	; 0x3e
    189c:	9f ad       	ldd	r25, Y+63	; 0x3f
    189e:	e9 97       	sbiw	r28, 0x39	; 57
    18a0:	20 e0       	ldi	r18, 0x00	; 0
    18a2:	30 e0       	ldi	r19, 0x00	; 0
    18a4:	40 ee       	ldi	r20, 0xE0	; 224
    18a6:	50 e4       	ldi	r21, 0x40	; 64
    18a8:	0e 94 b4 14 	call	0x2968	; 0x2968 <__cmpsf2>
    18ac:	18 16       	cp	r1, r24
    18ae:	c4 f1       	brlt	.+112    	; 0x1920 <lookupAngles+0x14a>
    18b0:	e5 96       	adiw	r28, 0x35	; 53
    18b2:	6c ad       	ldd	r22, Y+60	; 0x3c
    18b4:	7d ad       	ldd	r23, Y+61	; 0x3d
    18b6:	8e ad       	ldd	r24, Y+62	; 0x3e
    18b8:	9f ad       	ldd	r25, Y+63	; 0x3f
    18ba:	e5 97       	sbiw	r28, 0x35	; 53
    18bc:	20 e0       	ldi	r18, 0x00	; 0
    18be:	30 e0       	ldi	r19, 0x00	; 0
    18c0:	40 ee       	ldi	r20, 0xE0	; 224
    18c2:	50 ec       	ldi	r21, 0xC0	; 192
    18c4:	0e 94 03 16 	call	0x2c06	; 0x2c06 <__gesf2>
    18c8:	88 23       	and	r24, r24
    18ca:	54 f1       	brlt	.+84     	; 0x1920 <lookupAngles+0x14a>
    18cc:	e5 96       	adiw	r28, 0x35	; 53
    18ce:	6c ad       	ldd	r22, Y+60	; 0x3c
    18d0:	7d ad       	ldd	r23, Y+61	; 0x3d
    18d2:	8e ad       	ldd	r24, Y+62	; 0x3e
    18d4:	9f ad       	ldd	r25, Y+63	; 0x3f
    18d6:	e5 97       	sbiw	r28, 0x35	; 53
    18d8:	20 e0       	ldi	r18, 0x00	; 0
    18da:	30 e0       	ldi	r19, 0x00	; 0
    18dc:	40 ee       	ldi	r20, 0xE0	; 224
    18de:	50 e4       	ldi	r21, 0x40	; 64
    18e0:	0e 94 b4 14 	call	0x2968	; 0x2968 <__cmpsf2>
    18e4:	18 16       	cp	r1, r24
    18e6:	e4 f0       	brlt	.+56     	; 0x1920 <lookupAngles+0x14a>
    18e8:	e1 96       	adiw	r28, 0x31	; 49
    18ea:	6c ad       	ldd	r22, Y+60	; 0x3c
    18ec:	7d ad       	ldd	r23, Y+61	; 0x3d
    18ee:	8e ad       	ldd	r24, Y+62	; 0x3e
    18f0:	9f ad       	ldd	r25, Y+63	; 0x3f
    18f2:	e1 97       	sbiw	r28, 0x31	; 49
    18f4:	20 e0       	ldi	r18, 0x00	; 0
    18f6:	30 e0       	ldi	r19, 0x00	; 0
    18f8:	40 e6       	ldi	r20, 0x60	; 96
    18fa:	51 ec       	ldi	r21, 0xC1	; 193
    18fc:	0e 94 03 16 	call	0x2c06	; 0x2c06 <__gesf2>
    1900:	88 23       	and	r24, r24
    1902:	74 f0       	brlt	.+28     	; 0x1920 <lookupAngles+0x14a>
    1904:	e1 96       	adiw	r28, 0x31	; 49
    1906:	6c ad       	ldd	r22, Y+60	; 0x3c
    1908:	7d ad       	ldd	r23, Y+61	; 0x3d
    190a:	8e ad       	ldd	r24, Y+62	; 0x3e
    190c:	9f ad       	ldd	r25, Y+63	; 0x3f
    190e:	e1 97       	sbiw	r28, 0x31	; 49
    1910:	20 e0       	ldi	r18, 0x00	; 0
    1912:	30 e0       	ldi	r19, 0x00	; 0
    1914:	40 ee       	ldi	r20, 0xE0	; 224
    1916:	50 ec       	ldi	r21, 0xC0	; 192
    1918:	0e 94 b4 14 	call	0x2968	; 0x2968 <__cmpsf2>
    191c:	18 16       	cp	r1, r24
    191e:	1c f5       	brge	.+70     	; 0x1966 <lookupAngles+0x190>
          p.y >= Y_TABLE_MIN &&
          p.y <= Y_TABLE_MAX &&
          p.z >= Z_TABLE_MIN &&
          p.z <= Z_TABLE_MAX))
    {
        angles[0] = NAN;
    1920:	80 e0       	ldi	r24, 0x00	; 0
    1922:	90 e0       	ldi	r25, 0x00	; 0
    1924:	a0 ec       	ldi	r26, 0xC0	; 192
    1926:	bf e7       	ldi	r27, 0x7F	; 127
    1928:	c1 51       	subi	r28, 0x11	; 17
    192a:	df 4f       	sbci	r29, 0xFF	; 255
    192c:	e8 81       	ld	r30, Y
    192e:	f9 81       	ldd	r31, Y+1	; 0x01
    1930:	cf 5e       	subi	r28, 0xEF	; 239
    1932:	d0 40       	sbci	r29, 0x00	; 0
    1934:	80 83       	st	Z, r24
    1936:	91 83       	std	Z+1, r25	; 0x01
    1938:	a2 83       	std	Z+2, r26	; 0x02
    193a:	b3 83       	std	Z+3, r27	; 0x03
        angles[1] = NAN;
    193c:	c1 51       	subi	r28, 0x11	; 17
    193e:	df 4f       	sbci	r29, 0xFF	; 255
    1940:	e8 81       	ld	r30, Y
    1942:	f9 81       	ldd	r31, Y+1	; 0x01
    1944:	cf 5e       	subi	r28, 0xEF	; 239
    1946:	d0 40       	sbci	r29, 0x00	; 0
    1948:	84 83       	std	Z+4, r24	; 0x04
    194a:	95 83       	std	Z+5, r25	; 0x05
    194c:	a6 83       	std	Z+6, r26	; 0x06
    194e:	b7 83       	std	Z+7, r27	; 0x07
        angles[2] = NAN;
    1950:	c1 51       	subi	r28, 0x11	; 17
    1952:	df 4f       	sbci	r29, 0xFF	; 255
    1954:	e8 81       	ld	r30, Y
    1956:	f9 81       	ldd	r31, Y+1	; 0x01
    1958:	cf 5e       	subi	r28, 0xEF	; 239
    195a:	d0 40       	sbci	r29, 0x00	; 0
    195c:	80 87       	std	Z+8, r24	; 0x08
    195e:	91 87       	std	Z+9, r25	; 0x09
    1960:	a2 87       	std	Z+10, r26	; 0x0a
    1962:	b3 87       	std	Z+11, r27	; 0x0b
    1964:	12 c7       	rjmp	.+3620   	; 0x278a <__stack+0x58b>
    }

    /* Second, find surrounding indices corresponding to point 'p'.
       'xInd, yInd, and zInd represent the indices corresponding to the lattice
       point just before 'p'. */
    int xInd = pointToIndex('x', p.x);
    1966:	88 e7       	ldi	r24, 0x78	; 120
    1968:	e9 96       	adiw	r28, 0x39	; 57
    196a:	4c ad       	ldd	r20, Y+60	; 0x3c
    196c:	5d ad       	ldd	r21, Y+61	; 0x3d
    196e:	6e ad       	ldd	r22, Y+62	; 0x3e
    1970:	7f ad       	ldd	r23, Y+63	; 0x3f
    1972:	e9 97       	sbiw	r28, 0x39	; 57
    1974:	ad de       	rcall	.-678    	; 0x16d0 <pointToIndex>
    1976:	f8 2e       	mov	r15, r24
    1978:	e9 2e       	mov	r14, r25
    int yInd = pointToIndex('y', p.y);
    197a:	89 e7       	ldi	r24, 0x79	; 121
    197c:	e5 96       	adiw	r28, 0x35	; 53
    197e:	4c ad       	ldd	r20, Y+60	; 0x3c
    1980:	5d ad       	ldd	r21, Y+61	; 0x3d
    1982:	6e ad       	ldd	r22, Y+62	; 0x3e
    1984:	7f ad       	ldd	r23, Y+63	; 0x3f
    1986:	e5 97       	sbiw	r28, 0x35	; 53
    1988:	a3 de       	rcall	.-698    	; 0x16d0 <pointToIndex>
    198a:	4c 01       	movw	r8, r24
    int zInd = pointToIndex('z', p.z);
    198c:	8a e7       	ldi	r24, 0x7A	; 122
    198e:	e1 96       	adiw	r28, 0x31	; 49
    1990:	4c ad       	ldd	r20, Y+60	; 0x3c
    1992:	5d ad       	ldd	r21, Y+61	; 0x3d
    1994:	6e ad       	ldd	r22, Y+62	; 0x3e
    1996:	7f ad       	ldd	r23, Y+63	; 0x3f
    1998:	e1 97       	sbiw	r28, 0x31	; 49
    199a:	9a de       	rcall	.-716    	; 0x16d0 <pointToIndex>
    199c:	8c 01       	movw	r16, r24

    /* Third, get the proportion of the distance between adjacent lattice points
       on each of the three axes. */
    double xProp = (p.x - indexToPoint('x', xInd)) / X_TABLE_RES;
    199e:	88 e7       	ldi	r24, 0x78	; 120
    19a0:	6f 2d       	mov	r22, r15
    19a2:	7e 2d       	mov	r23, r14
    19a4:	cd de       	rcall	.-614    	; 0x1740 <indexToPoint>
    19a6:	c7 51       	subi	r28, 0x17	; 23
    19a8:	df 4f       	sbci	r29, 0xFF	; 255
    19aa:	68 83       	st	Y, r22
    19ac:	79 83       	std	Y+1, r23	; 0x01
    19ae:	8a 83       	std	Y+2, r24	; 0x02
    19b0:	9b 83       	std	Y+3, r25	; 0x03
    19b2:	c9 5e       	subi	r28, 0xE9	; 233
    19b4:	d0 40       	sbci	r29, 0x00	; 0
    double yProp = (p.y - indexToPoint('y', yInd)) / Y_TABLE_RES;
    19b6:	89 e7       	ldi	r24, 0x79	; 121
    19b8:	b4 01       	movw	r22, r8
    19ba:	c2 de       	rcall	.-636    	; 0x1740 <indexToPoint>
    19bc:	cb 51       	subi	r28, 0x1B	; 27
    19be:	df 4f       	sbci	r29, 0xFF	; 255
    19c0:	68 83       	st	Y, r22
    19c2:	79 83       	std	Y+1, r23	; 0x01
    19c4:	8a 83       	std	Y+2, r24	; 0x02
    19c6:	9b 83       	std	Y+3, r25	; 0x03
    19c8:	c5 5e       	subi	r28, 0xE5	; 229
    19ca:	d0 40       	sbci	r29, 0x00	; 0
    double zProp = (p.z - indexToPoint('z', zInd)) / Z_TABLE_RES;
    19cc:	8a e7       	ldi	r24, 0x7A	; 122
    19ce:	b8 01       	movw	r22, r16
    19d0:	b7 de       	rcall	.-658    	; 0x1740 <indexToPoint>
    19d2:	cf 51       	subi	r28, 0x1F	; 31
    19d4:	df 4f       	sbci	r29, 0xFF	; 255
    19d6:	68 83       	st	Y, r22
    19d8:	79 83       	std	Y+1, r23	; 0x01
    19da:	8a 83       	std	Y+2, r24	; 0x02
    19dc:	9b 83       	std	Y+3, r25	; 0x03
    19de:	c1 5e       	subi	r28, 0xE1	; 225
    19e0:	d0 40       	sbci	r29, 0x00	; 0
       p7 = (xInd + 1, yInd + 1, zInd + 1)
       Note: 'api' is the set of angles corresponding to point 'i'.
    */
    double ap0[3] = {inverseTable[xInd][yInd][zInd][0],
                     inverseTable[xInd][yInd][zInd][1],
                     inverseTable[xInd][yInd][zInd][2]};
    19e2:	6f 2d       	mov	r22, r15
    19e4:	7e 2d       	mov	r23, r14
    19e6:	0f 2e       	mov	r0, r31
    19e8:	f0 ea       	ldi	r31, 0xA0	; 160
    19ea:	af 2e       	mov	r10, r31
    19ec:	f5 e0       	ldi	r31, 0x05	; 5
    19ee:	bf 2e       	mov	r11, r31
    19f0:	f0 2d       	mov	r31, r0
    19f2:	6a 9d       	mul	r22, r10
    19f4:	c0 01       	movw	r24, r0
    19f6:	6b 9d       	mul	r22, r11
    19f8:	90 0d       	add	r25, r0
    19fa:	7a 9d       	mul	r23, r10
    19fc:	90 0d       	add	r25, r0
    19fe:	11 24       	eor	r1, r1
    1a00:	c3 51       	subi	r28, 0x13	; 19
    1a02:	df 4f       	sbci	r29, 0xFF	; 255
    1a04:	48 81       	ld	r20, Y
    1a06:	59 81       	ldd	r21, Y+1	; 0x01
    1a08:	cd 5e       	subi	r28, 0xED	; 237
    1a0a:	d0 40       	sbci	r29, 0x00	; 0
    1a0c:	48 0f       	add	r20, r24
    1a0e:	59 1f       	adc	r21, r25
    1a10:	78 01       	movw	r14, r16
    1a12:	ee 0c       	add	r14, r14
    1a14:	ff 1c       	adc	r15, r15
    1a16:	e0 0e       	add	r14, r16
    1a18:	f1 1e       	adc	r15, r17
    1a1a:	ee 0c       	add	r14, r14
    1a1c:	ff 1c       	adc	r15, r15
    1a1e:	ee 0c       	add	r14, r14
    1a20:	ff 1c       	adc	r15, r15
    1a22:	0f 2e       	mov	r0, r31
    1a24:	f0 e6       	ldi	r31, 0x60	; 96
    1a26:	4f 2e       	mov	r4, r31
    1a28:	55 24       	eor	r5, r5
    1a2a:	f0 2d       	mov	r31, r0
    1a2c:	84 9c       	mul	r8, r4
    1a2e:	30 01       	movw	r6, r0
    1a30:	85 9c       	mul	r8, r5
    1a32:	70 0c       	add	r7, r0
    1a34:	94 9c       	mul	r9, r4
    1a36:	70 0c       	add	r7, r0
    1a38:	11 24       	eor	r1, r1
    1a3a:	17 01       	movw	r2, r14
    1a3c:	26 0c       	add	r2, r6
    1a3e:	37 1c       	adc	r3, r7
    1a40:	fa 01       	movw	r30, r20
    1a42:	e2 0d       	add	r30, r2
    1a44:	f3 1d       	adc	r31, r3
    1a46:	a4 80       	ldd	r10, Z+4	; 0x04
    1a48:	b5 80       	ldd	r11, Z+5	; 0x05
    1a4a:	c6 80       	ldd	r12, Z+6	; 0x06
    1a4c:	d7 80       	ldd	r13, Z+7	; 0x07
    1a4e:	80 85       	ldd	r24, Z+8	; 0x08
    1a50:	91 85       	ldd	r25, Z+9	; 0x09
    1a52:	a2 85       	ldd	r26, Z+10	; 0x0a
    1a54:	b3 85       	ldd	r27, Z+11	; 0x0b
    1a56:	cb 56       	subi	r28, 0x6B	; 107
    1a58:	df 4f       	sbci	r29, 0xFF	; 255
    1a5a:	88 83       	st	Y, r24
    1a5c:	99 83       	std	Y+1, r25	; 0x01
    1a5e:	aa 83       	std	Y+2, r26	; 0x02
    1a60:	bb 83       	std	Y+3, r27	; 0x03
    1a62:	c5 59       	subi	r28, 0x95	; 149
    1a64:	d0 40       	sbci	r29, 0x00	; 0
    1a66:	90 81       	ld	r25, Z
    1a68:	cf 5e       	subi	r28, 0xEF	; 239
    1a6a:	de 4f       	sbci	r29, 0xFE	; 254
    1a6c:	98 83       	st	Y, r25
    1a6e:	c1 51       	subi	r28, 0x11	; 17
    1a70:	d1 40       	sbci	r29, 0x01	; 1
    1a72:	a1 81       	ldd	r26, Z+1	; 0x01
    1a74:	ce 5e       	subi	r28, 0xEE	; 238
    1a76:	de 4f       	sbci	r29, 0xFE	; 254
    1a78:	a8 83       	st	Y, r26
    1a7a:	c2 51       	subi	r28, 0x12	; 18
    1a7c:	d1 40       	sbci	r29, 0x01	; 1
    1a7e:	b2 81       	ldd	r27, Z+2	; 0x02
    1a80:	cd 5e       	subi	r28, 0xED	; 237
    1a82:	de 4f       	sbci	r29, 0xFE	; 254
    1a84:	b8 83       	st	Y, r27
    1a86:	c3 51       	subi	r28, 0x13	; 19
    1a88:	d1 40       	sbci	r29, 0x01	; 1
    1a8a:	23 81       	ldd	r18, Z+3	; 0x03
    1a8c:	cc 5e       	subi	r28, 0xEC	; 236
    1a8e:	de 4f       	sbci	r29, 0xFE	; 254
    1a90:	28 83       	st	Y, r18
    1a92:	c4 51       	subi	r28, 0x14	; 20
    1a94:	d1 40       	sbci	r29, 0x01	; 1
    1a96:	89 2f       	mov	r24, r25
    1a98:	9a 2f       	mov	r25, r26
    1a9a:	ab 2f       	mov	r26, r27
    1a9c:	b2 2f       	mov	r27, r18
    1a9e:	89 83       	std	Y+1, r24	; 0x01
    1aa0:	9a 83       	std	Y+2, r25	; 0x02
    1aa2:	ab 83       	std	Y+3, r26	; 0x03
    1aa4:	bc 83       	std	Y+4, r27	; 0x04
    1aa6:	ad 82       	std	Y+5, r10	; 0x05
    1aa8:	be 82       	std	Y+6, r11	; 0x06
    1aaa:	cf 82       	std	Y+7, r12	; 0x07
    1aac:	d8 86       	std	Y+8, r13	; 0x08
    1aae:	cb 56       	subi	r28, 0x6B	; 107
    1ab0:	df 4f       	sbci	r29, 0xFF	; 255
    1ab2:	88 81       	ld	r24, Y
    1ab4:	99 81       	ldd	r25, Y+1	; 0x01
    1ab6:	aa 81       	ldd	r26, Y+2	; 0x02
    1ab8:	bb 81       	ldd	r27, Y+3	; 0x03
    1aba:	c5 59       	subi	r28, 0x95	; 149
    1abc:	d0 40       	sbci	r29, 0x00	; 0
    1abe:	89 87       	std	Y+9, r24	; 0x09
    1ac0:	9a 87       	std	Y+10, r25	; 0x0a
    1ac2:	ab 87       	std	Y+11, r26	; 0x0b
    1ac4:	bc 87       	std	Y+12, r27	; 0x0c
    double ap1[3] = {inverseTable[xInd][yInd][zInd + 1][0],
                     inverseTable[xInd][yInd][zInd + 1][1],
                     inverseTable[xInd][yInd][zInd + 1][2]};
    1ac6:	0f 5f       	subi	r16, 0xFF	; 255
    1ac8:	1f 4f       	sbci	r17, 0xFF	; 255
    1aca:	98 01       	movw	r18, r16
    1acc:	22 0f       	add	r18, r18
    1ace:	33 1f       	adc	r19, r19
    1ad0:	20 0f       	add	r18, r16
    1ad2:	31 1f       	adc	r19, r17
    1ad4:	22 0f       	add	r18, r18
    1ad6:	33 1f       	adc	r19, r19
    1ad8:	22 0f       	add	r18, r18
    1ada:	33 1f       	adc	r19, r19
    1adc:	89 01       	movw	r16, r18
    1ade:	06 0d       	add	r16, r6
    1ae0:	17 1d       	adc	r17, r7
    1ae2:	da 01       	movw	r26, r20
    1ae4:	a0 0f       	add	r26, r16
    1ae6:	b1 1f       	adc	r27, r17
    1ae8:	fd 01       	movw	r30, r26
    1aea:	a1 90       	ld	r10, Z+
    1aec:	b1 90       	ld	r11, Z+
    1aee:	c1 90       	ld	r12, Z+
    1af0:	d1 90       	ld	r13, Z+
    1af2:	c3 52       	subi	r28, 0x23	; 35
    1af4:	df 4f       	sbci	r29, 0xFF	; 255
    1af6:	a8 82       	st	Y, r10
    1af8:	b9 82       	std	Y+1, r11	; 0x01
    1afa:	ca 82       	std	Y+2, r12	; 0x02
    1afc:	db 82       	std	Y+3, r13	; 0x03
    1afe:	cd 5d       	subi	r28, 0xDD	; 221
    1b00:	d0 40       	sbci	r29, 0x00	; 0
    1b02:	a0 80       	ld	r10, Z
    1b04:	b1 80       	ldd	r11, Z+1	; 0x01
    1b06:	c2 80       	ldd	r12, Z+2	; 0x02
    1b08:	d3 80       	ldd	r13, Z+3	; 0x03
    1b0a:	cb 5e       	subi	r28, 0xEB	; 235
    1b0c:	de 4f       	sbci	r29, 0xFE	; 254
    1b0e:	a8 82       	st	Y, r10
    1b10:	b9 82       	std	Y+1, r11	; 0x01
    1b12:	ca 82       	std	Y+2, r12	; 0x02
    1b14:	db 82       	std	Y+3, r13	; 0x03
    1b16:	c5 51       	subi	r28, 0x15	; 21
    1b18:	d1 40       	sbci	r29, 0x01	; 1
    1b1a:	18 96       	adiw	r26, 0x08	; 8
    1b1c:	ad 90       	ld	r10, X+
    1b1e:	bd 90       	ld	r11, X+
    1b20:	cd 90       	ld	r12, X+
    1b22:	dc 90       	ld	r13, X
    1b24:	1b 97       	sbiw	r26, 0x0b	; 11
    1b26:	c3 57       	subi	r28, 0x73	; 115
    1b28:	df 4f       	sbci	r29, 0xFF	; 255
    1b2a:	a8 82       	st	Y, r10
    1b2c:	b9 82       	std	Y+1, r11	; 0x01
    1b2e:	ca 82       	std	Y+2, r12	; 0x02
    1b30:	db 82       	std	Y+3, r13	; 0x03
    1b32:	cd 58       	subi	r28, 0x8D	; 141
    1b34:	d0 40       	sbci	r29, 0x00	; 0
    double ap2[3] = {inverseTable[xInd][yInd + 1][zInd][0],
                     inverseTable[xInd][yInd + 1][zInd][1],
                     inverseTable[xInd][yInd + 1][zInd][2]};
    1b36:	08 94       	sec
    1b38:	81 1c       	adc	r8, r1
    1b3a:	91 1c       	adc	r9, r1
    1b3c:	84 9c       	mul	r8, r4
    1b3e:	c0 01       	movw	r24, r0
    1b40:	85 9c       	mul	r8, r5
    1b42:	90 0d       	add	r25, r0
    1b44:	94 9c       	mul	r9, r4
    1b46:	90 0d       	add	r25, r0
    1b48:	11 24       	eor	r1, r1
    1b4a:	e8 0e       	add	r14, r24
    1b4c:	f9 1e       	adc	r15, r25
    1b4e:	da 01       	movw	r26, r20
    1b50:	ae 0d       	add	r26, r14
    1b52:	bf 1d       	adc	r27, r15
    1b54:	fd 01       	movw	r30, r26
    1b56:	a1 90       	ld	r10, Z+
    1b58:	b1 90       	ld	r11, Z+
    1b5a:	c1 90       	ld	r12, Z+
    1b5c:	d1 90       	ld	r13, Z+
    1b5e:	c7 52       	subi	r28, 0x27	; 39
    1b60:	df 4f       	sbci	r29, 0xFF	; 255
    1b62:	a8 82       	st	Y, r10
    1b64:	b9 82       	std	Y+1, r11	; 0x01
    1b66:	ca 82       	std	Y+2, r12	; 0x02
    1b68:	db 82       	std	Y+3, r13	; 0x03
    1b6a:	c9 5d       	subi	r28, 0xD9	; 217
    1b6c:	d0 40       	sbci	r29, 0x00	; 0
    1b6e:	a0 80       	ld	r10, Z
    1b70:	b1 80       	ldd	r11, Z+1	; 0x01
    1b72:	c2 80       	ldd	r12, Z+2	; 0x02
    1b74:	d3 80       	ldd	r13, Z+3	; 0x03
    1b76:	cb 52       	subi	r28, 0x2B	; 43
    1b78:	df 4f       	sbci	r29, 0xFF	; 255
    1b7a:	a8 82       	st	Y, r10
    1b7c:	b9 82       	std	Y+1, r11	; 0x01
    1b7e:	ca 82       	std	Y+2, r12	; 0x02
    1b80:	db 82       	std	Y+3, r13	; 0x03
    1b82:	c5 5d       	subi	r28, 0xD5	; 213
    1b84:	d0 40       	sbci	r29, 0x00	; 0
    1b86:	18 96       	adiw	r26, 0x08	; 8
    1b88:	ad 90       	ld	r10, X+
    1b8a:	bd 90       	ld	r11, X+
    1b8c:	cd 90       	ld	r12, X+
    1b8e:	dc 90       	ld	r13, X
    1b90:	1b 97       	sbiw	r26, 0x0b	; 11
    1b92:	cb 57       	subi	r28, 0x7B	; 123
    1b94:	df 4f       	sbci	r29, 0xFF	; 255
    1b96:	a8 82       	st	Y, r10
    1b98:	b9 82       	std	Y+1, r11	; 0x01
    1b9a:	ca 82       	std	Y+2, r12	; 0x02
    1b9c:	db 82       	std	Y+3, r13	; 0x03
    1b9e:	c5 58       	subi	r28, 0x85	; 133
    1ba0:	d0 40       	sbci	r29, 0x00	; 0
    double ap3[3] = {inverseTable[xInd][yInd + 1][zInd + 1][0],
                     inverseTable[xInd][yInd + 1][zInd + 1][1],
                     inverseTable[xInd][yInd + 1][zInd + 1][2]};
    1ba2:	28 0f       	add	r18, r24
    1ba4:	39 1f       	adc	r19, r25
    1ba6:	42 0f       	add	r20, r18
    1ba8:	53 1f       	adc	r21, r19
    1baa:	fa 01       	movw	r30, r20
    1bac:	81 91       	ld	r24, Z+
    1bae:	91 91       	ld	r25, Z+
    1bb0:	a1 91       	ld	r26, Z+
    1bb2:	b1 91       	ld	r27, Z+
    1bb4:	cf 52       	subi	r28, 0x2F	; 47
    1bb6:	df 4f       	sbci	r29, 0xFF	; 255
    1bb8:	88 83       	st	Y, r24
    1bba:	99 83       	std	Y+1, r25	; 0x01
    1bbc:	aa 83       	std	Y+2, r26	; 0x02
    1bbe:	bb 83       	std	Y+3, r27	; 0x03
    1bc0:	c1 5d       	subi	r28, 0xD1	; 209
    1bc2:	d0 40       	sbci	r29, 0x00	; 0
    1bc4:	a0 80       	ld	r10, Z
    1bc6:	b1 80       	ldd	r11, Z+1	; 0x01
    1bc8:	c2 80       	ldd	r12, Z+2	; 0x02
    1bca:	d3 80       	ldd	r13, Z+3	; 0x03
    1bcc:	c3 53       	subi	r28, 0x33	; 51
    1bce:	df 4f       	sbci	r29, 0xFF	; 255
    1bd0:	a8 82       	st	Y, r10
    1bd2:	b9 82       	std	Y+1, r11	; 0x01
    1bd4:	ca 82       	std	Y+2, r12	; 0x02
    1bd6:	db 82       	std	Y+3, r13	; 0x03
    1bd8:	cd 5c       	subi	r28, 0xCD	; 205
    1bda:	d0 40       	sbci	r29, 0x00	; 0
    1bdc:	da 01       	movw	r26, r20
    1bde:	18 96       	adiw	r26, 0x08	; 8
    1be0:	8d 91       	ld	r24, X+
    1be2:	9d 91       	ld	r25, X+
    1be4:	0d 90       	ld	r0, X+
    1be6:	bc 91       	ld	r27, X
    1be8:	a0 2d       	mov	r26, r0
    1bea:	c3 58       	subi	r28, 0x83	; 131
    1bec:	df 4f       	sbci	r29, 0xFF	; 255
    1bee:	88 83       	st	Y, r24
    1bf0:	99 83       	std	Y+1, r25	; 0x01
    1bf2:	aa 83       	std	Y+2, r26	; 0x02
    1bf4:	bb 83       	std	Y+3, r27	; 0x03
    1bf6:	cd 57       	subi	r28, 0x7D	; 125
    1bf8:	d0 40       	sbci	r29, 0x00	; 0
    double ap4[3] = {inverseTable[xInd + 1][yInd][zInd][0],
                     inverseTable[xInd + 1][yInd][zInd][1],
                     inverseTable[xInd + 1][yInd][zInd][2]};
    1bfa:	6f 5f       	subi	r22, 0xFF	; 255
    1bfc:	7f 4f       	sbci	r23, 0xFF	; 255
    1bfe:	e0 ea       	ldi	r30, 0xA0	; 160
    1c00:	f5 e0       	ldi	r31, 0x05	; 5
    1c02:	6e 9f       	mul	r22, r30
    1c04:	c0 01       	movw	r24, r0
    1c06:	6f 9f       	mul	r22, r31
    1c08:	90 0d       	add	r25, r0
    1c0a:	7e 9f       	mul	r23, r30
    1c0c:	90 0d       	add	r25, r0
    1c0e:	11 24       	eor	r1, r1
    1c10:	c3 51       	subi	r28, 0x13	; 19
    1c12:	df 4f       	sbci	r29, 0xFF	; 255
    1c14:	a8 81       	ld	r26, Y
    1c16:	b9 81       	ldd	r27, Y+1	; 0x01
    1c18:	cd 5e       	subi	r28, 0xED	; 237
    1c1a:	d0 40       	sbci	r29, 0x00	; 0
    1c1c:	a8 0f       	add	r26, r24
    1c1e:	b9 1f       	adc	r27, r25
    1c20:	cd 01       	movw	r24, r26
    1c22:	82 0d       	add	r24, r2
    1c24:	93 1d       	adc	r25, r3
    1c26:	fc 01       	movw	r30, r24
    1c28:	21 90       	ld	r2, Z+
    1c2a:	31 90       	ld	r3, Z+
    1c2c:	41 90       	ld	r4, Z+
    1c2e:	51 90       	ld	r5, Z+
    1c30:	60 80       	ld	r6, Z
    1c32:	71 80       	ldd	r7, Z+1	; 0x01
    1c34:	82 80       	ldd	r8, Z+2	; 0x02
    1c36:	93 80       	ldd	r9, Z+3	; 0x03
    1c38:	fc 01       	movw	r30, r24
    1c3a:	a0 84       	ldd	r10, Z+8	; 0x08
    1c3c:	b1 84       	ldd	r11, Z+9	; 0x09
    1c3e:	c2 84       	ldd	r12, Z+10	; 0x0a
    1c40:	d3 84       	ldd	r13, Z+11	; 0x0b
    1c42:	cf 56       	subi	r28, 0x6F	; 111
    1c44:	df 4f       	sbci	r29, 0xFF	; 255
    1c46:	a8 82       	st	Y, r10
    1c48:	b9 82       	std	Y+1, r11	; 0x01
    1c4a:	ca 82       	std	Y+2, r12	; 0x02
    1c4c:	db 82       	std	Y+3, r13	; 0x03
    1c4e:	c1 59       	subi	r28, 0x91	; 145
    1c50:	d0 40       	sbci	r29, 0x00	; 0
    double ap5[3] = {inverseTable[xInd + 1][yInd][zInd + 1][0],
                     inverseTable[xInd + 1][yInd][zInd + 1][1],
                     inverseTable[xInd + 1][yInd][zInd + 1][2]};
    1c52:	cd 01       	movw	r24, r26
    1c54:	80 0f       	add	r24, r16
    1c56:	91 1f       	adc	r25, r17
    1c58:	fc 01       	movw	r30, r24
    1c5a:	a1 90       	ld	r10, Z+
    1c5c:	b1 90       	ld	r11, Z+
    1c5e:	c1 90       	ld	r12, Z+
    1c60:	d1 90       	ld	r13, Z+
    1c62:	c7 53       	subi	r28, 0x37	; 55
    1c64:	df 4f       	sbci	r29, 0xFF	; 255
    1c66:	a8 82       	st	Y, r10
    1c68:	b9 82       	std	Y+1, r11	; 0x01
    1c6a:	ca 82       	std	Y+2, r12	; 0x02
    1c6c:	db 82       	std	Y+3, r13	; 0x03
    1c6e:	c9 5c       	subi	r28, 0xC9	; 201
    1c70:	d0 40       	sbci	r29, 0x00	; 0
    1c72:	40 81       	ld	r20, Z
    1c74:	51 81       	ldd	r21, Z+1	; 0x01
    1c76:	62 81       	ldd	r22, Z+2	; 0x02
    1c78:	73 81       	ldd	r23, Z+3	; 0x03
    1c7a:	cb 53       	subi	r28, 0x3B	; 59
    1c7c:	df 4f       	sbci	r29, 0xFF	; 255
    1c7e:	48 83       	st	Y, r20
    1c80:	59 83       	std	Y+1, r21	; 0x01
    1c82:	6a 83       	std	Y+2, r22	; 0x02
    1c84:	7b 83       	std	Y+3, r23	; 0x03
    1c86:	c5 5c       	subi	r28, 0xC5	; 197
    1c88:	d0 40       	sbci	r29, 0x00	; 0
    1c8a:	fc 01       	movw	r30, r24
    1c8c:	a0 84       	ldd	r10, Z+8	; 0x08
    1c8e:	b1 84       	ldd	r11, Z+9	; 0x09
    1c90:	c2 84       	ldd	r12, Z+10	; 0x0a
    1c92:	d3 84       	ldd	r13, Z+11	; 0x0b
    1c94:	c7 57       	subi	r28, 0x77	; 119
    1c96:	df 4f       	sbci	r29, 0xFF	; 255
    1c98:	a8 82       	st	Y, r10
    1c9a:	b9 82       	std	Y+1, r11	; 0x01
    1c9c:	ca 82       	std	Y+2, r12	; 0x02
    1c9e:	db 82       	std	Y+3, r13	; 0x03
    1ca0:	c9 58       	subi	r28, 0x89	; 137
    1ca2:	d0 40       	sbci	r29, 0x00	; 0
    double ap6[3] = {inverseTable[xInd + 1][yInd + 1][zInd][0],
                     inverseTable[xInd + 1][yInd + 1][zInd][1],
                     inverseTable[xInd + 1][yInd + 1][zInd][2]};
    1ca4:	cd 01       	movw	r24, r26
    1ca6:	8e 0d       	add	r24, r14
    1ca8:	9f 1d       	adc	r25, r15
    1caa:	fc 01       	movw	r30, r24
    1cac:	a1 90       	ld	r10, Z+
    1cae:	b1 90       	ld	r11, Z+
    1cb0:	c1 90       	ld	r12, Z+
    1cb2:	d1 90       	ld	r13, Z+
    1cb4:	cf 53       	subi	r28, 0x3F	; 63
    1cb6:	df 4f       	sbci	r29, 0xFF	; 255
    1cb8:	a8 82       	st	Y, r10
    1cba:	b9 82       	std	Y+1, r11	; 0x01
    1cbc:	ca 82       	std	Y+2, r12	; 0x02
    1cbe:	db 82       	std	Y+3, r13	; 0x03
    1cc0:	c1 5c       	subi	r28, 0xC1	; 193
    1cc2:	d0 40       	sbci	r29, 0x00	; 0
    1cc4:	e0 80       	ld	r14, Z
    1cc6:	f1 80       	ldd	r15, Z+1	; 0x01
    1cc8:	02 81       	ldd	r16, Z+2	; 0x02
    1cca:	13 81       	ldd	r17, Z+3	; 0x03
    1ccc:	fc 01       	movw	r30, r24
    1cce:	40 85       	ldd	r20, Z+8	; 0x08
    1cd0:	51 85       	ldd	r21, Z+9	; 0x09
    1cd2:	62 85       	ldd	r22, Z+10	; 0x0a
    1cd4:	73 85       	ldd	r23, Z+11	; 0x0b
    1cd6:	cf 57       	subi	r28, 0x7F	; 127
    1cd8:	df 4f       	sbci	r29, 0xFF	; 255
    1cda:	48 83       	st	Y, r20
    1cdc:	59 83       	std	Y+1, r21	; 0x01
    1cde:	6a 83       	std	Y+2, r22	; 0x02
    1ce0:	7b 83       	std	Y+3, r23	; 0x03
    1ce2:	c1 58       	subi	r28, 0x81	; 129
    1ce4:	d0 40       	sbci	r29, 0x00	; 0
    double ap7[3] = {inverseTable[xInd + 1][yInd + 1][zInd + 1][0],
                     inverseTable[xInd + 1][yInd + 1][zInd + 1][1],
                     inverseTable[xInd + 1][yInd + 1][zInd + 1][2]};
    1ce6:	a2 0f       	add	r26, r18
    1ce8:	b3 1f       	adc	r27, r19
    1cea:	fd 01       	movw	r30, r26
    1cec:	a1 90       	ld	r10, Z+
    1cee:	b1 90       	ld	r11, Z+
    1cf0:	c1 90       	ld	r12, Z+
    1cf2:	d1 90       	ld	r13, Z+
    1cf4:	c3 54       	subi	r28, 0x43	; 67
    1cf6:	df 4f       	sbci	r29, 0xFF	; 255
    1cf8:	a8 82       	st	Y, r10
    1cfa:	b9 82       	std	Y+1, r11	; 0x01
    1cfc:	ca 82       	std	Y+2, r12	; 0x02
    1cfe:	db 82       	std	Y+3, r13	; 0x03
    1d00:	cd 5b       	subi	r28, 0xBD	; 189
    1d02:	d0 40       	sbci	r29, 0x00	; 0
    1d04:	20 81       	ld	r18, Z
    1d06:	31 81       	ldd	r19, Z+1	; 0x01
    1d08:	42 81       	ldd	r20, Z+2	; 0x02
    1d0a:	53 81       	ldd	r21, Z+3	; 0x03
    1d0c:	c7 54       	subi	r28, 0x47	; 71
    1d0e:	df 4f       	sbci	r29, 0xFF	; 255
    1d10:	28 83       	st	Y, r18
    1d12:	39 83       	std	Y+1, r19	; 0x01
    1d14:	4a 83       	std	Y+2, r20	; 0x02
    1d16:	5b 83       	std	Y+3, r21	; 0x03
    1d18:	c9 5b       	subi	r28, 0xB9	; 185
    1d1a:	d0 40       	sbci	r29, 0x00	; 0
    1d1c:	18 96       	adiw	r26, 0x08	; 8
    1d1e:	4d 91       	ld	r20, X+
    1d20:	5d 91       	ld	r21, X+
    1d22:	6d 91       	ld	r22, X+
    1d24:	7c 91       	ld	r23, X
    1d26:	1b 97       	sbiw	r26, 0x0b	; 11
    1d28:	ed 96       	adiw	r28, 0x3d	; 61
    1d2a:	4c af       	std	Y+60, r20	; 0x3c
    1d2c:	5d af       	std	Y+61, r21	; 0x3d
    1d2e:	6e af       	std	Y+62, r22	; 0x3e
    1d30:	7f af       	std	Y+63, r23	; 0x3f
    1d32:	ed 97       	sbiw	r28, 0x3d	; 61
    int i;
    /* Ideally should iterate i = 0, 1, 2, but can same time by only checking
       i = 0 case. */
    for (i = 0; i < 1; i++)
    {
        if (isnan(ap0[i]) || isnan(ap1[i]) || isnan(ap2[i]) || isnan(ap3[i]) ||
    1d34:	cf 5e       	subi	r28, 0xEF	; 239
    1d36:	de 4f       	sbci	r29, 0xFE	; 254
    1d38:	88 81       	ld	r24, Y
    1d3a:	c1 51       	subi	r28, 0x11	; 17
    1d3c:	d1 40       	sbci	r29, 0x01	; 1
    1d3e:	ce 5e       	subi	r28, 0xEE	; 238
    1d40:	de 4f       	sbci	r29, 0xFE	; 254
    1d42:	98 81       	ld	r25, Y
    1d44:	c2 51       	subi	r28, 0x12	; 18
    1d46:	d1 40       	sbci	r29, 0x01	; 1
    1d48:	cd 5e       	subi	r28, 0xED	; 237
    1d4a:	de 4f       	sbci	r29, 0xFE	; 254
    1d4c:	a8 81       	ld	r26, Y
    1d4e:	c3 51       	subi	r28, 0x13	; 19
    1d50:	d1 40       	sbci	r29, 0x01	; 1
    1d52:	cc 5e       	subi	r28, 0xEC	; 236
    1d54:	de 4f       	sbci	r29, 0xFE	; 254
    1d56:	b8 81       	ld	r27, Y
    1d58:	c4 51       	subi	r28, 0x14	; 20
    1d5a:	d1 40       	sbci	r29, 0x01	; 1
    1d5c:	cb 54       	subi	r28, 0x4B	; 75
    1d5e:	df 4f       	sbci	r29, 0xFF	; 255
    1d60:	88 83       	st	Y, r24
    1d62:	99 83       	std	Y+1, r25	; 0x01
    1d64:	aa 83       	std	Y+2, r26	; 0x02
    1d66:	bb 83       	std	Y+3, r27	; 0x03
    1d68:	c5 5b       	subi	r28, 0xB5	; 181
    1d6a:	d0 40       	sbci	r29, 0x00	; 0
    1d6c:	bc 01       	movw	r22, r24
    1d6e:	cd 01       	movw	r24, r26
    1d70:	9b 01       	movw	r18, r22
    1d72:	ac 01       	movw	r20, r24
    1d74:	af d7       	rcall	.+3934   	; 0x2cd4 <__unordsf2>
    1d76:	88 23       	and	r24, r24
    1d78:	09 f0       	breq	.+2      	; 0x1d7c <lookupAngles+0x5a6>
    1d7a:	e5 c4       	rjmp	.+2506   	; 0x2746 <__stack+0x547>
    double ap0[3] = {inverseTable[xInd][yInd][zInd][0],
                     inverseTable[xInd][yInd][zInd][1],
                     inverseTable[xInd][yInd][zInd][2]};
    double ap1[3] = {inverseTable[xInd][yInd][zInd + 1][0],
                     inverseTable[xInd][yInd][zInd + 1][1],
                     inverseTable[xInd][yInd][zInd + 1][2]};
    1d7c:	cb 5e       	subi	r28, 0xEB	; 235
    1d7e:	de 4f       	sbci	r29, 0xFE	; 254
    1d80:	68 81       	ld	r22, Y
    1d82:	79 81       	ldd	r23, Y+1	; 0x01
    1d84:	8a 81       	ldd	r24, Y+2	; 0x02
    1d86:	9b 81       	ldd	r25, Y+3	; 0x03
    1d88:	c5 51       	subi	r28, 0x15	; 21
    1d8a:	d1 40       	sbci	r29, 0x01	; 1
    1d8c:	69 8b       	std	Y+17, r22	; 0x11
    1d8e:	7a 8b       	std	Y+18, r23	; 0x12
    1d90:	8b 8b       	std	Y+19, r24	; 0x13
    1d92:	9c 8b       	std	Y+20, r25	; 0x14
    int i;
    /* Ideally should iterate i = 0, 1, 2, but can same time by only checking
       i = 0 case. */
    for (i = 0; i < 1; i++)
    {
        if (isnan(ap0[i]) || isnan(ap1[i]) || isnan(ap2[i]) || isnan(ap3[i]) ||
    1d94:	c3 52       	subi	r28, 0x23	; 35
    1d96:	df 4f       	sbci	r29, 0xFF	; 255
    1d98:	88 81       	ld	r24, Y
    1d9a:	99 81       	ldd	r25, Y+1	; 0x01
    1d9c:	aa 81       	ldd	r26, Y+2	; 0x02
    1d9e:	bb 81       	ldd	r27, Y+3	; 0x03
    1da0:	cd 5d       	subi	r28, 0xDD	; 221
    1da2:	d0 40       	sbci	r29, 0x00	; 0
    1da4:	cf 54       	subi	r28, 0x4F	; 79
    1da6:	df 4f       	sbci	r29, 0xFF	; 255
    1da8:	88 83       	st	Y, r24
    1daa:	99 83       	std	Y+1, r25	; 0x01
    1dac:	aa 83       	std	Y+2, r26	; 0x02
    1dae:	bb 83       	std	Y+3, r27	; 0x03
    1db0:	c1 5b       	subi	r28, 0xB1	; 177
    1db2:	d0 40       	sbci	r29, 0x00	; 0
    1db4:	bc 01       	movw	r22, r24
    1db6:	cd 01       	movw	r24, r26
    1db8:	9b 01       	movw	r18, r22
    1dba:	ac 01       	movw	r20, r24
    1dbc:	8b d7       	rcall	.+3862   	; 0x2cd4 <__unordsf2>
    1dbe:	88 23       	and	r24, r24
    1dc0:	09 f0       	breq	.+2      	; 0x1dc4 <lookupAngles+0x5ee>
    1dc2:	c1 c4       	rjmp	.+2434   	; 0x2746 <__stack+0x547>
    double ap1[3] = {inverseTable[xInd][yInd][zInd + 1][0],
                     inverseTable[xInd][yInd][zInd + 1][1],
                     inverseTable[xInd][yInd][zInd + 1][2]};
    double ap2[3] = {inverseTable[xInd][yInd + 1][zInd][0],
                     inverseTable[xInd][yInd + 1][zInd][1],
                     inverseTable[xInd][yInd + 1][zInd][2]};
    1dc4:	cb 52       	subi	r28, 0x2B	; 43
    1dc6:	df 4f       	sbci	r29, 0xFF	; 255
    1dc8:	a8 80       	ld	r10, Y
    1dca:	b9 80       	ldd	r11, Y+1	; 0x01
    1dcc:	ca 80       	ldd	r12, Y+2	; 0x02
    1dce:	db 80       	ldd	r13, Y+3	; 0x03
    1dd0:	c5 5d       	subi	r28, 0xD5	; 213
    1dd2:	d0 40       	sbci	r29, 0x00	; 0
    1dd4:	ad 8e       	std	Y+29, r10	; 0x1d
    1dd6:	be 8e       	std	Y+30, r11	; 0x1e
    1dd8:	cf 8e       	std	Y+31, r12	; 0x1f
    1dda:	d8 a2       	std	Y+32, r13	; 0x20
    int i;
    /* Ideally should iterate i = 0, 1, 2, but can same time by only checking
       i = 0 case. */
    for (i = 0; i < 1; i++)
    {
        if (isnan(ap0[i]) || isnan(ap1[i]) || isnan(ap2[i]) || isnan(ap3[i]) ||
    1ddc:	c7 52       	subi	r28, 0x27	; 39
    1dde:	df 4f       	sbci	r29, 0xFF	; 255
    1de0:	28 81       	ld	r18, Y
    1de2:	39 81       	ldd	r19, Y+1	; 0x01
    1de4:	4a 81       	ldd	r20, Y+2	; 0x02
    1de6:	5b 81       	ldd	r21, Y+3	; 0x03
    1de8:	c9 5d       	subi	r28, 0xD9	; 217
    1dea:	d0 40       	sbci	r29, 0x00	; 0
    1dec:	c3 55       	subi	r28, 0x53	; 83
    1dee:	df 4f       	sbci	r29, 0xFF	; 255
    1df0:	28 83       	st	Y, r18
    1df2:	39 83       	std	Y+1, r19	; 0x01
    1df4:	4a 83       	std	Y+2, r20	; 0x02
    1df6:	5b 83       	std	Y+3, r21	; 0x03
    1df8:	cd 5a       	subi	r28, 0xAD	; 173
    1dfa:	d0 40       	sbci	r29, 0x00	; 0
    1dfc:	ca 01       	movw	r24, r20
    1dfe:	b9 01       	movw	r22, r18
    1e00:	69 d7       	rcall	.+3794   	; 0x2cd4 <__unordsf2>
    1e02:	88 23       	and	r24, r24
    1e04:	09 f0       	breq	.+2      	; 0x1e08 <lookupAngles+0x632>
    1e06:	9f c4       	rjmp	.+2366   	; 0x2746 <__stack+0x547>
    double ap2[3] = {inverseTable[xInd][yInd + 1][zInd][0],
                     inverseTable[xInd][yInd + 1][zInd][1],
                     inverseTable[xInd][yInd + 1][zInd][2]};
    double ap3[3] = {inverseTable[xInd][yInd + 1][zInd + 1][0],
                     inverseTable[xInd][yInd + 1][zInd + 1][1],
                     inverseTable[xInd][yInd + 1][zInd + 1][2]};
    1e08:	c3 53       	subi	r28, 0x33	; 51
    1e0a:	df 4f       	sbci	r29, 0xFF	; 255
    1e0c:	48 81       	ld	r20, Y
    1e0e:	59 81       	ldd	r21, Y+1	; 0x01
    1e10:	6a 81       	ldd	r22, Y+2	; 0x02
    1e12:	7b 81       	ldd	r23, Y+3	; 0x03
    1e14:	cd 5c       	subi	r28, 0xCD	; 205
    1e16:	d0 40       	sbci	r29, 0x00	; 0
    1e18:	49 a7       	std	Y+41, r20	; 0x29
    1e1a:	5a a7       	std	Y+42, r21	; 0x2a
    1e1c:	6b a7       	std	Y+43, r22	; 0x2b
    1e1e:	7c a7       	std	Y+44, r23	; 0x2c
    int i;
    /* Ideally should iterate i = 0, 1, 2, but can same time by only checking
       i = 0 case. */
    for (i = 0; i < 1; i++)
    {
        if (isnan(ap0[i]) || isnan(ap1[i]) || isnan(ap2[i]) || isnan(ap3[i]) ||
    1e20:	cf 52       	subi	r28, 0x2F	; 47
    1e22:	df 4f       	sbci	r29, 0xFF	; 255
    1e24:	68 81       	ld	r22, Y
    1e26:	79 81       	ldd	r23, Y+1	; 0x01
    1e28:	8a 81       	ldd	r24, Y+2	; 0x02
    1e2a:	9b 81       	ldd	r25, Y+3	; 0x03
    1e2c:	c1 5d       	subi	r28, 0xD1	; 209
    1e2e:	d0 40       	sbci	r29, 0x00	; 0
    1e30:	c7 55       	subi	r28, 0x57	; 87
    1e32:	df 4f       	sbci	r29, 0xFF	; 255
    1e34:	68 83       	st	Y, r22
    1e36:	79 83       	std	Y+1, r23	; 0x01
    1e38:	8a 83       	std	Y+2, r24	; 0x02
    1e3a:	9b 83       	std	Y+3, r25	; 0x03
    1e3c:	c9 5a       	subi	r28, 0xA9	; 169
    1e3e:	d0 40       	sbci	r29, 0x00	; 0
    1e40:	9b 01       	movw	r18, r22
    1e42:	ac 01       	movw	r20, r24
    1e44:	47 d7       	rcall	.+3726   	; 0x2cd4 <__unordsf2>
    1e46:	88 23       	and	r24, r24
    1e48:	09 f0       	breq	.+2      	; 0x1e4c <lookupAngles+0x676>
    1e4a:	7d c4       	rjmp	.+2298   	; 0x2746 <__stack+0x547>
    double ap3[3] = {inverseTable[xInd][yInd + 1][zInd + 1][0],
                     inverseTable[xInd][yInd + 1][zInd + 1][1],
                     inverseTable[xInd][yInd + 1][zInd + 1][2]};
    double ap4[3] = {inverseTable[xInd + 1][yInd][zInd][0],
                     inverseTable[xInd + 1][yInd][zInd][1],
                     inverseTable[xInd + 1][yInd][zInd][2]};
    1e4c:	6d aa       	std	Y+53, r6	; 0x35
    1e4e:	7e aa       	std	Y+54, r7	; 0x36
    1e50:	8f aa       	std	Y+55, r8	; 0x37
    1e52:	98 ae       	std	Y+56, r9	; 0x38
    int i;
    /* Ideally should iterate i = 0, 1, 2, but can same time by only checking
       i = 0 case. */
    for (i = 0; i < 1; i++)
    {
        if (isnan(ap0[i]) || isnan(ap1[i]) || isnan(ap2[i]) || isnan(ap3[i]) ||
    1e54:	cb 55       	subi	r28, 0x5B	; 91
    1e56:	df 4f       	sbci	r29, 0xFF	; 255
    1e58:	28 82       	st	Y, r2
    1e5a:	39 82       	std	Y+1, r3	; 0x01
    1e5c:	4a 82       	std	Y+2, r4	; 0x02
    1e5e:	5b 82       	std	Y+3, r5	; 0x03
    1e60:	c5 5a       	subi	r28, 0xA5	; 165
    1e62:	d0 40       	sbci	r29, 0x00	; 0
    1e64:	c2 01       	movw	r24, r4
    1e66:	b1 01       	movw	r22, r2
    1e68:	a2 01       	movw	r20, r4
    1e6a:	91 01       	movw	r18, r2
    1e6c:	33 d7       	rcall	.+3686   	; 0x2cd4 <__unordsf2>
    1e6e:	88 23       	and	r24, r24
    1e70:	09 f0       	breq	.+2      	; 0x1e74 <lookupAngles+0x69e>
    1e72:	69 c4       	rjmp	.+2258   	; 0x2746 <__stack+0x547>
    double ap4[3] = {inverseTable[xInd + 1][yInd][zInd][0],
                     inverseTable[xInd + 1][yInd][zInd][1],
                     inverseTable[xInd + 1][yInd][zInd][2]};
    double ap5[3] = {inverseTable[xInd + 1][yInd][zInd + 1][0],
                     inverseTable[xInd + 1][yInd][zInd + 1][1],
                     inverseTable[xInd + 1][yInd][zInd + 1][2]};
    1e74:	fe 01       	movw	r30, r28
    1e76:	ef 5b       	subi	r30, 0xBF	; 191
    1e78:	ff 4f       	sbci	r31, 0xFF	; 255
    1e7a:	cb 53       	subi	r28, 0x3B	; 59
    1e7c:	df 4f       	sbci	r29, 0xFF	; 255
    1e7e:	88 81       	ld	r24, Y
    1e80:	99 81       	ldd	r25, Y+1	; 0x01
    1e82:	aa 81       	ldd	r26, Y+2	; 0x02
    1e84:	bb 81       	ldd	r27, Y+3	; 0x03
    1e86:	c5 5c       	subi	r28, 0xC5	; 197
    1e88:	d0 40       	sbci	r29, 0x00	; 0
    1e8a:	80 83       	st	Z, r24
    1e8c:	91 83       	std	Z+1, r25	; 0x01
    1e8e:	a2 83       	std	Z+2, r26	; 0x02
    1e90:	b3 83       	std	Z+3, r27	; 0x03
    int i;
    /* Ideally should iterate i = 0, 1, 2, but can same time by only checking
       i = 0 case. */
    for (i = 0; i < 1; i++)
    {
        if (isnan(ap0[i]) || isnan(ap1[i]) || isnan(ap2[i]) || isnan(ap3[i]) ||
    1e92:	c7 53       	subi	r28, 0x37	; 55
    1e94:	df 4f       	sbci	r29, 0xFF	; 255
    1e96:	a8 80       	ld	r10, Y
    1e98:	b9 80       	ldd	r11, Y+1	; 0x01
    1e9a:	ca 80       	ldd	r12, Y+2	; 0x02
    1e9c:	db 80       	ldd	r13, Y+3	; 0x03
    1e9e:	c9 5c       	subi	r28, 0xC9	; 201
    1ea0:	d0 40       	sbci	r29, 0x00	; 0
    1ea2:	cf 55       	subi	r28, 0x5F	; 95
    1ea4:	df 4f       	sbci	r29, 0xFF	; 255
    1ea6:	a8 82       	st	Y, r10
    1ea8:	b9 82       	std	Y+1, r11	; 0x01
    1eaa:	ca 82       	std	Y+2, r12	; 0x02
    1eac:	db 82       	std	Y+3, r13	; 0x03
    1eae:	c1 5a       	subi	r28, 0xA1	; 161
    1eb0:	d0 40       	sbci	r29, 0x00	; 0
    1eb2:	c6 01       	movw	r24, r12
    1eb4:	b5 01       	movw	r22, r10
    1eb6:	a6 01       	movw	r20, r12
    1eb8:	95 01       	movw	r18, r10
    1eba:	0c d7       	rcall	.+3608   	; 0x2cd4 <__unordsf2>
    1ebc:	88 23       	and	r24, r24
    1ebe:	09 f0       	breq	.+2      	; 0x1ec2 <lookupAngles+0x6ec>
    1ec0:	42 c4       	rjmp	.+2180   	; 0x2746 <__stack+0x547>
    double ap5[3] = {inverseTable[xInd + 1][yInd][zInd + 1][0],
                     inverseTable[xInd + 1][yInd][zInd + 1][1],
                     inverseTable[xInd + 1][yInd][zInd + 1][2]};
    double ap6[3] = {inverseTable[xInd + 1][yInd + 1][zInd][0],
                     inverseTable[xInd + 1][yInd + 1][zInd][1],
                     inverseTable[xInd + 1][yInd + 1][zInd][2]};
    1ec2:	fe 01       	movw	r30, r28
    1ec4:	e7 5b       	subi	r30, 0xB7	; 183
    1ec6:	ff 4f       	sbci	r31, 0xFF	; 255
    1ec8:	e4 82       	std	Z+4, r14	; 0x04
    1eca:	f5 82       	std	Z+5, r15	; 0x05
    1ecc:	06 83       	std	Z+6, r16	; 0x06
    1ece:	17 83       	std	Z+7, r17	; 0x07
    int i;
    /* Ideally should iterate i = 0, 1, 2, but can same time by only checking
       i = 0 case. */
    for (i = 0; i < 1; i++)
    {
        if (isnan(ap0[i]) || isnan(ap1[i]) || isnan(ap2[i]) || isnan(ap3[i]) ||
    1ed0:	cf 53       	subi	r28, 0x3F	; 63
    1ed2:	df 4f       	sbci	r29, 0xFF	; 255
    1ed4:	28 81       	ld	r18, Y
    1ed6:	39 81       	ldd	r19, Y+1	; 0x01
    1ed8:	4a 81       	ldd	r20, Y+2	; 0x02
    1eda:	5b 81       	ldd	r21, Y+3	; 0x03
    1edc:	c1 5c       	subi	r28, 0xC1	; 193
    1ede:	d0 40       	sbci	r29, 0x00	; 0
    1ee0:	c3 56       	subi	r28, 0x63	; 99
    1ee2:	df 4f       	sbci	r29, 0xFF	; 255
    1ee4:	28 83       	st	Y, r18
    1ee6:	39 83       	std	Y+1, r19	; 0x01
    1ee8:	4a 83       	std	Y+2, r20	; 0x02
    1eea:	5b 83       	std	Y+3, r21	; 0x03
    1eec:	cd 59       	subi	r28, 0x9D	; 157
    1eee:	d0 40       	sbci	r29, 0x00	; 0
    1ef0:	ca 01       	movw	r24, r20
    1ef2:	b9 01       	movw	r22, r18
    1ef4:	ef d6       	rcall	.+3550   	; 0x2cd4 <__unordsf2>
    1ef6:	88 23       	and	r24, r24
    1ef8:	09 f0       	breq	.+2      	; 0x1efc <lookupAngles+0x726>
    1efa:	25 c4       	rjmp	.+2122   	; 0x2746 <__stack+0x547>
    double ap6[3] = {inverseTable[xInd + 1][yInd + 1][zInd][0],
                     inverseTable[xInd + 1][yInd + 1][zInd][1],
                     inverseTable[xInd + 1][yInd + 1][zInd][2]};
    double ap7[3] = {inverseTable[xInd + 1][yInd + 1][zInd + 1][0],
                     inverseTable[xInd + 1][yInd + 1][zInd + 1][1],
                     inverseTable[xInd + 1][yInd + 1][zInd + 1][2]};
    1efc:	fe 01       	movw	r30, r28
    1efe:	eb 5a       	subi	r30, 0xAB	; 171
    1f00:	ff 4f       	sbci	r31, 0xFF	; 255
    1f02:	c7 54       	subi	r28, 0x47	; 71
    1f04:	df 4f       	sbci	r29, 0xFF	; 255
    1f06:	48 81       	ld	r20, Y
    1f08:	59 81       	ldd	r21, Y+1	; 0x01
    1f0a:	6a 81       	ldd	r22, Y+2	; 0x02
    1f0c:	7b 81       	ldd	r23, Y+3	; 0x03
    1f0e:	c9 5b       	subi	r28, 0xB9	; 185
    1f10:	d0 40       	sbci	r29, 0x00	; 0
    1f12:	44 83       	std	Z+4, r20	; 0x04
    1f14:	55 83       	std	Z+5, r21	; 0x05
    1f16:	66 83       	std	Z+6, r22	; 0x06
    1f18:	77 83       	std	Z+7, r23	; 0x07
    int i;
    /* Ideally should iterate i = 0, 1, 2, but can same time by only checking
       i = 0 case. */
    for (i = 0; i < 1; i++)
    {
        if (isnan(ap0[i]) || isnan(ap1[i]) || isnan(ap2[i]) || isnan(ap3[i]) ||
    1f1a:	c3 54       	subi	r28, 0x43	; 67
    1f1c:	df 4f       	sbci	r29, 0xFF	; 255
    1f1e:	68 81       	ld	r22, Y
    1f20:	79 81       	ldd	r23, Y+1	; 0x01
    1f22:	8a 81       	ldd	r24, Y+2	; 0x02
    1f24:	9b 81       	ldd	r25, Y+3	; 0x03
    1f26:	cd 5b       	subi	r28, 0xBD	; 189
    1f28:	d0 40       	sbci	r29, 0x00	; 0
    1f2a:	c7 56       	subi	r28, 0x67	; 103
    1f2c:	df 4f       	sbci	r29, 0xFF	; 255
    1f2e:	68 83       	st	Y, r22
    1f30:	79 83       	std	Y+1, r23	; 0x01
    1f32:	8a 83       	std	Y+2, r24	; 0x02
    1f34:	9b 83       	std	Y+3, r25	; 0x03
    1f36:	c9 59       	subi	r28, 0x99	; 153
    1f38:	d0 40       	sbci	r29, 0x00	; 0
    1f3a:	9b 01       	movw	r18, r22
    1f3c:	ac 01       	movw	r20, r24
    1f3e:	ca d6       	rcall	.+3476   	; 0x2cd4 <__unordsf2>
    1f40:	88 23       	and	r24, r24
    1f42:	09 f0       	breq	.+2      	; 0x1f46 <lookupAngles+0x770>
    1f44:	00 c4       	rjmp	.+2048   	; 0x2746 <__stack+0x547>
            isnan(ap4[i]) || isnan(ap5[i]) || isnan(ap6[i]) || isnan(ap7[i]))
        {
            valid = 0;
            break;
        }
        if (abs(ap0[i]) < 0.01 || abs(ap1[i]) < 0.01 || abs(ap2[i]) < 0.01 ||
    1f46:	cb 54       	subi	r28, 0x4B	; 75
    1f48:	df 4f       	sbci	r29, 0xFF	; 255
    1f4a:	68 81       	ld	r22, Y
    1f4c:	79 81       	ldd	r23, Y+1	; 0x01
    1f4e:	8a 81       	ldd	r24, Y+2	; 0x02
    1f50:	9b 81       	ldd	r25, Y+3	; 0x03
    1f52:	c5 5b       	subi	r28, 0xB5	; 181
    1f54:	d0 40       	sbci	r29, 0x00	; 0
    1f56:	74 d5       	rcall	.+2792   	; 0x2a40 <__fixsfsi>
    1f58:	37 2f       	mov	r19, r23
    1f5a:	86 2f       	mov	r24, r22
    1f5c:	93 2f       	mov	r25, r19
    1f5e:	9c 01       	movw	r18, r24
    1f60:	33 23       	and	r19, r19
    1f62:	1c f4       	brge	.+6      	; 0x1f6a <lookupAngles+0x794>
    1f64:	30 95       	com	r19
    1f66:	21 95       	neg	r18
    1f68:	3f 4f       	sbci	r19, 0xFF	; 255
    1f6a:	b9 01       	movw	r22, r18
    1f6c:	88 27       	eor	r24, r24
    1f6e:	77 fd       	sbrc	r23, 7
    1f70:	80 95       	com	r24
    1f72:	98 2f       	mov	r25, r24
    1f74:	98 d5       	rcall	.+2864   	; 0x2aa6 <__floatsisf>
    1f76:	2a e0       	ldi	r18, 0x0A	; 10
    1f78:	37 ed       	ldi	r19, 0xD7	; 215
    1f7a:	43 e2       	ldi	r20, 0x23	; 35
    1f7c:	5c e3       	ldi	r21, 0x3C	; 60
    1f7e:	f4 d4       	rcall	.+2536   	; 0x2968 <__cmpsf2>
    1f80:	88 23       	and	r24, r24
    1f82:	0c f4       	brge	.+2      	; 0x1f86 <lookupAngles+0x7b0>
    1f84:	e0 c3       	rjmp	.+1984   	; 0x2746 <__stack+0x547>
    1f86:	cf 54       	subi	r28, 0x4F	; 79
    1f88:	df 4f       	sbci	r29, 0xFF	; 255
    1f8a:	68 81       	ld	r22, Y
    1f8c:	79 81       	ldd	r23, Y+1	; 0x01
    1f8e:	8a 81       	ldd	r24, Y+2	; 0x02
    1f90:	9b 81       	ldd	r25, Y+3	; 0x03
    1f92:	c1 5b       	subi	r28, 0xB1	; 177
    1f94:	d0 40       	sbci	r29, 0x00	; 0
    1f96:	54 d5       	rcall	.+2728   	; 0x2a40 <__fixsfsi>
    1f98:	37 2f       	mov	r19, r23
    1f9a:	86 2f       	mov	r24, r22
    1f9c:	93 2f       	mov	r25, r19
    1f9e:	9c 01       	movw	r18, r24
    1fa0:	33 23       	and	r19, r19
    1fa2:	1c f4       	brge	.+6      	; 0x1faa <lookupAngles+0x7d4>
    1fa4:	30 95       	com	r19
    1fa6:	21 95       	neg	r18
    1fa8:	3f 4f       	sbci	r19, 0xFF	; 255
    1faa:	b9 01       	movw	r22, r18
    1fac:	88 27       	eor	r24, r24
    1fae:	77 fd       	sbrc	r23, 7
    1fb0:	80 95       	com	r24
    1fb2:	98 2f       	mov	r25, r24
    1fb4:	78 d5       	rcall	.+2800   	; 0x2aa6 <__floatsisf>
    1fb6:	2a e0       	ldi	r18, 0x0A	; 10
    1fb8:	37 ed       	ldi	r19, 0xD7	; 215
    1fba:	43 e2       	ldi	r20, 0x23	; 35
    1fbc:	5c e3       	ldi	r21, 0x3C	; 60
    1fbe:	d4 d4       	rcall	.+2472   	; 0x2968 <__cmpsf2>
    1fc0:	88 23       	and	r24, r24
    1fc2:	0c f4       	brge	.+2      	; 0x1fc6 <lookupAngles+0x7f0>
    1fc4:	c0 c3       	rjmp	.+1920   	; 0x2746 <__stack+0x547>
    1fc6:	c3 55       	subi	r28, 0x53	; 83
    1fc8:	df 4f       	sbci	r29, 0xFF	; 255
    1fca:	68 81       	ld	r22, Y
    1fcc:	79 81       	ldd	r23, Y+1	; 0x01
    1fce:	8a 81       	ldd	r24, Y+2	; 0x02
    1fd0:	9b 81       	ldd	r25, Y+3	; 0x03
    1fd2:	cd 5a       	subi	r28, 0xAD	; 173
    1fd4:	d0 40       	sbci	r29, 0x00	; 0
    1fd6:	34 d5       	rcall	.+2664   	; 0x2a40 <__fixsfsi>
    1fd8:	37 2f       	mov	r19, r23
    1fda:	86 2f       	mov	r24, r22
    1fdc:	93 2f       	mov	r25, r19
    1fde:	9c 01       	movw	r18, r24
    1fe0:	33 23       	and	r19, r19
    1fe2:	1c f4       	brge	.+6      	; 0x1fea <lookupAngles+0x814>
    1fe4:	30 95       	com	r19
    1fe6:	21 95       	neg	r18
    1fe8:	3f 4f       	sbci	r19, 0xFF	; 255
    1fea:	b9 01       	movw	r22, r18
    1fec:	88 27       	eor	r24, r24
    1fee:	77 fd       	sbrc	r23, 7
    1ff0:	80 95       	com	r24
    1ff2:	98 2f       	mov	r25, r24
    1ff4:	58 d5       	rcall	.+2736   	; 0x2aa6 <__floatsisf>
    1ff6:	2a e0       	ldi	r18, 0x0A	; 10
    1ff8:	37 ed       	ldi	r19, 0xD7	; 215
    1ffa:	43 e2       	ldi	r20, 0x23	; 35
    1ffc:	5c e3       	ldi	r21, 0x3C	; 60
    1ffe:	b4 d4       	rcall	.+2408   	; 0x2968 <__cmpsf2>
    2000:	88 23       	and	r24, r24
    2002:	0c f4       	brge	.+2      	; 0x2006 <lookupAngles+0x830>
    2004:	a0 c3       	rjmp	.+1856   	; 0x2746 <__stack+0x547>
    2006:	c7 55       	subi	r28, 0x57	; 87
    2008:	df 4f       	sbci	r29, 0xFF	; 255
    200a:	68 81       	ld	r22, Y
    200c:	79 81       	ldd	r23, Y+1	; 0x01
    200e:	8a 81       	ldd	r24, Y+2	; 0x02
    2010:	9b 81       	ldd	r25, Y+3	; 0x03
    2012:	c9 5a       	subi	r28, 0xA9	; 169
    2014:	d0 40       	sbci	r29, 0x00	; 0
    2016:	14 d5       	rcall	.+2600   	; 0x2a40 <__fixsfsi>
    2018:	37 2f       	mov	r19, r23
    201a:	86 2f       	mov	r24, r22
    201c:	93 2f       	mov	r25, r19
    201e:	9c 01       	movw	r18, r24
    2020:	33 23       	and	r19, r19
    2022:	1c f4       	brge	.+6      	; 0x202a <lookupAngles+0x854>
    2024:	30 95       	com	r19
    2026:	21 95       	neg	r18
    2028:	3f 4f       	sbci	r19, 0xFF	; 255
    202a:	b9 01       	movw	r22, r18
    202c:	88 27       	eor	r24, r24
    202e:	77 fd       	sbrc	r23, 7
    2030:	80 95       	com	r24
    2032:	98 2f       	mov	r25, r24
    2034:	38 d5       	rcall	.+2672   	; 0x2aa6 <__floatsisf>
    2036:	2a e0       	ldi	r18, 0x0A	; 10
    2038:	37 ed       	ldi	r19, 0xD7	; 215
    203a:	43 e2       	ldi	r20, 0x23	; 35
    203c:	5c e3       	ldi	r21, 0x3C	; 60
    203e:	94 d4       	rcall	.+2344   	; 0x2968 <__cmpsf2>
    2040:	88 23       	and	r24, r24
    2042:	0c f4       	brge	.+2      	; 0x2046 <lookupAngles+0x870>
    2044:	80 c3       	rjmp	.+1792   	; 0x2746 <__stack+0x547>
    2046:	cb 55       	subi	r28, 0x5B	; 91
    2048:	df 4f       	sbci	r29, 0xFF	; 255
    204a:	68 81       	ld	r22, Y
    204c:	79 81       	ldd	r23, Y+1	; 0x01
    204e:	8a 81       	ldd	r24, Y+2	; 0x02
    2050:	9b 81       	ldd	r25, Y+3	; 0x03
    2052:	c5 5a       	subi	r28, 0xA5	; 165
    2054:	d0 40       	sbci	r29, 0x00	; 0
    2056:	f4 d4       	rcall	.+2536   	; 0x2a40 <__fixsfsi>
    2058:	37 2f       	mov	r19, r23
    205a:	86 2f       	mov	r24, r22
    205c:	93 2f       	mov	r25, r19
    205e:	9c 01       	movw	r18, r24
    2060:	33 23       	and	r19, r19
    2062:	1c f4       	brge	.+6      	; 0x206a <lookupAngles+0x894>
    2064:	30 95       	com	r19
    2066:	21 95       	neg	r18
    2068:	3f 4f       	sbci	r19, 0xFF	; 255
    206a:	b9 01       	movw	r22, r18
    206c:	88 27       	eor	r24, r24
    206e:	77 fd       	sbrc	r23, 7
    2070:	80 95       	com	r24
    2072:	98 2f       	mov	r25, r24
    2074:	18 d5       	rcall	.+2608   	; 0x2aa6 <__floatsisf>
    2076:	2a e0       	ldi	r18, 0x0A	; 10
    2078:	37 ed       	ldi	r19, 0xD7	; 215
    207a:	43 e2       	ldi	r20, 0x23	; 35
    207c:	5c e3       	ldi	r21, 0x3C	; 60
    207e:	74 d4       	rcall	.+2280   	; 0x2968 <__cmpsf2>
    2080:	88 23       	and	r24, r24
    2082:	0c f4       	brge	.+2      	; 0x2086 <lookupAngles+0x8b0>
    2084:	60 c3       	rjmp	.+1728   	; 0x2746 <__stack+0x547>
    2086:	cf 55       	subi	r28, 0x5F	; 95
    2088:	df 4f       	sbci	r29, 0xFF	; 255
    208a:	68 81       	ld	r22, Y
    208c:	79 81       	ldd	r23, Y+1	; 0x01
    208e:	8a 81       	ldd	r24, Y+2	; 0x02
    2090:	9b 81       	ldd	r25, Y+3	; 0x03
    2092:	c1 5a       	subi	r28, 0xA1	; 161
    2094:	d0 40       	sbci	r29, 0x00	; 0
    2096:	d4 d4       	rcall	.+2472   	; 0x2a40 <__fixsfsi>
    2098:	37 2f       	mov	r19, r23
    209a:	86 2f       	mov	r24, r22
    209c:	93 2f       	mov	r25, r19
    209e:	9c 01       	movw	r18, r24
    20a0:	33 23       	and	r19, r19
    20a2:	1c f4       	brge	.+6      	; 0x20aa <lookupAngles+0x8d4>
    20a4:	30 95       	com	r19
    20a6:	21 95       	neg	r18
    20a8:	3f 4f       	sbci	r19, 0xFF	; 255
    20aa:	b9 01       	movw	r22, r18
    20ac:	88 27       	eor	r24, r24
    20ae:	77 fd       	sbrc	r23, 7
    20b0:	80 95       	com	r24
    20b2:	98 2f       	mov	r25, r24
    20b4:	f8 d4       	rcall	.+2544   	; 0x2aa6 <__floatsisf>
    20b6:	2a e0       	ldi	r18, 0x0A	; 10
    20b8:	37 ed       	ldi	r19, 0xD7	; 215
    20ba:	43 e2       	ldi	r20, 0x23	; 35
    20bc:	5c e3       	ldi	r21, 0x3C	; 60
    20be:	54 d4       	rcall	.+2216   	; 0x2968 <__cmpsf2>
    20c0:	88 23       	and	r24, r24
    20c2:	0c f4       	brge	.+2      	; 0x20c6 <lookupAngles+0x8f0>
    20c4:	40 c3       	rjmp	.+1664   	; 0x2746 <__stack+0x547>
    20c6:	c3 56       	subi	r28, 0x63	; 99
    20c8:	df 4f       	sbci	r29, 0xFF	; 255
    20ca:	68 81       	ld	r22, Y
    20cc:	79 81       	ldd	r23, Y+1	; 0x01
    20ce:	8a 81       	ldd	r24, Y+2	; 0x02
    20d0:	9b 81       	ldd	r25, Y+3	; 0x03
    20d2:	cd 59       	subi	r28, 0x9D	; 157
    20d4:	d0 40       	sbci	r29, 0x00	; 0
    20d6:	b4 d4       	rcall	.+2408   	; 0x2a40 <__fixsfsi>
    20d8:	37 2f       	mov	r19, r23
    20da:	86 2f       	mov	r24, r22
    20dc:	93 2f       	mov	r25, r19
    20de:	9c 01       	movw	r18, r24
    20e0:	33 23       	and	r19, r19
    20e2:	1c f4       	brge	.+6      	; 0x20ea <lookupAngles+0x914>
    20e4:	30 95       	com	r19
    20e6:	21 95       	neg	r18
    20e8:	3f 4f       	sbci	r19, 0xFF	; 255
    20ea:	b9 01       	movw	r22, r18
    20ec:	88 27       	eor	r24, r24
    20ee:	77 fd       	sbrc	r23, 7
    20f0:	80 95       	com	r24
    20f2:	98 2f       	mov	r25, r24
    20f4:	d8 d4       	rcall	.+2480   	; 0x2aa6 <__floatsisf>
    20f6:	2a e0       	ldi	r18, 0x0A	; 10
    20f8:	37 ed       	ldi	r19, 0xD7	; 215
    20fa:	43 e2       	ldi	r20, 0x23	; 35
    20fc:	5c e3       	ldi	r21, 0x3C	; 60
    20fe:	34 d4       	rcall	.+2152   	; 0x2968 <__cmpsf2>
    2100:	88 23       	and	r24, r24
    2102:	0c f4       	brge	.+2      	; 0x2106 <lookupAngles+0x930>
    2104:	20 c3       	rjmp	.+1600   	; 0x2746 <__stack+0x547>
    2106:	c7 56       	subi	r28, 0x67	; 103
    2108:	df 4f       	sbci	r29, 0xFF	; 255
    210a:	68 81       	ld	r22, Y
    210c:	79 81       	ldd	r23, Y+1	; 0x01
    210e:	8a 81       	ldd	r24, Y+2	; 0x02
    2110:	9b 81       	ldd	r25, Y+3	; 0x03
    2112:	c9 59       	subi	r28, 0x99	; 153
    2114:	d0 40       	sbci	r29, 0x00	; 0
    2116:	94 d4       	rcall	.+2344   	; 0x2a40 <__fixsfsi>
    2118:	37 2f       	mov	r19, r23
    211a:	86 2f       	mov	r24, r22
    211c:	93 2f       	mov	r25, r19
    211e:	9c 01       	movw	r18, r24
    2120:	33 23       	and	r19, r19
    2122:	1c f4       	brge	.+6      	; 0x212a <lookupAngles+0x954>
    2124:	30 95       	com	r19
    2126:	21 95       	neg	r18
    2128:	3f 4f       	sbci	r19, 0xFF	; 255
    212a:	b9 01       	movw	r22, r18
    212c:	88 27       	eor	r24, r24
    212e:	77 fd       	sbrc	r23, 7
    2130:	80 95       	com	r24
    2132:	98 2f       	mov	r25, r24
    2134:	b8 d4       	rcall	.+2416   	; 0x2aa6 <__floatsisf>
    2136:	2a e0       	ldi	r18, 0x0A	; 10
    2138:	37 ed       	ldi	r19, 0xD7	; 215
    213a:	43 e2       	ldi	r20, 0x23	; 35
    213c:	5c e3       	ldi	r21, 0x3C	; 60
    213e:	14 d4       	rcall	.+2088   	; 0x2968 <__cmpsf2>
    2140:	88 23       	and	r24, r24
    2142:	0c f4       	brge	.+2      	; 0x2146 <lookupAngles+0x970>
    2144:	00 c3       	rjmp	.+1536   	; 0x2746 <__stack+0x547>
    int yInd = pointToIndex('y', p.y);
    int zInd = pointToIndex('z', p.z);

    /* Third, get the proportion of the distance between adjacent lattice points
       on each of the three axes. */
    double xProp = (p.x - indexToPoint('x', xInd)) / X_TABLE_RES;
    2146:	e9 96       	adiw	r28, 0x39	; 57
    2148:	6c ad       	ldd	r22, Y+60	; 0x3c
    214a:	7d ad       	ldd	r23, Y+61	; 0x3d
    214c:	8e ad       	ldd	r24, Y+62	; 0x3e
    214e:	9f ad       	ldd	r25, Y+63	; 0x3f
    2150:	e9 97       	sbiw	r28, 0x39	; 57
    2152:	c7 51       	subi	r28, 0x17	; 23
    2154:	df 4f       	sbci	r29, 0xFF	; 255
    2156:	28 81       	ld	r18, Y
    2158:	39 81       	ldd	r19, Y+1	; 0x01
    215a:	4a 81       	ldd	r20, Y+2	; 0x02
    215c:	5b 81       	ldd	r21, Y+3	; 0x03
    215e:	c9 5e       	subi	r28, 0xE9	; 233
    2160:	d0 40       	sbci	r29, 0x00	; 0
    2162:	9d d3       	rcall	.+1850   	; 0x289e <__subsf3>
    2164:	5b 01       	movw	r10, r22
    2166:	6c 01       	movw	r12, r24
    double yProp = (p.y - indexToPoint('y', yInd)) / Y_TABLE_RES;
    2168:	e5 96       	adiw	r28, 0x35	; 53
    216a:	6c ad       	ldd	r22, Y+60	; 0x3c
    216c:	7d ad       	ldd	r23, Y+61	; 0x3d
    216e:	8e ad       	ldd	r24, Y+62	; 0x3e
    2170:	9f ad       	ldd	r25, Y+63	; 0x3f
    2172:	e5 97       	sbiw	r28, 0x35	; 53
    2174:	cb 51       	subi	r28, 0x1B	; 27
    2176:	df 4f       	sbci	r29, 0xFF	; 255
    2178:	28 81       	ld	r18, Y
    217a:	39 81       	ldd	r19, Y+1	; 0x01
    217c:	4a 81       	ldd	r20, Y+2	; 0x02
    217e:	5b 81       	ldd	r21, Y+3	; 0x03
    2180:	c5 5e       	subi	r28, 0xE5	; 229
    2182:	d0 40       	sbci	r29, 0x00	; 0
    2184:	8c d3       	rcall	.+1816   	; 0x289e <__subsf3>
    2186:	cf 50       	subi	r28, 0x0F	; 15
    2188:	df 4f       	sbci	r29, 0xFF	; 255
    218a:	68 83       	st	Y, r22
    218c:	79 83       	std	Y+1, r23	; 0x01
    218e:	8a 83       	std	Y+2, r24	; 0x02
    2190:	9b 83       	std	Y+3, r25	; 0x03
    2192:	c1 5f       	subi	r28, 0xF1	; 241
    2194:	d0 40       	sbci	r29, 0x00	; 0
    double zProp = (p.z - indexToPoint('z', zInd)) / Z_TABLE_RES;
    2196:	e1 96       	adiw	r28, 0x31	; 49
    2198:	6c ad       	ldd	r22, Y+60	; 0x3c
    219a:	7d ad       	ldd	r23, Y+61	; 0x3d
    219c:	8e ad       	ldd	r24, Y+62	; 0x3e
    219e:	9f ad       	ldd	r25, Y+63	; 0x3f
    21a0:	e1 97       	sbiw	r28, 0x31	; 49
    21a2:	cf 51       	subi	r28, 0x1F	; 31
    21a4:	df 4f       	sbci	r29, 0xFF	; 255
    21a6:	28 81       	ld	r18, Y
    21a8:	39 81       	ldd	r19, Y+1	; 0x01
    21aa:	4a 81       	ldd	r20, Y+2	; 0x02
    21ac:	5b 81       	ldd	r21, Y+3	; 0x03
    21ae:	c1 5e       	subi	r28, 0xE1	; 225
    21b0:	d0 40       	sbci	r29, 0x00	; 0
    21b2:	75 d3       	rcall	.+1770   	; 0x289e <__subsf3>
    21b4:	cb 50       	subi	r28, 0x0B	; 11
    21b6:	df 4f       	sbci	r29, 0xFF	; 255
    21b8:	68 83       	st	Y, r22
    21ba:	79 83       	std	Y+1, r23	; 0x01
    21bc:	8a 83       	std	Y+2, r24	; 0x02
    21be:	9b 83       	std	Y+3, r25	; 0x03
    21c0:	c5 5f       	subi	r28, 0xF5	; 245
    21c2:	d0 40       	sbci	r29, 0x00	; 0
       p11 - average of p1 and p5
       p12 - average of p2 and p6
       p13 - average of p3 and p7 */
    double ap10[3] = {(1 - xProp) * ap0[0] + xProp * ap4[0],
                      (1 - xProp) * ap0[1] + xProp * ap4[1],
                      (1 - xProp) * ap0[2] + xProp * ap4[2]};
    21c4:	60 e0       	ldi	r22, 0x00	; 0
    21c6:	70 e0       	ldi	r23, 0x00	; 0
    21c8:	80 e8       	ldi	r24, 0x80	; 128
    21ca:	9f e3       	ldi	r25, 0x3F	; 63
    21cc:	a6 01       	movw	r20, r12
    21ce:	95 01       	movw	r18, r10
    21d0:	66 d3       	rcall	.+1740   	; 0x289e <__subsf3>
    21d2:	3b 01       	movw	r6, r22
    21d4:	4c 01       	movw	r8, r24
       interpolation the two points
       p20 - average of p10 and p12
       p21 - average of p11 and p13 */
    double ap20[3] = {(1 - yProp) * ap10[0] + yProp * ap12[0],
                      (1 - yProp) * ap10[1] + yProp * ap12[1],
                      (1 - yProp) * ap10[2] + yProp * ap12[2]};
    21d6:	60 e0       	ldi	r22, 0x00	; 0
    21d8:	70 e0       	ldi	r23, 0x00	; 0
    21da:	80 e8       	ldi	r24, 0x80	; 128
    21dc:	9f e3       	ldi	r25, 0x3F	; 63
    21de:	cf 50       	subi	r28, 0x0F	; 15
    21e0:	df 4f       	sbci	r29, 0xFF	; 255
    21e2:	28 81       	ld	r18, Y
    21e4:	39 81       	ldd	r19, Y+1	; 0x01
    21e6:	4a 81       	ldd	r20, Y+2	; 0x02
    21e8:	5b 81       	ldd	r21, Y+3	; 0x03
    21ea:	c1 5f       	subi	r28, 0xF1	; 241
    21ec:	d0 40       	sbci	r29, 0x00	; 0
    21ee:	57 d3       	rcall	.+1710   	; 0x289e <__subsf3>
    21f0:	c7 50       	subi	r28, 0x07	; 7
    21f2:	df 4f       	sbci	r29, 0xFF	; 255
    21f4:	68 83       	st	Y, r22
    21f6:	79 83       	std	Y+1, r23	; 0x01
    21f8:	8a 83       	std	Y+2, r24	; 0x02
    21fa:	9b 83       	std	Y+3, r25	; 0x03
    21fc:	c9 5f       	subi	r28, 0xF9	; 249
    21fe:	d0 40       	sbci	r29, 0x00	; 0
    2200:	c4 01       	movw	r24, r8
    2202:	b3 01       	movw	r22, r6
    2204:	2d 81       	ldd	r18, Y+5	; 0x05
    2206:	3e 81       	ldd	r19, Y+6	; 0x06
    2208:	4f 81       	ldd	r20, Y+7	; 0x07
    220a:	58 85       	ldd	r21, Y+8	; 0x08
    220c:	00 d5       	rcall	.+2560   	; 0x2c0e <__mulsf3>
    220e:	7b 01       	movw	r14, r22
    2210:	8c 01       	movw	r16, r24
    2212:	c6 01       	movw	r24, r12
    2214:	b5 01       	movw	r22, r10
    2216:	2d a9       	ldd	r18, Y+53	; 0x35
    2218:	3e a9       	ldd	r19, Y+54	; 0x36
    221a:	4f a9       	ldd	r20, Y+55	; 0x37
    221c:	58 ad       	ldd	r21, Y+56	; 0x38
    221e:	f7 d4       	rcall	.+2542   	; 0x2c0e <__mulsf3>
    2220:	9b 01       	movw	r18, r22
    2222:	ac 01       	movw	r20, r24
    2224:	c8 01       	movw	r24, r16
    2226:	b7 01       	movw	r22, r14
    2228:	3b d3       	rcall	.+1654   	; 0x28a0 <__addsf3>
    222a:	c7 50       	subi	r28, 0x07	; 7
    222c:	df 4f       	sbci	r29, 0xFF	; 255
    222e:	28 81       	ld	r18, Y
    2230:	39 81       	ldd	r19, Y+1	; 0x01
    2232:	4a 81       	ldd	r20, Y+2	; 0x02
    2234:	5b 81       	ldd	r21, Y+3	; 0x03
    2236:	c9 5f       	subi	r28, 0xF9	; 249
    2238:	d0 40       	sbci	r29, 0x00	; 0
    223a:	e9 d4       	rcall	.+2514   	; 0x2c0e <__mulsf3>
    223c:	1b 01       	movw	r2, r22
    223e:	2c 01       	movw	r4, r24
    2240:	c4 01       	movw	r24, r8
    2242:	b3 01       	movw	r22, r6
    2244:	2d 8d       	ldd	r18, Y+29	; 0x1d
    2246:	3e 8d       	ldd	r19, Y+30	; 0x1e
    2248:	4f 8d       	ldd	r20, Y+31	; 0x1f
    224a:	58 a1       	ldd	r21, Y+32	; 0x20
    224c:	e0 d4       	rcall	.+2496   	; 0x2c0e <__mulsf3>
    224e:	7b 01       	movw	r14, r22
    2250:	8c 01       	movw	r16, r24
    2252:	c6 01       	movw	r24, r12
    2254:	b5 01       	movw	r22, r10
    2256:	fe 01       	movw	r30, r28
    2258:	e7 5b       	subi	r30, 0xB7	; 183
    225a:	ff 4f       	sbci	r31, 0xFF	; 255
    225c:	24 81       	ldd	r18, Z+4	; 0x04
    225e:	35 81       	ldd	r19, Z+5	; 0x05
    2260:	46 81       	ldd	r20, Z+6	; 0x06
    2262:	57 81       	ldd	r21, Z+7	; 0x07
    2264:	d4 d4       	rcall	.+2472   	; 0x2c0e <__mulsf3>
    2266:	9b 01       	movw	r18, r22
    2268:	ac 01       	movw	r20, r24
    226a:	c8 01       	movw	r24, r16
    226c:	b7 01       	movw	r22, r14
    226e:	18 d3       	rcall	.+1584   	; 0x28a0 <__addsf3>
    2270:	9b 01       	movw	r18, r22
    2272:	ac 01       	movw	r20, r24
    2274:	cf 50       	subi	r28, 0x0F	; 15
    2276:	df 4f       	sbci	r29, 0xFF	; 255
    2278:	68 81       	ld	r22, Y
    227a:	79 81       	ldd	r23, Y+1	; 0x01
    227c:	8a 81       	ldd	r24, Y+2	; 0x02
    227e:	9b 81       	ldd	r25, Y+3	; 0x03
    2280:	c1 5f       	subi	r28, 0xF1	; 241
    2282:	d0 40       	sbci	r29, 0x00	; 0
    2284:	c4 d4       	rcall	.+2440   	; 0x2c0e <__mulsf3>
    2286:	9b 01       	movw	r18, r22
    2288:	ac 01       	movw	r20, r24
    228a:	c2 01       	movw	r24, r4
    228c:	b1 01       	movw	r22, r2
    228e:	08 d3       	rcall	.+1552   	; 0x28a0 <__addsf3>
    2290:	c3 50       	subi	r28, 0x03	; 3
    2292:	df 4f       	sbci	r29, 0xFF	; 255
    2294:	68 83       	st	Y, r22
    2296:	79 83       	std	Y+1, r23	; 0x01
    2298:	8a 83       	std	Y+2, r24	; 0x02
    229a:	9b 83       	std	Y+3, r25	; 0x03
    229c:	cd 5f       	subi	r28, 0xFD	; 253
    229e:	d0 40       	sbci	r29, 0x00	; 0
    double ap21[3] = {(1 - yProp) * ap11[0] + yProp * ap13[0],
                      (1 - yProp) * ap11[1] + yProp * ap13[1],
                      (1 - yProp) * ap11[2] + yProp * ap13[2]};
    22a0:	c4 01       	movw	r24, r8
    22a2:	b3 01       	movw	r22, r6
    22a4:	29 89       	ldd	r18, Y+17	; 0x11
    22a6:	3a 89       	ldd	r19, Y+18	; 0x12
    22a8:	4b 89       	ldd	r20, Y+19	; 0x13
    22aa:	5c 89       	ldd	r21, Y+20	; 0x14
    22ac:	b0 d4       	rcall	.+2400   	; 0x2c0e <__mulsf3>
    22ae:	7b 01       	movw	r14, r22
    22b0:	8c 01       	movw	r16, r24
    22b2:	c6 01       	movw	r24, r12
    22b4:	b5 01       	movw	r22, r10
    22b6:	fe 01       	movw	r30, r28
    22b8:	ef 5b       	subi	r30, 0xBF	; 191
    22ba:	ff 4f       	sbci	r31, 0xFF	; 255
    22bc:	20 81       	ld	r18, Z
    22be:	31 81       	ldd	r19, Z+1	; 0x01
    22c0:	42 81       	ldd	r20, Z+2	; 0x02
    22c2:	53 81       	ldd	r21, Z+3	; 0x03
    22c4:	a4 d4       	rcall	.+2376   	; 0x2c0e <__mulsf3>
    22c6:	9b 01       	movw	r18, r22
    22c8:	ac 01       	movw	r20, r24
    22ca:	c8 01       	movw	r24, r16
    22cc:	b7 01       	movw	r22, r14
    22ce:	e8 d2       	rcall	.+1488   	; 0x28a0 <__addsf3>
    22d0:	c7 50       	subi	r28, 0x07	; 7
    22d2:	df 4f       	sbci	r29, 0xFF	; 255
    22d4:	28 81       	ld	r18, Y
    22d6:	39 81       	ldd	r19, Y+1	; 0x01
    22d8:	4a 81       	ldd	r20, Y+2	; 0x02
    22da:	5b 81       	ldd	r21, Y+3	; 0x03
    22dc:	c9 5f       	subi	r28, 0xF9	; 249
    22de:	d0 40       	sbci	r29, 0x00	; 0
    22e0:	96 d4       	rcall	.+2348   	; 0x2c0e <__mulsf3>
    22e2:	1b 01       	movw	r2, r22
    22e4:	2c 01       	movw	r4, r24
    22e6:	c4 01       	movw	r24, r8
    22e8:	b3 01       	movw	r22, r6
    22ea:	29 a5       	ldd	r18, Y+41	; 0x29
    22ec:	3a a5       	ldd	r19, Y+42	; 0x2a
    22ee:	4b a5       	ldd	r20, Y+43	; 0x2b
    22f0:	5c a5       	ldd	r21, Y+44	; 0x2c
    22f2:	8d d4       	rcall	.+2330   	; 0x2c0e <__mulsf3>
    22f4:	7b 01       	movw	r14, r22
    22f6:	8c 01       	movw	r16, r24
    22f8:	c6 01       	movw	r24, r12
    22fa:	b5 01       	movw	r22, r10
    22fc:	fe 01       	movw	r30, r28
    22fe:	eb 5a       	subi	r30, 0xAB	; 171
    2300:	ff 4f       	sbci	r31, 0xFF	; 255
    2302:	24 81       	ldd	r18, Z+4	; 0x04
    2304:	35 81       	ldd	r19, Z+5	; 0x05
    2306:	46 81       	ldd	r20, Z+6	; 0x06
    2308:	57 81       	ldd	r21, Z+7	; 0x07
    230a:	81 d4       	rcall	.+2306   	; 0x2c0e <__mulsf3>
    230c:	9b 01       	movw	r18, r22
    230e:	ac 01       	movw	r20, r24
    2310:	c8 01       	movw	r24, r16
    2312:	b7 01       	movw	r22, r14
    2314:	c5 d2       	rcall	.+1418   	; 0x28a0 <__addsf3>
    2316:	9b 01       	movw	r18, r22
    2318:	ac 01       	movw	r20, r24
    231a:	cf 50       	subi	r28, 0x0F	; 15
    231c:	df 4f       	sbci	r29, 0xFF	; 255
    231e:	68 81       	ld	r22, Y
    2320:	79 81       	ldd	r23, Y+1	; 0x01
    2322:	8a 81       	ldd	r24, Y+2	; 0x02
    2324:	9b 81       	ldd	r25, Y+3	; 0x03
    2326:	c1 5f       	subi	r28, 0xF1	; 241
    2328:	d0 40       	sbci	r29, 0x00	; 0
    232a:	71 d4       	rcall	.+2274   	; 0x2c0e <__mulsf3>
    232c:	9b 01       	movw	r18, r22
    232e:	ac 01       	movw	r20, r24
    2330:	c2 01       	movw	r24, r4
    2332:	b1 01       	movw	r22, r2
    2334:	b5 d2       	rcall	.+1386   	; 0x28a0 <__addsf3>
    2336:	cf 5f       	subi	r28, 0xFF	; 255
    2338:	de 4f       	sbci	r29, 0xFE	; 254
    233a:	68 83       	st	Y, r22
    233c:	79 83       	std	Y+1, r23	; 0x01
    233e:	8a 83       	std	Y+2, r24	; 0x02
    2340:	9b 83       	std	Y+3, r25	; 0x03
    2342:	c1 50       	subi	r28, 0x01	; 1
    2344:	d1 40       	sbci	r29, 0x01	; 1
    }

    /* Seventh, collapse the z-axis about point 'p', and approximate by
       interpolation the point 'p' (average of p20 and p21). Store the result in
       'angles'. */
    angles[0] = (1 - zProp) * ap20[0] + zProp * ap21[0];
    2346:	60 e0       	ldi	r22, 0x00	; 0
    2348:	70 e0       	ldi	r23, 0x00	; 0
    234a:	80 e8       	ldi	r24, 0x80	; 128
    234c:	9f e3       	ldi	r25, 0x3F	; 63
    234e:	cb 50       	subi	r28, 0x0B	; 11
    2350:	df 4f       	sbci	r29, 0xFF	; 255
    2352:	28 81       	ld	r18, Y
    2354:	39 81       	ldd	r19, Y+1	; 0x01
    2356:	4a 81       	ldd	r20, Y+2	; 0x02
    2358:	5b 81       	ldd	r21, Y+3	; 0x03
    235a:	c5 5f       	subi	r28, 0xF5	; 245
    235c:	d0 40       	sbci	r29, 0x00	; 0
    235e:	9f d2       	rcall	.+1342   	; 0x289e <__subsf3>
    2360:	cb 5f       	subi	r28, 0xFB	; 251
    2362:	de 4f       	sbci	r29, 0xFE	; 254
    2364:	68 83       	st	Y, r22
    2366:	79 83       	std	Y+1, r23	; 0x01
    2368:	8a 83       	std	Y+2, r24	; 0x02
    236a:	9b 83       	std	Y+3, r25	; 0x03
    236c:	c5 50       	subi	r28, 0x05	; 5
    236e:	d1 40       	sbci	r29, 0x01	; 1
    2370:	cb 54       	subi	r28, 0x4B	; 75
    2372:	df 4f       	sbci	r29, 0xFF	; 255
    2374:	68 81       	ld	r22, Y
    2376:	79 81       	ldd	r23, Y+1	; 0x01
    2378:	8a 81       	ldd	r24, Y+2	; 0x02
    237a:	9b 81       	ldd	r25, Y+3	; 0x03
    237c:	c5 5b       	subi	r28, 0xB5	; 181
    237e:	d0 40       	sbci	r29, 0x00	; 0
    2380:	a4 01       	movw	r20, r8
    2382:	93 01       	movw	r18, r6
    2384:	44 d4       	rcall	.+2184   	; 0x2c0e <__mulsf3>
    2386:	7b 01       	movw	r14, r22
    2388:	8c 01       	movw	r16, r24
    238a:	c6 01       	movw	r24, r12
    238c:	b5 01       	movw	r22, r10
    238e:	cb 55       	subi	r28, 0x5B	; 91
    2390:	df 4f       	sbci	r29, 0xFF	; 255
    2392:	28 81       	ld	r18, Y
    2394:	39 81       	ldd	r19, Y+1	; 0x01
    2396:	4a 81       	ldd	r20, Y+2	; 0x02
    2398:	5b 81       	ldd	r21, Y+3	; 0x03
    239a:	c5 5a       	subi	r28, 0xA5	; 165
    239c:	d0 40       	sbci	r29, 0x00	; 0
    239e:	37 d4       	rcall	.+2158   	; 0x2c0e <__mulsf3>
    23a0:	9b 01       	movw	r18, r22
    23a2:	ac 01       	movw	r20, r24
    23a4:	c8 01       	movw	r24, r16
    23a6:	b7 01       	movw	r22, r14
    23a8:	7b d2       	rcall	.+1270   	; 0x28a0 <__addsf3>
    23aa:	c7 50       	subi	r28, 0x07	; 7
    23ac:	df 4f       	sbci	r29, 0xFF	; 255
    23ae:	28 81       	ld	r18, Y
    23b0:	39 81       	ldd	r19, Y+1	; 0x01
    23b2:	4a 81       	ldd	r20, Y+2	; 0x02
    23b4:	5b 81       	ldd	r21, Y+3	; 0x03
    23b6:	c9 5f       	subi	r28, 0xF9	; 249
    23b8:	d0 40       	sbci	r29, 0x00	; 0
    23ba:	29 d4       	rcall	.+2130   	; 0x2c0e <__mulsf3>
    23bc:	1b 01       	movw	r2, r22
    23be:	2c 01       	movw	r4, r24
    23c0:	c3 55       	subi	r28, 0x53	; 83
    23c2:	df 4f       	sbci	r29, 0xFF	; 255
    23c4:	68 81       	ld	r22, Y
    23c6:	79 81       	ldd	r23, Y+1	; 0x01
    23c8:	8a 81       	ldd	r24, Y+2	; 0x02
    23ca:	9b 81       	ldd	r25, Y+3	; 0x03
    23cc:	cd 5a       	subi	r28, 0xAD	; 173
    23ce:	d0 40       	sbci	r29, 0x00	; 0
    23d0:	a4 01       	movw	r20, r8
    23d2:	93 01       	movw	r18, r6
    23d4:	1c d4       	rcall	.+2104   	; 0x2c0e <__mulsf3>
    23d6:	7b 01       	movw	r14, r22
    23d8:	8c 01       	movw	r16, r24
    23da:	c6 01       	movw	r24, r12
    23dc:	b5 01       	movw	r22, r10
    23de:	c3 56       	subi	r28, 0x63	; 99
    23e0:	df 4f       	sbci	r29, 0xFF	; 255
    23e2:	28 81       	ld	r18, Y
    23e4:	39 81       	ldd	r19, Y+1	; 0x01
    23e6:	4a 81       	ldd	r20, Y+2	; 0x02
    23e8:	5b 81       	ldd	r21, Y+3	; 0x03
    23ea:	cd 59       	subi	r28, 0x9D	; 157
    23ec:	d0 40       	sbci	r29, 0x00	; 0
    23ee:	0f d4       	rcall	.+2078   	; 0x2c0e <__mulsf3>
    23f0:	9b 01       	movw	r18, r22
    23f2:	ac 01       	movw	r20, r24
    23f4:	c8 01       	movw	r24, r16
    23f6:	b7 01       	movw	r22, r14
    23f8:	53 d2       	rcall	.+1190   	; 0x28a0 <__addsf3>
    23fa:	9b 01       	movw	r18, r22
    23fc:	ac 01       	movw	r20, r24
    23fe:	cf 50       	subi	r28, 0x0F	; 15
    2400:	df 4f       	sbci	r29, 0xFF	; 255
    2402:	68 81       	ld	r22, Y
    2404:	79 81       	ldd	r23, Y+1	; 0x01
    2406:	8a 81       	ldd	r24, Y+2	; 0x02
    2408:	9b 81       	ldd	r25, Y+3	; 0x03
    240a:	c1 5f       	subi	r28, 0xF1	; 241
    240c:	d0 40       	sbci	r29, 0x00	; 0
    240e:	ff d3       	rcall	.+2046   	; 0x2c0e <__mulsf3>
    2410:	9b 01       	movw	r18, r22
    2412:	ac 01       	movw	r20, r24
    2414:	c2 01       	movw	r24, r4
    2416:	b1 01       	movw	r22, r2
    2418:	43 d2       	rcall	.+1158   	; 0x28a0 <__addsf3>
    241a:	cb 5f       	subi	r28, 0xFB	; 251
    241c:	de 4f       	sbci	r29, 0xFE	; 254
    241e:	28 81       	ld	r18, Y
    2420:	39 81       	ldd	r19, Y+1	; 0x01
    2422:	4a 81       	ldd	r20, Y+2	; 0x02
    2424:	5b 81       	ldd	r21, Y+3	; 0x03
    2426:	c5 50       	subi	r28, 0x05	; 5
    2428:	d1 40       	sbci	r29, 0x01	; 1
    242a:	f1 d3       	rcall	.+2018   	; 0x2c0e <__mulsf3>
    242c:	c7 5f       	subi	r28, 0xF7	; 247
    242e:	de 4f       	sbci	r29, 0xFE	; 254
    2430:	68 83       	st	Y, r22
    2432:	79 83       	std	Y+1, r23	; 0x01
    2434:	8a 83       	std	Y+2, r24	; 0x02
    2436:	9b 83       	std	Y+3, r25	; 0x03
    2438:	c9 50       	subi	r28, 0x09	; 9
    243a:	d1 40       	sbci	r29, 0x01	; 1
    243c:	cf 54       	subi	r28, 0x4F	; 79
    243e:	df 4f       	sbci	r29, 0xFF	; 255
    2440:	68 81       	ld	r22, Y
    2442:	79 81       	ldd	r23, Y+1	; 0x01
    2444:	8a 81       	ldd	r24, Y+2	; 0x02
    2446:	9b 81       	ldd	r25, Y+3	; 0x03
    2448:	c1 5b       	subi	r28, 0xB1	; 177
    244a:	d0 40       	sbci	r29, 0x00	; 0
    244c:	a4 01       	movw	r20, r8
    244e:	93 01       	movw	r18, r6
    2450:	de d3       	rcall	.+1980   	; 0x2c0e <__mulsf3>
    2452:	7b 01       	movw	r14, r22
    2454:	8c 01       	movw	r16, r24
    2456:	c6 01       	movw	r24, r12
    2458:	b5 01       	movw	r22, r10
    245a:	cf 55       	subi	r28, 0x5F	; 95
    245c:	df 4f       	sbci	r29, 0xFF	; 255
    245e:	28 81       	ld	r18, Y
    2460:	39 81       	ldd	r19, Y+1	; 0x01
    2462:	4a 81       	ldd	r20, Y+2	; 0x02
    2464:	5b 81       	ldd	r21, Y+3	; 0x03
    2466:	c1 5a       	subi	r28, 0xA1	; 161
    2468:	d0 40       	sbci	r29, 0x00	; 0
    246a:	d1 d3       	rcall	.+1954   	; 0x2c0e <__mulsf3>
    246c:	9b 01       	movw	r18, r22
    246e:	ac 01       	movw	r20, r24
    2470:	c8 01       	movw	r24, r16
    2472:	b7 01       	movw	r22, r14
    2474:	15 d2       	rcall	.+1066   	; 0x28a0 <__addsf3>
    2476:	c7 50       	subi	r28, 0x07	; 7
    2478:	df 4f       	sbci	r29, 0xFF	; 255
    247a:	28 81       	ld	r18, Y
    247c:	39 81       	ldd	r19, Y+1	; 0x01
    247e:	4a 81       	ldd	r20, Y+2	; 0x02
    2480:	5b 81       	ldd	r21, Y+3	; 0x03
    2482:	c9 5f       	subi	r28, 0xF9	; 249
    2484:	d0 40       	sbci	r29, 0x00	; 0
    2486:	c3 d3       	rcall	.+1926   	; 0x2c0e <__mulsf3>
    2488:	1b 01       	movw	r2, r22
    248a:	2c 01       	movw	r4, r24
    248c:	c7 55       	subi	r28, 0x57	; 87
    248e:	df 4f       	sbci	r29, 0xFF	; 255
    2490:	68 81       	ld	r22, Y
    2492:	79 81       	ldd	r23, Y+1	; 0x01
    2494:	8a 81       	ldd	r24, Y+2	; 0x02
    2496:	9b 81       	ldd	r25, Y+3	; 0x03
    2498:	c9 5a       	subi	r28, 0xA9	; 169
    249a:	d0 40       	sbci	r29, 0x00	; 0
    249c:	a4 01       	movw	r20, r8
    249e:	93 01       	movw	r18, r6
    24a0:	b6 d3       	rcall	.+1900   	; 0x2c0e <__mulsf3>
    24a2:	7b 01       	movw	r14, r22
    24a4:	8c 01       	movw	r16, r24
    24a6:	c6 01       	movw	r24, r12
    24a8:	b5 01       	movw	r22, r10
    24aa:	c7 56       	subi	r28, 0x67	; 103
    24ac:	df 4f       	sbci	r29, 0xFF	; 255
    24ae:	28 81       	ld	r18, Y
    24b0:	39 81       	ldd	r19, Y+1	; 0x01
    24b2:	4a 81       	ldd	r20, Y+2	; 0x02
    24b4:	5b 81       	ldd	r21, Y+3	; 0x03
    24b6:	c9 59       	subi	r28, 0x99	; 153
    24b8:	d0 40       	sbci	r29, 0x00	; 0
    24ba:	a9 d3       	rcall	.+1874   	; 0x2c0e <__mulsf3>
    24bc:	9b 01       	movw	r18, r22
    24be:	ac 01       	movw	r20, r24
    24c0:	c8 01       	movw	r24, r16
    24c2:	b7 01       	movw	r22, r14
    24c4:	ed d1       	rcall	.+986    	; 0x28a0 <__addsf3>
    24c6:	9b 01       	movw	r18, r22
    24c8:	ac 01       	movw	r20, r24
    24ca:	cf 50       	subi	r28, 0x0F	; 15
    24cc:	df 4f       	sbci	r29, 0xFF	; 255
    24ce:	68 81       	ld	r22, Y
    24d0:	79 81       	ldd	r23, Y+1	; 0x01
    24d2:	8a 81       	ldd	r24, Y+2	; 0x02
    24d4:	9b 81       	ldd	r25, Y+3	; 0x03
    24d6:	c1 5f       	subi	r28, 0xF1	; 241
    24d8:	d0 40       	sbci	r29, 0x00	; 0
    24da:	99 d3       	rcall	.+1842   	; 0x2c0e <__mulsf3>
    24dc:	9b 01       	movw	r18, r22
    24de:	ac 01       	movw	r20, r24
    24e0:	c2 01       	movw	r24, r4
    24e2:	b1 01       	movw	r22, r2
    24e4:	dd d1       	rcall	.+954    	; 0x28a0 <__addsf3>
    24e6:	9b 01       	movw	r18, r22
    24e8:	ac 01       	movw	r20, r24
    24ea:	cb 50       	subi	r28, 0x0B	; 11
    24ec:	df 4f       	sbci	r29, 0xFF	; 255
    24ee:	68 81       	ld	r22, Y
    24f0:	79 81       	ldd	r23, Y+1	; 0x01
    24f2:	8a 81       	ldd	r24, Y+2	; 0x02
    24f4:	9b 81       	ldd	r25, Y+3	; 0x03
    24f6:	c5 5f       	subi	r28, 0xF5	; 245
    24f8:	d0 40       	sbci	r29, 0x00	; 0
    24fa:	89 d3       	rcall	.+1810   	; 0x2c0e <__mulsf3>
    24fc:	9b 01       	movw	r18, r22
    24fe:	ac 01       	movw	r20, r24
    2500:	c7 5f       	subi	r28, 0xF7	; 247
    2502:	de 4f       	sbci	r29, 0xFE	; 254
    2504:	68 81       	ld	r22, Y
    2506:	79 81       	ldd	r23, Y+1	; 0x01
    2508:	8a 81       	ldd	r24, Y+2	; 0x02
    250a:	9b 81       	ldd	r25, Y+3	; 0x03
    250c:	c9 50       	subi	r28, 0x09	; 9
    250e:	d1 40       	sbci	r29, 0x01	; 1
    2510:	c7 d1       	rcall	.+910    	; 0x28a0 <__addsf3>
    2512:	c1 51       	subi	r28, 0x11	; 17
    2514:	df 4f       	sbci	r29, 0xFF	; 255
    2516:	a8 81       	ld	r26, Y
    2518:	b9 81       	ldd	r27, Y+1	; 0x01
    251a:	cf 5e       	subi	r28, 0xEF	; 239
    251c:	d0 40       	sbci	r29, 0x00	; 0
    251e:	6d 93       	st	X+, r22
    2520:	7d 93       	st	X+, r23
    2522:	8d 93       	st	X+, r24
    2524:	9c 93       	st	X, r25
    2526:	13 97       	sbiw	r26, 0x03	; 3
    angles[1] = (1 - zProp) * ap20[1] + zProp * ap21[1];
    2528:	c3 50       	subi	r28, 0x03	; 3
    252a:	df 4f       	sbci	r29, 0xFF	; 255
    252c:	68 81       	ld	r22, Y
    252e:	79 81       	ldd	r23, Y+1	; 0x01
    2530:	8a 81       	ldd	r24, Y+2	; 0x02
    2532:	9b 81       	ldd	r25, Y+3	; 0x03
    2534:	cd 5f       	subi	r28, 0xFD	; 253
    2536:	d0 40       	sbci	r29, 0x00	; 0
    2538:	cb 5f       	subi	r28, 0xFB	; 251
    253a:	de 4f       	sbci	r29, 0xFE	; 254
    253c:	28 81       	ld	r18, Y
    253e:	39 81       	ldd	r19, Y+1	; 0x01
    2540:	4a 81       	ldd	r20, Y+2	; 0x02
    2542:	5b 81       	ldd	r21, Y+3	; 0x03
    2544:	c5 50       	subi	r28, 0x05	; 5
    2546:	d1 40       	sbci	r29, 0x01	; 1
    2548:	62 d3       	rcall	.+1732   	; 0x2c0e <__mulsf3>
    254a:	7b 01       	movw	r14, r22
    254c:	8c 01       	movw	r16, r24
    254e:	cb 50       	subi	r28, 0x0B	; 11
    2550:	df 4f       	sbci	r29, 0xFF	; 255
    2552:	68 81       	ld	r22, Y
    2554:	79 81       	ldd	r23, Y+1	; 0x01
    2556:	8a 81       	ldd	r24, Y+2	; 0x02
    2558:	9b 81       	ldd	r25, Y+3	; 0x03
    255a:	c5 5f       	subi	r28, 0xF5	; 245
    255c:	d0 40       	sbci	r29, 0x00	; 0
    255e:	cf 5f       	subi	r28, 0xFF	; 255
    2560:	de 4f       	sbci	r29, 0xFE	; 254
    2562:	28 81       	ld	r18, Y
    2564:	39 81       	ldd	r19, Y+1	; 0x01
    2566:	4a 81       	ldd	r20, Y+2	; 0x02
    2568:	5b 81       	ldd	r21, Y+3	; 0x03
    256a:	c1 50       	subi	r28, 0x01	; 1
    256c:	d1 40       	sbci	r29, 0x01	; 1
    256e:	4f d3       	rcall	.+1694   	; 0x2c0e <__mulsf3>
    2570:	9b 01       	movw	r18, r22
    2572:	ac 01       	movw	r20, r24
    2574:	c8 01       	movw	r24, r16
    2576:	b7 01       	movw	r22, r14
    2578:	93 d1       	rcall	.+806    	; 0x28a0 <__addsf3>
    257a:	c1 51       	subi	r28, 0x11	; 17
    257c:	df 4f       	sbci	r29, 0xFF	; 255
    257e:	e8 81       	ld	r30, Y
    2580:	f9 81       	ldd	r31, Y+1	; 0x01
    2582:	cf 5e       	subi	r28, 0xEF	; 239
    2584:	d0 40       	sbci	r29, 0x00	; 0
    2586:	64 83       	std	Z+4, r22	; 0x04
    2588:	75 83       	std	Z+5, r23	; 0x05
    258a:	86 83       	std	Z+6, r24	; 0x06
    258c:	97 83       	std	Z+7, r25	; 0x07
    angles[2] = (1 - zProp) * ap20[2] + zProp * ap21[2];
    258e:	cb 56       	subi	r28, 0x6B	; 107
    2590:	df 4f       	sbci	r29, 0xFF	; 255
    2592:	68 81       	ld	r22, Y
    2594:	79 81       	ldd	r23, Y+1	; 0x01
    2596:	8a 81       	ldd	r24, Y+2	; 0x02
    2598:	9b 81       	ldd	r25, Y+3	; 0x03
    259a:	c5 59       	subi	r28, 0x95	; 149
    259c:	d0 40       	sbci	r29, 0x00	; 0
    259e:	a4 01       	movw	r20, r8
    25a0:	93 01       	movw	r18, r6
    25a2:	35 d3       	rcall	.+1642   	; 0x2c0e <__mulsf3>
    25a4:	7b 01       	movw	r14, r22
    25a6:	8c 01       	movw	r16, r24
    25a8:	c6 01       	movw	r24, r12
    25aa:	b5 01       	movw	r22, r10
    25ac:	cf 56       	subi	r28, 0x6F	; 111
    25ae:	df 4f       	sbci	r29, 0xFF	; 255
    25b0:	28 81       	ld	r18, Y
    25b2:	39 81       	ldd	r19, Y+1	; 0x01
    25b4:	4a 81       	ldd	r20, Y+2	; 0x02
    25b6:	5b 81       	ldd	r21, Y+3	; 0x03
    25b8:	c1 59       	subi	r28, 0x91	; 145
    25ba:	d0 40       	sbci	r29, 0x00	; 0
    25bc:	28 d3       	rcall	.+1616   	; 0x2c0e <__mulsf3>
    25be:	9b 01       	movw	r18, r22
    25c0:	ac 01       	movw	r20, r24
    25c2:	c8 01       	movw	r24, r16
    25c4:	b7 01       	movw	r22, r14
    25c6:	6c d1       	rcall	.+728    	; 0x28a0 <__addsf3>
    25c8:	c7 50       	subi	r28, 0x07	; 7
    25ca:	df 4f       	sbci	r29, 0xFF	; 255
    25cc:	28 81       	ld	r18, Y
    25ce:	39 81       	ldd	r19, Y+1	; 0x01
    25d0:	4a 81       	ldd	r20, Y+2	; 0x02
    25d2:	5b 81       	ldd	r21, Y+3	; 0x03
    25d4:	c9 5f       	subi	r28, 0xF9	; 249
    25d6:	d0 40       	sbci	r29, 0x00	; 0
    25d8:	1a d3       	rcall	.+1588   	; 0x2c0e <__mulsf3>
    25da:	1b 01       	movw	r2, r22
    25dc:	2c 01       	movw	r4, r24
    25de:	cb 57       	subi	r28, 0x7B	; 123
    25e0:	df 4f       	sbci	r29, 0xFF	; 255
    25e2:	68 81       	ld	r22, Y
    25e4:	79 81       	ldd	r23, Y+1	; 0x01
    25e6:	8a 81       	ldd	r24, Y+2	; 0x02
    25e8:	9b 81       	ldd	r25, Y+3	; 0x03
    25ea:	c5 58       	subi	r28, 0x85	; 133
    25ec:	d0 40       	sbci	r29, 0x00	; 0
    25ee:	a4 01       	movw	r20, r8
    25f0:	93 01       	movw	r18, r6
    25f2:	0d d3       	rcall	.+1562   	; 0x2c0e <__mulsf3>
    25f4:	7b 01       	movw	r14, r22
    25f6:	8c 01       	movw	r16, r24
    25f8:	c6 01       	movw	r24, r12
    25fa:	b5 01       	movw	r22, r10
    25fc:	cf 57       	subi	r28, 0x7F	; 127
    25fe:	df 4f       	sbci	r29, 0xFF	; 255
    2600:	28 81       	ld	r18, Y
    2602:	39 81       	ldd	r19, Y+1	; 0x01
    2604:	4a 81       	ldd	r20, Y+2	; 0x02
    2606:	5b 81       	ldd	r21, Y+3	; 0x03
    2608:	c1 58       	subi	r28, 0x81	; 129
    260a:	d0 40       	sbci	r29, 0x00	; 0
    260c:	00 d3       	rcall	.+1536   	; 0x2c0e <__mulsf3>
    260e:	9b 01       	movw	r18, r22
    2610:	ac 01       	movw	r20, r24
    2612:	c8 01       	movw	r24, r16
    2614:	b7 01       	movw	r22, r14
    2616:	44 d1       	rcall	.+648    	; 0x28a0 <__addsf3>
    2618:	9b 01       	movw	r18, r22
    261a:	ac 01       	movw	r20, r24
    261c:	cf 50       	subi	r28, 0x0F	; 15
    261e:	df 4f       	sbci	r29, 0xFF	; 255
    2620:	68 81       	ld	r22, Y
    2622:	79 81       	ldd	r23, Y+1	; 0x01
    2624:	8a 81       	ldd	r24, Y+2	; 0x02
    2626:	9b 81       	ldd	r25, Y+3	; 0x03
    2628:	c1 5f       	subi	r28, 0xF1	; 241
    262a:	d0 40       	sbci	r29, 0x00	; 0
    262c:	f0 d2       	rcall	.+1504   	; 0x2c0e <__mulsf3>
    262e:	9b 01       	movw	r18, r22
    2630:	ac 01       	movw	r20, r24
    2632:	c2 01       	movw	r24, r4
    2634:	b1 01       	movw	r22, r2
    2636:	34 d1       	rcall	.+616    	; 0x28a0 <__addsf3>
    2638:	cb 5f       	subi	r28, 0xFB	; 251
    263a:	de 4f       	sbci	r29, 0xFE	; 254
    263c:	28 81       	ld	r18, Y
    263e:	39 81       	ldd	r19, Y+1	; 0x01
    2640:	4a 81       	ldd	r20, Y+2	; 0x02
    2642:	5b 81       	ldd	r21, Y+3	; 0x03
    2644:	c5 50       	subi	r28, 0x05	; 5
    2646:	d1 40       	sbci	r29, 0x01	; 1
    2648:	e2 d2       	rcall	.+1476   	; 0x2c0e <__mulsf3>
    264a:	c3 5f       	subi	r28, 0xF3	; 243
    264c:	de 4f       	sbci	r29, 0xFE	; 254
    264e:	68 83       	st	Y, r22
    2650:	79 83       	std	Y+1, r23	; 0x01
    2652:	8a 83       	std	Y+2, r24	; 0x02
    2654:	9b 83       	std	Y+3, r25	; 0x03
    2656:	cd 50       	subi	r28, 0x0D	; 13
    2658:	d1 40       	sbci	r29, 0x01	; 1
    265a:	c3 57       	subi	r28, 0x73	; 115
    265c:	df 4f       	sbci	r29, 0xFF	; 255
    265e:	68 81       	ld	r22, Y
    2660:	79 81       	ldd	r23, Y+1	; 0x01
    2662:	8a 81       	ldd	r24, Y+2	; 0x02
    2664:	9b 81       	ldd	r25, Y+3	; 0x03
    2666:	cd 58       	subi	r28, 0x8D	; 141
    2668:	d0 40       	sbci	r29, 0x00	; 0
    266a:	a4 01       	movw	r20, r8
    266c:	93 01       	movw	r18, r6
    266e:	cf d2       	rcall	.+1438   	; 0x2c0e <__mulsf3>
    2670:	7b 01       	movw	r14, r22
    2672:	8c 01       	movw	r16, r24
    2674:	c6 01       	movw	r24, r12
    2676:	b5 01       	movw	r22, r10
    2678:	c7 57       	subi	r28, 0x77	; 119
    267a:	df 4f       	sbci	r29, 0xFF	; 255
    267c:	28 81       	ld	r18, Y
    267e:	39 81       	ldd	r19, Y+1	; 0x01
    2680:	4a 81       	ldd	r20, Y+2	; 0x02
    2682:	5b 81       	ldd	r21, Y+3	; 0x03
    2684:	c9 58       	subi	r28, 0x89	; 137
    2686:	d0 40       	sbci	r29, 0x00	; 0
    2688:	c2 d2       	rcall	.+1412   	; 0x2c0e <__mulsf3>
    268a:	9b 01       	movw	r18, r22
    268c:	ac 01       	movw	r20, r24
    268e:	c8 01       	movw	r24, r16
    2690:	b7 01       	movw	r22, r14
    2692:	06 d1       	rcall	.+524    	; 0x28a0 <__addsf3>
    2694:	c7 50       	subi	r28, 0x07	; 7
    2696:	df 4f       	sbci	r29, 0xFF	; 255
    2698:	28 81       	ld	r18, Y
    269a:	39 81       	ldd	r19, Y+1	; 0x01
    269c:	4a 81       	ldd	r20, Y+2	; 0x02
    269e:	5b 81       	ldd	r21, Y+3	; 0x03
    26a0:	c9 5f       	subi	r28, 0xF9	; 249
    26a2:	d0 40       	sbci	r29, 0x00	; 0
    26a4:	b4 d2       	rcall	.+1384   	; 0x2c0e <__mulsf3>
    26a6:	1b 01       	movw	r2, r22
    26a8:	2c 01       	movw	r4, r24
    26aa:	c3 58       	subi	r28, 0x83	; 131
    26ac:	df 4f       	sbci	r29, 0xFF	; 255
    26ae:	68 81       	ld	r22, Y
    26b0:	79 81       	ldd	r23, Y+1	; 0x01
    26b2:	8a 81       	ldd	r24, Y+2	; 0x02
    26b4:	9b 81       	ldd	r25, Y+3	; 0x03
    26b6:	cd 57       	subi	r28, 0x7D	; 125
    26b8:	d0 40       	sbci	r29, 0x00	; 0
    26ba:	a4 01       	movw	r20, r8
    26bc:	93 01       	movw	r18, r6
    26be:	a7 d2       	rcall	.+1358   	; 0x2c0e <__mulsf3>
    26c0:	7b 01       	movw	r14, r22
    26c2:	8c 01       	movw	r16, r24
    26c4:	c6 01       	movw	r24, r12
    26c6:	b5 01       	movw	r22, r10
    26c8:	ed 96       	adiw	r28, 0x3d	; 61
    26ca:	2c ad       	ldd	r18, Y+60	; 0x3c
    26cc:	3d ad       	ldd	r19, Y+61	; 0x3d
    26ce:	4e ad       	ldd	r20, Y+62	; 0x3e
    26d0:	5f ad       	ldd	r21, Y+63	; 0x3f
    26d2:	ed 97       	sbiw	r28, 0x3d	; 61
    26d4:	9c d2       	rcall	.+1336   	; 0x2c0e <__mulsf3>
    26d6:	9b 01       	movw	r18, r22
    26d8:	ac 01       	movw	r20, r24
    26da:	c8 01       	movw	r24, r16
    26dc:	b7 01       	movw	r22, r14
    26de:	e0 d0       	rcall	.+448    	; 0x28a0 <__addsf3>
    26e0:	9b 01       	movw	r18, r22
    26e2:	ac 01       	movw	r20, r24
    26e4:	cf 50       	subi	r28, 0x0F	; 15
    26e6:	df 4f       	sbci	r29, 0xFF	; 255
    26e8:	68 81       	ld	r22, Y
    26ea:	79 81       	ldd	r23, Y+1	; 0x01
    26ec:	8a 81       	ldd	r24, Y+2	; 0x02
    26ee:	9b 81       	ldd	r25, Y+3	; 0x03
    26f0:	c1 5f       	subi	r28, 0xF1	; 241
    26f2:	d0 40       	sbci	r29, 0x00	; 0
    26f4:	8c d2       	rcall	.+1304   	; 0x2c0e <__mulsf3>
    26f6:	9b 01       	movw	r18, r22
    26f8:	ac 01       	movw	r20, r24
    26fa:	c2 01       	movw	r24, r4
    26fc:	b1 01       	movw	r22, r2
    26fe:	d0 d0       	rcall	.+416    	; 0x28a0 <__addsf3>
    2700:	9b 01       	movw	r18, r22
    2702:	ac 01       	movw	r20, r24
    2704:	cb 50       	subi	r28, 0x0B	; 11
    2706:	df 4f       	sbci	r29, 0xFF	; 255
    2708:	68 81       	ld	r22, Y
    270a:	79 81       	ldd	r23, Y+1	; 0x01
    270c:	8a 81       	ldd	r24, Y+2	; 0x02
    270e:	9b 81       	ldd	r25, Y+3	; 0x03
    2710:	c5 5f       	subi	r28, 0xF5	; 245
    2712:	d0 40       	sbci	r29, 0x00	; 0
    2714:	7c d2       	rcall	.+1272   	; 0x2c0e <__mulsf3>
    2716:	9b 01       	movw	r18, r22
    2718:	ac 01       	movw	r20, r24
    271a:	c3 5f       	subi	r28, 0xF3	; 243
    271c:	de 4f       	sbci	r29, 0xFE	; 254
    271e:	68 81       	ld	r22, Y
    2720:	79 81       	ldd	r23, Y+1	; 0x01
    2722:	8a 81       	ldd	r24, Y+2	; 0x02
    2724:	9b 81       	ldd	r25, Y+3	; 0x03
    2726:	cd 50       	subi	r28, 0x0D	; 13
    2728:	d1 40       	sbci	r29, 0x01	; 1
    272a:	ba d0       	rcall	.+372    	; 0x28a0 <__addsf3>
    272c:	c1 51       	subi	r28, 0x11	; 17
    272e:	df 4f       	sbci	r29, 0xFF	; 255
    2730:	a8 81       	ld	r26, Y
    2732:	b9 81       	ldd	r27, Y+1	; 0x01
    2734:	cf 5e       	subi	r28, 0xEF	; 239
    2736:	d0 40       	sbci	r29, 0x00	; 0
    2738:	18 96       	adiw	r26, 0x08	; 8
    273a:	6d 93       	st	X+, r22
    273c:	7d 93       	st	X+, r23
    273e:	8d 93       	st	X+, r24
    2740:	9c 93       	st	X, r25
    2742:	1b 97       	sbiw	r26, 0x0b	; 11
    2744:	22 c0       	rjmp	.+68     	; 0x278a <__stack+0x58b>
            break;
        }
    }
    if (valid == 0)
    {
        angles[0] = NAN;
    2746:	80 e0       	ldi	r24, 0x00	; 0
    2748:	90 e0       	ldi	r25, 0x00	; 0
    274a:	a0 ec       	ldi	r26, 0xC0	; 192
    274c:	bf e7       	ldi	r27, 0x7F	; 127
    274e:	c1 51       	subi	r28, 0x11	; 17
    2750:	df 4f       	sbci	r29, 0xFF	; 255
    2752:	e8 81       	ld	r30, Y
    2754:	f9 81       	ldd	r31, Y+1	; 0x01
    2756:	cf 5e       	subi	r28, 0xEF	; 239
    2758:	d0 40       	sbci	r29, 0x00	; 0
    275a:	80 83       	st	Z, r24
    275c:	91 83       	std	Z+1, r25	; 0x01
    275e:	a2 83       	std	Z+2, r26	; 0x02
    2760:	b3 83       	std	Z+3, r27	; 0x03
        angles[1] = NAN;
    2762:	c1 51       	subi	r28, 0x11	; 17
    2764:	df 4f       	sbci	r29, 0xFF	; 255
    2766:	e8 81       	ld	r30, Y
    2768:	f9 81       	ldd	r31, Y+1	; 0x01
    276a:	cf 5e       	subi	r28, 0xEF	; 239
    276c:	d0 40       	sbci	r29, 0x00	; 0
    276e:	84 83       	std	Z+4, r24	; 0x04
    2770:	95 83       	std	Z+5, r25	; 0x05
    2772:	a6 83       	std	Z+6, r26	; 0x06
    2774:	b7 83       	std	Z+7, r27	; 0x07
        angles[2] = NAN;
    2776:	c1 51       	subi	r28, 0x11	; 17
    2778:	df 4f       	sbci	r29, 0xFF	; 255
    277a:	e8 81       	ld	r30, Y
    277c:	f9 81       	ldd	r31, Y+1	; 0x01
    277e:	cf 5e       	subi	r28, 0xEF	; 239
    2780:	d0 40       	sbci	r29, 0x00	; 0
    2782:	80 87       	std	Z+8, r24	; 0x08
    2784:	91 87       	std	Z+9, r25	; 0x09
    2786:	a2 87       	std	Z+10, r26	; 0x0a
    2788:	b3 87       	std	Z+11, r27	; 0x0b
    {
        printf("\n");
        printAngles("OUT", angles);
        printf("\n");
    }
}
    278a:	c8 5e       	subi	r28, 0xE8	; 232
    278c:	de 4f       	sbci	r29, 0xFE	; 254
    278e:	0f b6       	in	r0, 0x3f	; 63
    2790:	f8 94       	cli
    2792:	de bf       	out	0x3e, r29	; 62
    2794:	0f be       	out	0x3f, r0	; 63
    2796:	cd bf       	out	0x3d, r28	; 61
    2798:	cf 91       	pop	r28
    279a:	df 91       	pop	r29
    279c:	1f 91       	pop	r17
    279e:	0f 91       	pop	r16
    27a0:	ff 90       	pop	r15
    27a2:	ef 90       	pop	r14
    27a4:	df 90       	pop	r13
    27a6:	cf 90       	pop	r12
    27a8:	bf 90       	pop	r11
    27aa:	af 90       	pop	r10
    27ac:	9f 90       	pop	r9
    27ae:	8f 90       	pop	r8
    27b0:	7f 90       	pop	r7
    27b2:	6f 90       	pop	r6
    27b4:	5f 90       	pop	r5
    27b6:	4f 90       	pop	r4
    27b8:	3f 90       	pop	r3
    27ba:	2f 90       	pop	r2
    27bc:	08 95       	ret

000027be <pointValid>:
 * Workspace is a cylinder of radius R_MIN centered on the z-axis, with a
 * height ranging from Z_MIN to Z_MAX. Note: This does not check that the pen
 * does not run into the table or clamps.
 */
 int pointValid(struct point p)
 {
    27be:	af 92       	push	r10
    27c0:	bf 92       	push	r11
    27c2:	cf 92       	push	r12
    27c4:	df 92       	push	r13
    27c6:	ef 92       	push	r14
    27c8:	ff 92       	push	r15
    27ca:	0f 93       	push	r16
    27cc:	1f 93       	push	r17
    27ce:	df 93       	push	r29
    27d0:	cf 93       	push	r28
    27d2:	cd b7       	in	r28, 0x3d	; 61
    27d4:	de b7       	in	r29, 0x3e	; 62
    27d6:	2c 97       	sbiw	r28, 0x0c	; 12
    27d8:	0f b6       	in	r0, 0x3f	; 63
    27da:	f8 94       	cli
    27dc:	de bf       	out	0x3e, r29	; 62
    27de:	0f be       	out	0x3f, r0	; 63
    27e0:	cd bf       	out	0x3d, r28	; 61
    27e2:	e9 82       	std	Y+1, r14	; 0x01
    27e4:	fa 82       	std	Y+2, r15	; 0x02
    27e6:	0b 83       	std	Y+3, r16	; 0x03
    27e8:	1c 83       	std	Y+4, r17	; 0x04
    27ea:	2d 83       	std	Y+5, r18	; 0x05
    27ec:	3e 83       	std	Y+6, r19	; 0x06
    27ee:	4f 83       	std	Y+7, r20	; 0x07
    27f0:	58 87       	std	Y+8, r21	; 0x08
    27f2:	69 87       	std	Y+9, r22	; 0x09
    27f4:	7a 87       	std	Y+10, r23	; 0x0a
    27f6:	8b 87       	std	Y+11, r24	; 0x0b
    27f8:	9c 87       	std	Y+12, r25	; 0x0c
    27fa:	a9 84       	ldd	r10, Y+9	; 0x09
    27fc:	ba 84       	ldd	r11, Y+10	; 0x0a
    27fe:	cb 84       	ldd	r12, Y+11	; 0x0b
    2800:	dc 84       	ldd	r13, Y+12	; 0x0c
     return (pow(p.x, 2) + pow(p.y, 2) <= pow(R_MAX, 2) &&
    2802:	29 81       	ldd	r18, Y+1	; 0x01
    2804:	3a 81       	ldd	r19, Y+2	; 0x02
    2806:	4b 81       	ldd	r20, Y+3	; 0x03
    2808:	5c 81       	ldd	r21, Y+4	; 0x04
    280a:	ca 01       	movw	r24, r20
    280c:	b9 01       	movw	r22, r18
    280e:	ff d1       	rcall	.+1022   	; 0x2c0e <__mulsf3>
    2810:	e6 2e       	mov	r14, r22
    2812:	f7 2e       	mov	r15, r23
    2814:	08 2f       	mov	r16, r24
    2816:	19 2f       	mov	r17, r25
    2818:	2d 81       	ldd	r18, Y+5	; 0x05
    281a:	3e 81       	ldd	r19, Y+6	; 0x06
    281c:	4f 81       	ldd	r20, Y+7	; 0x07
    281e:	58 85       	ldd	r21, Y+8	; 0x08
    2820:	ca 01       	movw	r24, r20
    2822:	b9 01       	movw	r22, r18
    2824:	f4 d1       	rcall	.+1000   	; 0x2c0e <__mulsf3>
    2826:	26 2f       	mov	r18, r22
    2828:	37 2f       	mov	r19, r23
    282a:	48 2f       	mov	r20, r24
    282c:	59 2f       	mov	r21, r25
    282e:	c8 01       	movw	r24, r16
    2830:	b7 01       	movw	r22, r14
    2832:	36 d0       	rcall	.+108    	; 0x28a0 <__addsf3>
    2834:	2c ef       	ldi	r18, 0xFC	; 252
    2836:	3a e7       	ldi	r19, 0x7A	; 122
    2838:	40 e1       	ldi	r20, 0x10	; 16
    283a:	52 e4       	ldi	r21, 0x42	; 66
    283c:	95 d0       	rcall	.+298    	; 0x2968 <__cmpsf2>
    283e:	18 16       	cp	r1, r24
    2840:	cc f0       	brlt	.+50     	; 0x2874 <pointValid+0xb6>
    2842:	c6 01       	movw	r24, r12
    2844:	b5 01       	movw	r22, r10
    2846:	26 ef       	ldi	r18, 0xF6	; 246
    2848:	38 e2       	ldi	r19, 0x28	; 40
    284a:	40 e5       	ldi	r20, 0x50	; 80
    284c:	51 ec       	ldi	r21, 0xC1	; 193
    284e:	db d1       	rcall	.+950    	; 0x2c06 <__gesf2>
    2850:	88 23       	and	r24, r24
    2852:	84 f0       	brlt	.+32     	; 0x2874 <pointValid+0xb6>
    2854:	10 e0       	ldi	r17, 0x00	; 0
    2856:	c6 01       	movw	r24, r12
    2858:	b5 01       	movw	r22, r10
    285a:	24 e1       	ldi	r18, 0x14	; 20
    285c:	3e ea       	ldi	r19, 0xAE	; 174
    285e:	4f ef       	ldi	r20, 0xFF	; 255
    2860:	50 ec       	ldi	r21, 0xC0	; 192
    2862:	82 d0       	rcall	.+260    	; 0x2968 <__cmpsf2>
    2864:	18 16       	cp	r1, r24
    2866:	0c f4       	brge	.+2      	; 0x286a <pointValid+0xac>
    2868:	11 e0       	ldi	r17, 0x01	; 1
    286a:	81 e0       	ldi	r24, 0x01	; 1
    286c:	81 27       	eor	r24, r17
    286e:	28 2f       	mov	r18, r24
    2870:	30 e0       	ldi	r19, 0x00	; 0
    2872:	02 c0       	rjmp	.+4      	; 0x2878 <pointValid+0xba>
    2874:	20 e0       	ldi	r18, 0x00	; 0
    2876:	30 e0       	ldi	r19, 0x00	; 0
             p.z >= Z_MIN &&
             p.z <= Z_MAX);
 }
    2878:	82 2f       	mov	r24, r18
    287a:	93 2f       	mov	r25, r19
    287c:	2c 96       	adiw	r28, 0x0c	; 12
    287e:	0f b6       	in	r0, 0x3f	; 63
    2880:	f8 94       	cli
    2882:	de bf       	out	0x3e, r29	; 62
    2884:	0f be       	out	0x3f, r0	; 63
    2886:	cd bf       	out	0x3d, r28	; 61
    2888:	cf 91       	pop	r28
    288a:	df 91       	pop	r29
    288c:	1f 91       	pop	r17
    288e:	0f 91       	pop	r16
    2890:	ff 90       	pop	r15
    2892:	ef 90       	pop	r14
    2894:	df 90       	pop	r13
    2896:	cf 90       	pop	r12
    2898:	bf 90       	pop	r11
    289a:	af 90       	pop	r10
    289c:	08 95       	ret

0000289e <__subsf3>:
    289e:	50 58       	subi	r21, 0x80	; 128

000028a0 <__addsf3>:
    28a0:	bb 27       	eor	r27, r27
    28a2:	aa 27       	eor	r26, r26
    28a4:	0e d0       	rcall	.+28     	; 0x28c2 <__addsf3x>
    28a6:	75 c1       	rjmp	.+746    	; 0x2b92 <__fp_round>
    28a8:	66 d1       	rcall	.+716    	; 0x2b76 <__fp_pscA>
    28aa:	30 f0       	brcs	.+12     	; 0x28b8 <__addsf3+0x18>
    28ac:	6b d1       	rcall	.+726    	; 0x2b84 <__fp_pscB>
    28ae:	20 f0       	brcs	.+8      	; 0x28b8 <__addsf3+0x18>
    28b0:	31 f4       	brne	.+12     	; 0x28be <__addsf3+0x1e>
    28b2:	9f 3f       	cpi	r25, 0xFF	; 255
    28b4:	11 f4       	brne	.+4      	; 0x28ba <__addsf3+0x1a>
    28b6:	1e f4       	brtc	.+6      	; 0x28be <__addsf3+0x1e>
    28b8:	5b c1       	rjmp	.+694    	; 0x2b70 <__fp_nan>
    28ba:	0e f4       	brtc	.+2      	; 0x28be <__addsf3+0x1e>
    28bc:	e0 95       	com	r30
    28be:	e7 fb       	bst	r30, 7
    28c0:	51 c1       	rjmp	.+674    	; 0x2b64 <__fp_inf>

000028c2 <__addsf3x>:
    28c2:	e9 2f       	mov	r30, r25
    28c4:	77 d1       	rcall	.+750    	; 0x2bb4 <__fp_split3>
    28c6:	80 f3       	brcs	.-32     	; 0x28a8 <__addsf3+0x8>
    28c8:	ba 17       	cp	r27, r26
    28ca:	62 07       	cpc	r22, r18
    28cc:	73 07       	cpc	r23, r19
    28ce:	84 07       	cpc	r24, r20
    28d0:	95 07       	cpc	r25, r21
    28d2:	18 f0       	brcs	.+6      	; 0x28da <__addsf3x+0x18>
    28d4:	71 f4       	brne	.+28     	; 0x28f2 <__addsf3x+0x30>
    28d6:	9e f5       	brtc	.+102    	; 0x293e <__addsf3x+0x7c>
    28d8:	8f c1       	rjmp	.+798    	; 0x2bf8 <__fp_zero>
    28da:	0e f4       	brtc	.+2      	; 0x28de <__addsf3x+0x1c>
    28dc:	e0 95       	com	r30
    28de:	0b 2e       	mov	r0, r27
    28e0:	ba 2f       	mov	r27, r26
    28e2:	a0 2d       	mov	r26, r0
    28e4:	0b 01       	movw	r0, r22
    28e6:	b9 01       	movw	r22, r18
    28e8:	90 01       	movw	r18, r0
    28ea:	0c 01       	movw	r0, r24
    28ec:	ca 01       	movw	r24, r20
    28ee:	a0 01       	movw	r20, r0
    28f0:	11 24       	eor	r1, r1
    28f2:	ff 27       	eor	r31, r31
    28f4:	59 1b       	sub	r21, r25
    28f6:	99 f0       	breq	.+38     	; 0x291e <__addsf3x+0x5c>
    28f8:	59 3f       	cpi	r21, 0xF9	; 249
    28fa:	50 f4       	brcc	.+20     	; 0x2910 <__addsf3x+0x4e>
    28fc:	50 3e       	cpi	r21, 0xE0	; 224
    28fe:	68 f1       	brcs	.+90     	; 0x295a <__addsf3x+0x98>
    2900:	1a 16       	cp	r1, r26
    2902:	f0 40       	sbci	r31, 0x00	; 0
    2904:	a2 2f       	mov	r26, r18
    2906:	23 2f       	mov	r18, r19
    2908:	34 2f       	mov	r19, r20
    290a:	44 27       	eor	r20, r20
    290c:	58 5f       	subi	r21, 0xF8	; 248
    290e:	f3 cf       	rjmp	.-26     	; 0x28f6 <__addsf3x+0x34>
    2910:	46 95       	lsr	r20
    2912:	37 95       	ror	r19
    2914:	27 95       	ror	r18
    2916:	a7 95       	ror	r26
    2918:	f0 40       	sbci	r31, 0x00	; 0
    291a:	53 95       	inc	r21
    291c:	c9 f7       	brne	.-14     	; 0x2910 <__addsf3x+0x4e>
    291e:	7e f4       	brtc	.+30     	; 0x293e <__addsf3x+0x7c>
    2920:	1f 16       	cp	r1, r31
    2922:	ba 0b       	sbc	r27, r26
    2924:	62 0b       	sbc	r22, r18
    2926:	73 0b       	sbc	r23, r19
    2928:	84 0b       	sbc	r24, r20
    292a:	ba f0       	brmi	.+46     	; 0x295a <__addsf3x+0x98>
    292c:	91 50       	subi	r25, 0x01	; 1
    292e:	a1 f0       	breq	.+40     	; 0x2958 <__addsf3x+0x96>
    2930:	ff 0f       	add	r31, r31
    2932:	bb 1f       	adc	r27, r27
    2934:	66 1f       	adc	r22, r22
    2936:	77 1f       	adc	r23, r23
    2938:	88 1f       	adc	r24, r24
    293a:	c2 f7       	brpl	.-16     	; 0x292c <__addsf3x+0x6a>
    293c:	0e c0       	rjmp	.+28     	; 0x295a <__addsf3x+0x98>
    293e:	ba 0f       	add	r27, r26
    2940:	62 1f       	adc	r22, r18
    2942:	73 1f       	adc	r23, r19
    2944:	84 1f       	adc	r24, r20
    2946:	48 f4       	brcc	.+18     	; 0x295a <__addsf3x+0x98>
    2948:	87 95       	ror	r24
    294a:	77 95       	ror	r23
    294c:	67 95       	ror	r22
    294e:	b7 95       	ror	r27
    2950:	f7 95       	ror	r31
    2952:	9e 3f       	cpi	r25, 0xFE	; 254
    2954:	08 f0       	brcs	.+2      	; 0x2958 <__addsf3x+0x96>
    2956:	b3 cf       	rjmp	.-154    	; 0x28be <__addsf3+0x1e>
    2958:	93 95       	inc	r25
    295a:	88 0f       	add	r24, r24
    295c:	08 f0       	brcs	.+2      	; 0x2960 <__addsf3x+0x9e>
    295e:	99 27       	eor	r25, r25
    2960:	ee 0f       	add	r30, r30
    2962:	97 95       	ror	r25
    2964:	87 95       	ror	r24
    2966:	08 95       	ret

00002968 <__cmpsf2>:
    2968:	d9 d0       	rcall	.+434    	; 0x2b1c <__fp_cmp>
    296a:	08 f4       	brcc	.+2      	; 0x296e <__cmpsf2+0x6>
    296c:	81 e0       	ldi	r24, 0x01	; 1
    296e:	08 95       	ret

00002970 <__divsf3>:
    2970:	0c d0       	rcall	.+24     	; 0x298a <__divsf3x>
    2972:	0f c1       	rjmp	.+542    	; 0x2b92 <__fp_round>
    2974:	07 d1       	rcall	.+526    	; 0x2b84 <__fp_pscB>
    2976:	40 f0       	brcs	.+16     	; 0x2988 <__divsf3+0x18>
    2978:	fe d0       	rcall	.+508    	; 0x2b76 <__fp_pscA>
    297a:	30 f0       	brcs	.+12     	; 0x2988 <__divsf3+0x18>
    297c:	21 f4       	brne	.+8      	; 0x2986 <__divsf3+0x16>
    297e:	5f 3f       	cpi	r21, 0xFF	; 255
    2980:	19 f0       	breq	.+6      	; 0x2988 <__divsf3+0x18>
    2982:	f0 c0       	rjmp	.+480    	; 0x2b64 <__fp_inf>
    2984:	51 11       	cpse	r21, r1
    2986:	39 c1       	rjmp	.+626    	; 0x2bfa <__fp_szero>
    2988:	f3 c0       	rjmp	.+486    	; 0x2b70 <__fp_nan>

0000298a <__divsf3x>:
    298a:	14 d1       	rcall	.+552    	; 0x2bb4 <__fp_split3>
    298c:	98 f3       	brcs	.-26     	; 0x2974 <__divsf3+0x4>

0000298e <__divsf3_pse>:
    298e:	99 23       	and	r25, r25
    2990:	c9 f3       	breq	.-14     	; 0x2984 <__divsf3+0x14>
    2992:	55 23       	and	r21, r21
    2994:	b1 f3       	breq	.-20     	; 0x2982 <__divsf3+0x12>
    2996:	95 1b       	sub	r25, r21
    2998:	55 0b       	sbc	r21, r21
    299a:	bb 27       	eor	r27, r27
    299c:	aa 27       	eor	r26, r26
    299e:	62 17       	cp	r22, r18
    29a0:	73 07       	cpc	r23, r19
    29a2:	84 07       	cpc	r24, r20
    29a4:	38 f0       	brcs	.+14     	; 0x29b4 <__divsf3_pse+0x26>
    29a6:	9f 5f       	subi	r25, 0xFF	; 255
    29a8:	5f 4f       	sbci	r21, 0xFF	; 255
    29aa:	22 0f       	add	r18, r18
    29ac:	33 1f       	adc	r19, r19
    29ae:	44 1f       	adc	r20, r20
    29b0:	aa 1f       	adc	r26, r26
    29b2:	a9 f3       	breq	.-22     	; 0x299e <__divsf3_pse+0x10>
    29b4:	33 d0       	rcall	.+102    	; 0x2a1c <__divsf3_pse+0x8e>
    29b6:	0e 2e       	mov	r0, r30
    29b8:	3a f0       	brmi	.+14     	; 0x29c8 <__divsf3_pse+0x3a>
    29ba:	e0 e8       	ldi	r30, 0x80	; 128
    29bc:	30 d0       	rcall	.+96     	; 0x2a1e <__divsf3_pse+0x90>
    29be:	91 50       	subi	r25, 0x01	; 1
    29c0:	50 40       	sbci	r21, 0x00	; 0
    29c2:	e6 95       	lsr	r30
    29c4:	00 1c       	adc	r0, r0
    29c6:	ca f7       	brpl	.-14     	; 0x29ba <__divsf3_pse+0x2c>
    29c8:	29 d0       	rcall	.+82     	; 0x2a1c <__divsf3_pse+0x8e>
    29ca:	fe 2f       	mov	r31, r30
    29cc:	27 d0       	rcall	.+78     	; 0x2a1c <__divsf3_pse+0x8e>
    29ce:	66 0f       	add	r22, r22
    29d0:	77 1f       	adc	r23, r23
    29d2:	88 1f       	adc	r24, r24
    29d4:	bb 1f       	adc	r27, r27
    29d6:	26 17       	cp	r18, r22
    29d8:	37 07       	cpc	r19, r23
    29da:	48 07       	cpc	r20, r24
    29dc:	ab 07       	cpc	r26, r27
    29de:	b0 e8       	ldi	r27, 0x80	; 128
    29e0:	09 f0       	breq	.+2      	; 0x29e4 <__divsf3_pse+0x56>
    29e2:	bb 0b       	sbc	r27, r27
    29e4:	80 2d       	mov	r24, r0
    29e6:	bf 01       	movw	r22, r30
    29e8:	ff 27       	eor	r31, r31
    29ea:	93 58       	subi	r25, 0x83	; 131
    29ec:	5f 4f       	sbci	r21, 0xFF	; 255
    29ee:	2a f0       	brmi	.+10     	; 0x29fa <__divsf3_pse+0x6c>
    29f0:	9e 3f       	cpi	r25, 0xFE	; 254
    29f2:	51 05       	cpc	r21, r1
    29f4:	68 f0       	brcs	.+26     	; 0x2a10 <__divsf3_pse+0x82>
    29f6:	b6 c0       	rjmp	.+364    	; 0x2b64 <__fp_inf>
    29f8:	00 c1       	rjmp	.+512    	; 0x2bfa <__fp_szero>
    29fa:	5f 3f       	cpi	r21, 0xFF	; 255
    29fc:	ec f3       	brlt	.-6      	; 0x29f8 <__divsf3_pse+0x6a>
    29fe:	98 3e       	cpi	r25, 0xE8	; 232
    2a00:	dc f3       	brlt	.-10     	; 0x29f8 <__divsf3_pse+0x6a>
    2a02:	86 95       	lsr	r24
    2a04:	77 95       	ror	r23
    2a06:	67 95       	ror	r22
    2a08:	b7 95       	ror	r27
    2a0a:	f7 95       	ror	r31
    2a0c:	9f 5f       	subi	r25, 0xFF	; 255
    2a0e:	c9 f7       	brne	.-14     	; 0x2a02 <__divsf3_pse+0x74>
    2a10:	88 0f       	add	r24, r24
    2a12:	91 1d       	adc	r25, r1
    2a14:	96 95       	lsr	r25
    2a16:	87 95       	ror	r24
    2a18:	97 f9       	bld	r25, 7
    2a1a:	08 95       	ret
    2a1c:	e1 e0       	ldi	r30, 0x01	; 1
    2a1e:	66 0f       	add	r22, r22
    2a20:	77 1f       	adc	r23, r23
    2a22:	88 1f       	adc	r24, r24
    2a24:	bb 1f       	adc	r27, r27
    2a26:	62 17       	cp	r22, r18
    2a28:	73 07       	cpc	r23, r19
    2a2a:	84 07       	cpc	r24, r20
    2a2c:	ba 07       	cpc	r27, r26
    2a2e:	20 f0       	brcs	.+8      	; 0x2a38 <__divsf3_pse+0xaa>
    2a30:	62 1b       	sub	r22, r18
    2a32:	73 0b       	sbc	r23, r19
    2a34:	84 0b       	sbc	r24, r20
    2a36:	ba 0b       	sbc	r27, r26
    2a38:	ee 1f       	adc	r30, r30
    2a3a:	88 f7       	brcc	.-30     	; 0x2a1e <__divsf3_pse+0x90>
    2a3c:	e0 95       	com	r30
    2a3e:	08 95       	ret

00002a40 <__fixsfsi>:
    2a40:	04 d0       	rcall	.+8      	; 0x2a4a <__fixunssfsi>
    2a42:	68 94       	set
    2a44:	b1 11       	cpse	r27, r1
    2a46:	d9 c0       	rjmp	.+434    	; 0x2bfa <__fp_szero>
    2a48:	08 95       	ret

00002a4a <__fixunssfsi>:
    2a4a:	bc d0       	rcall	.+376    	; 0x2bc4 <__fp_splitA>
    2a4c:	88 f0       	brcs	.+34     	; 0x2a70 <__fixunssfsi+0x26>
    2a4e:	9f 57       	subi	r25, 0x7F	; 127
    2a50:	90 f0       	brcs	.+36     	; 0x2a76 <__fixunssfsi+0x2c>
    2a52:	b9 2f       	mov	r27, r25
    2a54:	99 27       	eor	r25, r25
    2a56:	b7 51       	subi	r27, 0x17	; 23
    2a58:	a0 f0       	brcs	.+40     	; 0x2a82 <__fixunssfsi+0x38>
    2a5a:	d1 f0       	breq	.+52     	; 0x2a90 <__fixunssfsi+0x46>
    2a5c:	66 0f       	add	r22, r22
    2a5e:	77 1f       	adc	r23, r23
    2a60:	88 1f       	adc	r24, r24
    2a62:	99 1f       	adc	r25, r25
    2a64:	1a f0       	brmi	.+6      	; 0x2a6c <__fixunssfsi+0x22>
    2a66:	ba 95       	dec	r27
    2a68:	c9 f7       	brne	.-14     	; 0x2a5c <__fixunssfsi+0x12>
    2a6a:	12 c0       	rjmp	.+36     	; 0x2a90 <__fixunssfsi+0x46>
    2a6c:	b1 30       	cpi	r27, 0x01	; 1
    2a6e:	81 f0       	breq	.+32     	; 0x2a90 <__fixunssfsi+0x46>
    2a70:	c3 d0       	rcall	.+390    	; 0x2bf8 <__fp_zero>
    2a72:	b1 e0       	ldi	r27, 0x01	; 1
    2a74:	08 95       	ret
    2a76:	c0 c0       	rjmp	.+384    	; 0x2bf8 <__fp_zero>
    2a78:	67 2f       	mov	r22, r23
    2a7a:	78 2f       	mov	r23, r24
    2a7c:	88 27       	eor	r24, r24
    2a7e:	b8 5f       	subi	r27, 0xF8	; 248
    2a80:	39 f0       	breq	.+14     	; 0x2a90 <__fixunssfsi+0x46>
    2a82:	b9 3f       	cpi	r27, 0xF9	; 249
    2a84:	cc f3       	brlt	.-14     	; 0x2a78 <__fixunssfsi+0x2e>
    2a86:	86 95       	lsr	r24
    2a88:	77 95       	ror	r23
    2a8a:	67 95       	ror	r22
    2a8c:	b3 95       	inc	r27
    2a8e:	d9 f7       	brne	.-10     	; 0x2a86 <__fixunssfsi+0x3c>
    2a90:	3e f4       	brtc	.+14     	; 0x2aa0 <__fixunssfsi+0x56>
    2a92:	90 95       	com	r25
    2a94:	80 95       	com	r24
    2a96:	70 95       	com	r23
    2a98:	61 95       	neg	r22
    2a9a:	7f 4f       	sbci	r23, 0xFF	; 255
    2a9c:	8f 4f       	sbci	r24, 0xFF	; 255
    2a9e:	9f 4f       	sbci	r25, 0xFF	; 255
    2aa0:	08 95       	ret

00002aa2 <__floatunsisf>:
    2aa2:	e8 94       	clt
    2aa4:	09 c0       	rjmp	.+18     	; 0x2ab8 <__floatsisf+0x12>

00002aa6 <__floatsisf>:
    2aa6:	97 fb       	bst	r25, 7
    2aa8:	3e f4       	brtc	.+14     	; 0x2ab8 <__floatsisf+0x12>
    2aaa:	90 95       	com	r25
    2aac:	80 95       	com	r24
    2aae:	70 95       	com	r23
    2ab0:	61 95       	neg	r22
    2ab2:	7f 4f       	sbci	r23, 0xFF	; 255
    2ab4:	8f 4f       	sbci	r24, 0xFF	; 255
    2ab6:	9f 4f       	sbci	r25, 0xFF	; 255
    2ab8:	99 23       	and	r25, r25
    2aba:	a9 f0       	breq	.+42     	; 0x2ae6 <__floatsisf+0x40>
    2abc:	f9 2f       	mov	r31, r25
    2abe:	96 e9       	ldi	r25, 0x96	; 150
    2ac0:	bb 27       	eor	r27, r27
    2ac2:	93 95       	inc	r25
    2ac4:	f6 95       	lsr	r31
    2ac6:	87 95       	ror	r24
    2ac8:	77 95       	ror	r23
    2aca:	67 95       	ror	r22
    2acc:	b7 95       	ror	r27
    2ace:	f1 11       	cpse	r31, r1
    2ad0:	f8 cf       	rjmp	.-16     	; 0x2ac2 <__floatsisf+0x1c>
    2ad2:	fa f4       	brpl	.+62     	; 0x2b12 <__floatsisf+0x6c>
    2ad4:	bb 0f       	add	r27, r27
    2ad6:	11 f4       	brne	.+4      	; 0x2adc <__floatsisf+0x36>
    2ad8:	60 ff       	sbrs	r22, 0
    2ada:	1b c0       	rjmp	.+54     	; 0x2b12 <__floatsisf+0x6c>
    2adc:	6f 5f       	subi	r22, 0xFF	; 255
    2ade:	7f 4f       	sbci	r23, 0xFF	; 255
    2ae0:	8f 4f       	sbci	r24, 0xFF	; 255
    2ae2:	9f 4f       	sbci	r25, 0xFF	; 255
    2ae4:	16 c0       	rjmp	.+44     	; 0x2b12 <__floatsisf+0x6c>
    2ae6:	88 23       	and	r24, r24
    2ae8:	11 f0       	breq	.+4      	; 0x2aee <__floatsisf+0x48>
    2aea:	96 e9       	ldi	r25, 0x96	; 150
    2aec:	11 c0       	rjmp	.+34     	; 0x2b10 <__floatsisf+0x6a>
    2aee:	77 23       	and	r23, r23
    2af0:	21 f0       	breq	.+8      	; 0x2afa <__floatsisf+0x54>
    2af2:	9e e8       	ldi	r25, 0x8E	; 142
    2af4:	87 2f       	mov	r24, r23
    2af6:	76 2f       	mov	r23, r22
    2af8:	05 c0       	rjmp	.+10     	; 0x2b04 <__floatsisf+0x5e>
    2afa:	66 23       	and	r22, r22
    2afc:	71 f0       	breq	.+28     	; 0x2b1a <__floatsisf+0x74>
    2afe:	96 e8       	ldi	r25, 0x86	; 134
    2b00:	86 2f       	mov	r24, r22
    2b02:	70 e0       	ldi	r23, 0x00	; 0
    2b04:	60 e0       	ldi	r22, 0x00	; 0
    2b06:	2a f0       	brmi	.+10     	; 0x2b12 <__floatsisf+0x6c>
    2b08:	9a 95       	dec	r25
    2b0a:	66 0f       	add	r22, r22
    2b0c:	77 1f       	adc	r23, r23
    2b0e:	88 1f       	adc	r24, r24
    2b10:	da f7       	brpl	.-10     	; 0x2b08 <__floatsisf+0x62>
    2b12:	88 0f       	add	r24, r24
    2b14:	96 95       	lsr	r25
    2b16:	87 95       	ror	r24
    2b18:	97 f9       	bld	r25, 7
    2b1a:	08 95       	ret

00002b1c <__fp_cmp>:
    2b1c:	99 0f       	add	r25, r25
    2b1e:	00 08       	sbc	r0, r0
    2b20:	55 0f       	add	r21, r21
    2b22:	aa 0b       	sbc	r26, r26
    2b24:	e0 e8       	ldi	r30, 0x80	; 128
    2b26:	fe ef       	ldi	r31, 0xFE	; 254
    2b28:	16 16       	cp	r1, r22
    2b2a:	17 06       	cpc	r1, r23
    2b2c:	e8 07       	cpc	r30, r24
    2b2e:	f9 07       	cpc	r31, r25
    2b30:	c0 f0       	brcs	.+48     	; 0x2b62 <__fp_cmp+0x46>
    2b32:	12 16       	cp	r1, r18
    2b34:	13 06       	cpc	r1, r19
    2b36:	e4 07       	cpc	r30, r20
    2b38:	f5 07       	cpc	r31, r21
    2b3a:	98 f0       	brcs	.+38     	; 0x2b62 <__fp_cmp+0x46>
    2b3c:	62 1b       	sub	r22, r18
    2b3e:	73 0b       	sbc	r23, r19
    2b40:	84 0b       	sbc	r24, r20
    2b42:	95 0b       	sbc	r25, r21
    2b44:	39 f4       	brne	.+14     	; 0x2b54 <__fp_cmp+0x38>
    2b46:	0a 26       	eor	r0, r26
    2b48:	61 f0       	breq	.+24     	; 0x2b62 <__fp_cmp+0x46>
    2b4a:	23 2b       	or	r18, r19
    2b4c:	24 2b       	or	r18, r20
    2b4e:	25 2b       	or	r18, r21
    2b50:	21 f4       	brne	.+8      	; 0x2b5a <__fp_cmp+0x3e>
    2b52:	08 95       	ret
    2b54:	0a 26       	eor	r0, r26
    2b56:	09 f4       	brne	.+2      	; 0x2b5a <__fp_cmp+0x3e>
    2b58:	a1 40       	sbci	r26, 0x01	; 1
    2b5a:	a6 95       	lsr	r26
    2b5c:	8f ef       	ldi	r24, 0xFF	; 255
    2b5e:	81 1d       	adc	r24, r1
    2b60:	81 1d       	adc	r24, r1
    2b62:	08 95       	ret

00002b64 <__fp_inf>:
    2b64:	97 f9       	bld	r25, 7
    2b66:	9f 67       	ori	r25, 0x7F	; 127
    2b68:	80 e8       	ldi	r24, 0x80	; 128
    2b6a:	70 e0       	ldi	r23, 0x00	; 0
    2b6c:	60 e0       	ldi	r22, 0x00	; 0
    2b6e:	08 95       	ret

00002b70 <__fp_nan>:
    2b70:	9f ef       	ldi	r25, 0xFF	; 255
    2b72:	80 ec       	ldi	r24, 0xC0	; 192
    2b74:	08 95       	ret

00002b76 <__fp_pscA>:
    2b76:	00 24       	eor	r0, r0
    2b78:	0a 94       	dec	r0
    2b7a:	16 16       	cp	r1, r22
    2b7c:	17 06       	cpc	r1, r23
    2b7e:	18 06       	cpc	r1, r24
    2b80:	09 06       	cpc	r0, r25
    2b82:	08 95       	ret

00002b84 <__fp_pscB>:
    2b84:	00 24       	eor	r0, r0
    2b86:	0a 94       	dec	r0
    2b88:	12 16       	cp	r1, r18
    2b8a:	13 06       	cpc	r1, r19
    2b8c:	14 06       	cpc	r1, r20
    2b8e:	05 06       	cpc	r0, r21
    2b90:	08 95       	ret

00002b92 <__fp_round>:
    2b92:	09 2e       	mov	r0, r25
    2b94:	03 94       	inc	r0
    2b96:	00 0c       	add	r0, r0
    2b98:	11 f4       	brne	.+4      	; 0x2b9e <__fp_round+0xc>
    2b9a:	88 23       	and	r24, r24
    2b9c:	52 f0       	brmi	.+20     	; 0x2bb2 <__fp_round+0x20>
    2b9e:	bb 0f       	add	r27, r27
    2ba0:	40 f4       	brcc	.+16     	; 0x2bb2 <__fp_round+0x20>
    2ba2:	bf 2b       	or	r27, r31
    2ba4:	11 f4       	brne	.+4      	; 0x2baa <__fp_round+0x18>
    2ba6:	60 ff       	sbrs	r22, 0
    2ba8:	04 c0       	rjmp	.+8      	; 0x2bb2 <__fp_round+0x20>
    2baa:	6f 5f       	subi	r22, 0xFF	; 255
    2bac:	7f 4f       	sbci	r23, 0xFF	; 255
    2bae:	8f 4f       	sbci	r24, 0xFF	; 255
    2bb0:	9f 4f       	sbci	r25, 0xFF	; 255
    2bb2:	08 95       	ret

00002bb4 <__fp_split3>:
    2bb4:	57 fd       	sbrc	r21, 7
    2bb6:	90 58       	subi	r25, 0x80	; 128
    2bb8:	44 0f       	add	r20, r20
    2bba:	55 1f       	adc	r21, r21
    2bbc:	59 f0       	breq	.+22     	; 0x2bd4 <__fp_splitA+0x10>
    2bbe:	5f 3f       	cpi	r21, 0xFF	; 255
    2bc0:	71 f0       	breq	.+28     	; 0x2bde <__fp_splitA+0x1a>
    2bc2:	47 95       	ror	r20

00002bc4 <__fp_splitA>:
    2bc4:	88 0f       	add	r24, r24
    2bc6:	97 fb       	bst	r25, 7
    2bc8:	99 1f       	adc	r25, r25
    2bca:	61 f0       	breq	.+24     	; 0x2be4 <__fp_splitA+0x20>
    2bcc:	9f 3f       	cpi	r25, 0xFF	; 255
    2bce:	79 f0       	breq	.+30     	; 0x2bee <__fp_splitA+0x2a>
    2bd0:	87 95       	ror	r24
    2bd2:	08 95       	ret
    2bd4:	12 16       	cp	r1, r18
    2bd6:	13 06       	cpc	r1, r19
    2bd8:	14 06       	cpc	r1, r20
    2bda:	55 1f       	adc	r21, r21
    2bdc:	f2 cf       	rjmp	.-28     	; 0x2bc2 <__fp_split3+0xe>
    2bde:	46 95       	lsr	r20
    2be0:	f1 df       	rcall	.-30     	; 0x2bc4 <__fp_splitA>
    2be2:	08 c0       	rjmp	.+16     	; 0x2bf4 <__fp_splitA+0x30>
    2be4:	16 16       	cp	r1, r22
    2be6:	17 06       	cpc	r1, r23
    2be8:	18 06       	cpc	r1, r24
    2bea:	99 1f       	adc	r25, r25
    2bec:	f1 cf       	rjmp	.-30     	; 0x2bd0 <__fp_splitA+0xc>
    2bee:	86 95       	lsr	r24
    2bf0:	71 05       	cpc	r23, r1
    2bf2:	61 05       	cpc	r22, r1
    2bf4:	08 94       	sec
    2bf6:	08 95       	ret

00002bf8 <__fp_zero>:
    2bf8:	e8 94       	clt

00002bfa <__fp_szero>:
    2bfa:	bb 27       	eor	r27, r27
    2bfc:	66 27       	eor	r22, r22
    2bfe:	77 27       	eor	r23, r23
    2c00:	cb 01       	movw	r24, r22
    2c02:	97 f9       	bld	r25, 7
    2c04:	08 95       	ret

00002c06 <__gesf2>:
    2c06:	8a df       	rcall	.-236    	; 0x2b1c <__fp_cmp>
    2c08:	08 f4       	brcc	.+2      	; 0x2c0c <__gesf2+0x6>
    2c0a:	8f ef       	ldi	r24, 0xFF	; 255
    2c0c:	08 95       	ret

00002c0e <__mulsf3>:
    2c0e:	0b d0       	rcall	.+22     	; 0x2c26 <__mulsf3x>
    2c10:	c0 cf       	rjmp	.-128    	; 0x2b92 <__fp_round>
    2c12:	b1 df       	rcall	.-158    	; 0x2b76 <__fp_pscA>
    2c14:	28 f0       	brcs	.+10     	; 0x2c20 <__mulsf3+0x12>
    2c16:	b6 df       	rcall	.-148    	; 0x2b84 <__fp_pscB>
    2c18:	18 f0       	brcs	.+6      	; 0x2c20 <__mulsf3+0x12>
    2c1a:	95 23       	and	r25, r21
    2c1c:	09 f0       	breq	.+2      	; 0x2c20 <__mulsf3+0x12>
    2c1e:	a2 cf       	rjmp	.-188    	; 0x2b64 <__fp_inf>
    2c20:	a7 cf       	rjmp	.-178    	; 0x2b70 <__fp_nan>
    2c22:	11 24       	eor	r1, r1
    2c24:	ea cf       	rjmp	.-44     	; 0x2bfa <__fp_szero>

00002c26 <__mulsf3x>:
    2c26:	c6 df       	rcall	.-116    	; 0x2bb4 <__fp_split3>
    2c28:	a0 f3       	brcs	.-24     	; 0x2c12 <__mulsf3+0x4>

00002c2a <__mulsf3_pse>:
    2c2a:	95 9f       	mul	r25, r21
    2c2c:	d1 f3       	breq	.-12     	; 0x2c22 <__mulsf3+0x14>
    2c2e:	95 0f       	add	r25, r21
    2c30:	50 e0       	ldi	r21, 0x00	; 0
    2c32:	55 1f       	adc	r21, r21
    2c34:	62 9f       	mul	r22, r18
    2c36:	f0 01       	movw	r30, r0
    2c38:	72 9f       	mul	r23, r18
    2c3a:	bb 27       	eor	r27, r27
    2c3c:	f0 0d       	add	r31, r0
    2c3e:	b1 1d       	adc	r27, r1
    2c40:	63 9f       	mul	r22, r19
    2c42:	aa 27       	eor	r26, r26
    2c44:	f0 0d       	add	r31, r0
    2c46:	b1 1d       	adc	r27, r1
    2c48:	aa 1f       	adc	r26, r26
    2c4a:	64 9f       	mul	r22, r20
    2c4c:	66 27       	eor	r22, r22
    2c4e:	b0 0d       	add	r27, r0
    2c50:	a1 1d       	adc	r26, r1
    2c52:	66 1f       	adc	r22, r22
    2c54:	82 9f       	mul	r24, r18
    2c56:	22 27       	eor	r18, r18
    2c58:	b0 0d       	add	r27, r0
    2c5a:	a1 1d       	adc	r26, r1
    2c5c:	62 1f       	adc	r22, r18
    2c5e:	73 9f       	mul	r23, r19
    2c60:	b0 0d       	add	r27, r0
    2c62:	a1 1d       	adc	r26, r1
    2c64:	62 1f       	adc	r22, r18
    2c66:	83 9f       	mul	r24, r19
    2c68:	a0 0d       	add	r26, r0
    2c6a:	61 1d       	adc	r22, r1
    2c6c:	22 1f       	adc	r18, r18
    2c6e:	74 9f       	mul	r23, r20
    2c70:	33 27       	eor	r19, r19
    2c72:	a0 0d       	add	r26, r0
    2c74:	61 1d       	adc	r22, r1
    2c76:	23 1f       	adc	r18, r19
    2c78:	84 9f       	mul	r24, r20
    2c7a:	60 0d       	add	r22, r0
    2c7c:	21 1d       	adc	r18, r1
    2c7e:	82 2f       	mov	r24, r18
    2c80:	76 2f       	mov	r23, r22
    2c82:	6a 2f       	mov	r22, r26
    2c84:	11 24       	eor	r1, r1
    2c86:	9f 57       	subi	r25, 0x7F	; 127
    2c88:	50 40       	sbci	r21, 0x00	; 0
    2c8a:	8a f0       	brmi	.+34     	; 0x2cae <__mulsf3_pse+0x84>
    2c8c:	e1 f0       	breq	.+56     	; 0x2cc6 <__mulsf3_pse+0x9c>
    2c8e:	88 23       	and	r24, r24
    2c90:	4a f0       	brmi	.+18     	; 0x2ca4 <__mulsf3_pse+0x7a>
    2c92:	ee 0f       	add	r30, r30
    2c94:	ff 1f       	adc	r31, r31
    2c96:	bb 1f       	adc	r27, r27
    2c98:	66 1f       	adc	r22, r22
    2c9a:	77 1f       	adc	r23, r23
    2c9c:	88 1f       	adc	r24, r24
    2c9e:	91 50       	subi	r25, 0x01	; 1
    2ca0:	50 40       	sbci	r21, 0x00	; 0
    2ca2:	a9 f7       	brne	.-22     	; 0x2c8e <__mulsf3_pse+0x64>
    2ca4:	9e 3f       	cpi	r25, 0xFE	; 254
    2ca6:	51 05       	cpc	r21, r1
    2ca8:	70 f0       	brcs	.+28     	; 0x2cc6 <__mulsf3_pse+0x9c>
    2caa:	5c cf       	rjmp	.-328    	; 0x2b64 <__fp_inf>
    2cac:	a6 cf       	rjmp	.-180    	; 0x2bfa <__fp_szero>
    2cae:	5f 3f       	cpi	r21, 0xFF	; 255
    2cb0:	ec f3       	brlt	.-6      	; 0x2cac <__mulsf3_pse+0x82>
    2cb2:	98 3e       	cpi	r25, 0xE8	; 232
    2cb4:	dc f3       	brlt	.-10     	; 0x2cac <__mulsf3_pse+0x82>
    2cb6:	86 95       	lsr	r24
    2cb8:	77 95       	ror	r23
    2cba:	67 95       	ror	r22
    2cbc:	b7 95       	ror	r27
    2cbe:	f7 95       	ror	r31
    2cc0:	e7 95       	ror	r30
    2cc2:	9f 5f       	subi	r25, 0xFF	; 255
    2cc4:	c1 f7       	brne	.-16     	; 0x2cb6 <__mulsf3_pse+0x8c>
    2cc6:	fe 2b       	or	r31, r30
    2cc8:	88 0f       	add	r24, r24
    2cca:	91 1d       	adc	r25, r1
    2ccc:	96 95       	lsr	r25
    2cce:	87 95       	ror	r24
    2cd0:	97 f9       	bld	r25, 7
    2cd2:	08 95       	ret

00002cd4 <__unordsf2>:
    2cd4:	23 df       	rcall	.-442    	; 0x2b1c <__fp_cmp>
    2cd6:	88 0b       	sbc	r24, r24
    2cd8:	99 0b       	sbc	r25, r25
    2cda:	08 95       	ret

00002cdc <vfprintf>:
    2cdc:	2f 92       	push	r2
    2cde:	3f 92       	push	r3
    2ce0:	4f 92       	push	r4
    2ce2:	5f 92       	push	r5
    2ce4:	6f 92       	push	r6
    2ce6:	7f 92       	push	r7
    2ce8:	8f 92       	push	r8
    2cea:	9f 92       	push	r9
    2cec:	af 92       	push	r10
    2cee:	bf 92       	push	r11
    2cf0:	cf 92       	push	r12
    2cf2:	df 92       	push	r13
    2cf4:	ef 92       	push	r14
    2cf6:	ff 92       	push	r15
    2cf8:	0f 93       	push	r16
    2cfa:	1f 93       	push	r17
    2cfc:	df 93       	push	r29
    2cfe:	cf 93       	push	r28
    2d00:	cd b7       	in	r28, 0x3d	; 61
    2d02:	de b7       	in	r29, 0x3e	; 62
    2d04:	61 97       	sbiw	r28, 0x11	; 17
    2d06:	0f b6       	in	r0, 0x3f	; 63
    2d08:	f8 94       	cli
    2d0a:	de bf       	out	0x3e, r29	; 62
    2d0c:	0f be       	out	0x3f, r0	; 63
    2d0e:	cd bf       	out	0x3d, r28	; 61
    2d10:	3c 01       	movw	r6, r24
    2d12:	7f 87       	std	Y+15, r23	; 0x0f
    2d14:	6e 87       	std	Y+14, r22	; 0x0e
    2d16:	6a 01       	movw	r12, r20
    2d18:	fc 01       	movw	r30, r24
    2d1a:	17 82       	std	Z+7, r1	; 0x07
    2d1c:	16 82       	std	Z+6, r1	; 0x06
    2d1e:	83 81       	ldd	r24, Z+3	; 0x03
    2d20:	81 fd       	sbrc	r24, 1
    2d22:	03 c0       	rjmp	.+6      	; 0x2d2a <vfprintf+0x4e>
    2d24:	6f ef       	ldi	r22, 0xFF	; 255
    2d26:	7f ef       	ldi	r23, 0xFF	; 255
    2d28:	52 c3       	rjmp	.+1700   	; 0x33ce <vfprintf+0x6f2>
    2d2a:	9e 01       	movw	r18, r28
    2d2c:	2f 5f       	subi	r18, 0xFF	; 255
    2d2e:	3f 4f       	sbci	r19, 0xFF	; 255
    2d30:	39 8b       	std	Y+17, r19	; 0x11
    2d32:	28 8b       	std	Y+16, r18	; 0x10
    2d34:	f3 01       	movw	r30, r6
    2d36:	23 81       	ldd	r18, Z+3	; 0x03
    2d38:	ee 85       	ldd	r30, Y+14	; 0x0e
    2d3a:	ff 85       	ldd	r31, Y+15	; 0x0f
    2d3c:	23 fd       	sbrc	r18, 3
    2d3e:	85 91       	lpm	r24, Z+
    2d40:	23 ff       	sbrs	r18, 3
    2d42:	81 91       	ld	r24, Z+
    2d44:	ff 87       	std	Y+15, r31	; 0x0f
    2d46:	ee 87       	std	Y+14, r30	; 0x0e
    2d48:	88 23       	and	r24, r24
    2d4a:	09 f4       	brne	.+2      	; 0x2d4e <vfprintf+0x72>
    2d4c:	3d c3       	rjmp	.+1658   	; 0x33c8 <vfprintf+0x6ec>
    2d4e:	85 32       	cpi	r24, 0x25	; 37
    2d50:	51 f4       	brne	.+20     	; 0x2d66 <vfprintf+0x8a>
    2d52:	ee 85       	ldd	r30, Y+14	; 0x0e
    2d54:	ff 85       	ldd	r31, Y+15	; 0x0f
    2d56:	23 fd       	sbrc	r18, 3
    2d58:	85 91       	lpm	r24, Z+
    2d5a:	23 ff       	sbrs	r18, 3
    2d5c:	81 91       	ld	r24, Z+
    2d5e:	ff 87       	std	Y+15, r31	; 0x0f
    2d60:	ee 87       	std	Y+14, r30	; 0x0e
    2d62:	85 32       	cpi	r24, 0x25	; 37
    2d64:	21 f4       	brne	.+8      	; 0x2d6e <vfprintf+0x92>
    2d66:	90 e0       	ldi	r25, 0x00	; 0
    2d68:	b3 01       	movw	r22, r6
    2d6a:	c6 d4       	rcall	.+2444   	; 0x36f8 <fputc>
    2d6c:	e3 cf       	rjmp	.-58     	; 0x2d34 <vfprintf+0x58>
    2d6e:	98 2f       	mov	r25, r24
    2d70:	10 e0       	ldi	r17, 0x00	; 0
    2d72:	88 24       	eor	r8, r8
    2d74:	99 24       	eor	r9, r9
    2d76:	10 32       	cpi	r17, 0x20	; 32
    2d78:	b0 f4       	brcc	.+44     	; 0x2da6 <vfprintf+0xca>
    2d7a:	9b 32       	cpi	r25, 0x2B	; 43
    2d7c:	69 f0       	breq	.+26     	; 0x2d98 <vfprintf+0xbc>
    2d7e:	9c 32       	cpi	r25, 0x2C	; 44
    2d80:	28 f4       	brcc	.+10     	; 0x2d8c <vfprintf+0xb0>
    2d82:	90 32       	cpi	r25, 0x20	; 32
    2d84:	51 f0       	breq	.+20     	; 0x2d9a <vfprintf+0xbe>
    2d86:	93 32       	cpi	r25, 0x23	; 35
    2d88:	71 f4       	brne	.+28     	; 0x2da6 <vfprintf+0xca>
    2d8a:	0b c0       	rjmp	.+22     	; 0x2da2 <vfprintf+0xc6>
    2d8c:	9d 32       	cpi	r25, 0x2D	; 45
    2d8e:	39 f0       	breq	.+14     	; 0x2d9e <vfprintf+0xc2>
    2d90:	90 33       	cpi	r25, 0x30	; 48
    2d92:	49 f4       	brne	.+18     	; 0x2da6 <vfprintf+0xca>
    2d94:	11 60       	ori	r17, 0x01	; 1
    2d96:	28 c0       	rjmp	.+80     	; 0x2de8 <vfprintf+0x10c>
    2d98:	12 60       	ori	r17, 0x02	; 2
    2d9a:	14 60       	ori	r17, 0x04	; 4
    2d9c:	25 c0       	rjmp	.+74     	; 0x2de8 <vfprintf+0x10c>
    2d9e:	18 60       	ori	r17, 0x08	; 8
    2da0:	23 c0       	rjmp	.+70     	; 0x2de8 <vfprintf+0x10c>
    2da2:	10 61       	ori	r17, 0x10	; 16
    2da4:	21 c0       	rjmp	.+66     	; 0x2de8 <vfprintf+0x10c>
    2da6:	17 fd       	sbrc	r17, 7
    2da8:	2a c0       	rjmp	.+84     	; 0x2dfe <vfprintf+0x122>
    2daa:	89 2f       	mov	r24, r25
    2dac:	80 53       	subi	r24, 0x30	; 48
    2dae:	8a 30       	cpi	r24, 0x0A	; 10
    2db0:	78 f4       	brcc	.+30     	; 0x2dd0 <vfprintf+0xf4>
    2db2:	16 ff       	sbrs	r17, 6
    2db4:	06 c0       	rjmp	.+12     	; 0x2dc2 <vfprintf+0xe6>
    2db6:	fa e0       	ldi	r31, 0x0A	; 10
    2db8:	9f 9e       	mul	r9, r31
    2dba:	90 2c       	mov	r9, r0
    2dbc:	11 24       	eor	r1, r1
    2dbe:	98 0e       	add	r9, r24
    2dc0:	13 c0       	rjmp	.+38     	; 0x2de8 <vfprintf+0x10c>
    2dc2:	3a e0       	ldi	r19, 0x0A	; 10
    2dc4:	83 9e       	mul	r8, r19
    2dc6:	80 2c       	mov	r8, r0
    2dc8:	11 24       	eor	r1, r1
    2dca:	88 0e       	add	r8, r24
    2dcc:	10 62       	ori	r17, 0x20	; 32
    2dce:	0c c0       	rjmp	.+24     	; 0x2de8 <vfprintf+0x10c>
    2dd0:	9e 32       	cpi	r25, 0x2E	; 46
    2dd2:	21 f4       	brne	.+8      	; 0x2ddc <vfprintf+0x100>
    2dd4:	16 fd       	sbrc	r17, 6
    2dd6:	f8 c2       	rjmp	.+1520   	; 0x33c8 <vfprintf+0x6ec>
    2dd8:	10 64       	ori	r17, 0x40	; 64
    2dda:	06 c0       	rjmp	.+12     	; 0x2de8 <vfprintf+0x10c>
    2ddc:	9c 36       	cpi	r25, 0x6C	; 108
    2dde:	11 f4       	brne	.+4      	; 0x2de4 <vfprintf+0x108>
    2de0:	10 68       	ori	r17, 0x80	; 128
    2de2:	02 c0       	rjmp	.+4      	; 0x2de8 <vfprintf+0x10c>
    2de4:	98 36       	cpi	r25, 0x68	; 104
    2de6:	59 f4       	brne	.+22     	; 0x2dfe <vfprintf+0x122>
    2de8:	ee 85       	ldd	r30, Y+14	; 0x0e
    2dea:	ff 85       	ldd	r31, Y+15	; 0x0f
    2dec:	23 fd       	sbrc	r18, 3
    2dee:	95 91       	lpm	r25, Z+
    2df0:	23 ff       	sbrs	r18, 3
    2df2:	91 91       	ld	r25, Z+
    2df4:	ff 87       	std	Y+15, r31	; 0x0f
    2df6:	ee 87       	std	Y+14, r30	; 0x0e
    2df8:	99 23       	and	r25, r25
    2dfa:	09 f0       	breq	.+2      	; 0x2dfe <vfprintf+0x122>
    2dfc:	bc cf       	rjmp	.-136    	; 0x2d76 <vfprintf+0x9a>
    2dfe:	89 2f       	mov	r24, r25
    2e00:	85 54       	subi	r24, 0x45	; 69
    2e02:	83 30       	cpi	r24, 0x03	; 3
    2e04:	20 f4       	brcc	.+8      	; 0x2e0e <vfprintf+0x132>
    2e06:	81 2f       	mov	r24, r17
    2e08:	80 61       	ori	r24, 0x10	; 16
    2e0a:	90 5e       	subi	r25, 0xE0	; 224
    2e0c:	07 c0       	rjmp	.+14     	; 0x2e1c <vfprintf+0x140>
    2e0e:	89 2f       	mov	r24, r25
    2e10:	85 56       	subi	r24, 0x65	; 101
    2e12:	83 30       	cpi	r24, 0x03	; 3
    2e14:	08 f0       	brcs	.+2      	; 0x2e18 <vfprintf+0x13c>
    2e16:	8f c1       	rjmp	.+798    	; 0x3136 <vfprintf+0x45a>
    2e18:	81 2f       	mov	r24, r17
    2e1a:	8f 7e       	andi	r24, 0xEF	; 239
    2e1c:	86 fd       	sbrc	r24, 6
    2e1e:	02 c0       	rjmp	.+4      	; 0x2e24 <vfprintf+0x148>
    2e20:	76 e0       	ldi	r23, 0x06	; 6
    2e22:	97 2e       	mov	r9, r23
    2e24:	6f e3       	ldi	r22, 0x3F	; 63
    2e26:	f6 2e       	mov	r15, r22
    2e28:	f8 22       	and	r15, r24
    2e2a:	95 36       	cpi	r25, 0x65	; 101
    2e2c:	19 f4       	brne	.+6      	; 0x2e34 <vfprintf+0x158>
    2e2e:	f0 e4       	ldi	r31, 0x40	; 64
    2e30:	ff 2a       	or	r15, r31
    2e32:	07 c0       	rjmp	.+14     	; 0x2e42 <vfprintf+0x166>
    2e34:	96 36       	cpi	r25, 0x66	; 102
    2e36:	19 f4       	brne	.+6      	; 0x2e3e <vfprintf+0x162>
    2e38:	20 e8       	ldi	r18, 0x80	; 128
    2e3a:	f2 2a       	or	r15, r18
    2e3c:	02 c0       	rjmp	.+4      	; 0x2e42 <vfprintf+0x166>
    2e3e:	91 10       	cpse	r9, r1
    2e40:	9a 94       	dec	r9
    2e42:	f7 fe       	sbrs	r15, 7
    2e44:	0a c0       	rjmp	.+20     	; 0x2e5a <vfprintf+0x17e>
    2e46:	3b e3       	ldi	r19, 0x3B	; 59
    2e48:	39 15       	cp	r19, r9
    2e4a:	18 f4       	brcc	.+6      	; 0x2e52 <vfprintf+0x176>
    2e4c:	5c e3       	ldi	r21, 0x3C	; 60
    2e4e:	b5 2e       	mov	r11, r21
    2e50:	02 c0       	rjmp	.+4      	; 0x2e56 <vfprintf+0x17a>
    2e52:	b9 2c       	mov	r11, r9
    2e54:	b3 94       	inc	r11
    2e56:	27 e0       	ldi	r18, 0x07	; 7
    2e58:	09 c0       	rjmp	.+18     	; 0x2e6c <vfprintf+0x190>
    2e5a:	47 e0       	ldi	r20, 0x07	; 7
    2e5c:	49 15       	cp	r20, r9
    2e5e:	20 f4       	brcc	.+8      	; 0x2e68 <vfprintf+0x18c>
    2e60:	bb 24       	eor	r11, r11
    2e62:	47 e0       	ldi	r20, 0x07	; 7
    2e64:	94 2e       	mov	r9, r20
    2e66:	f7 cf       	rjmp	.-18     	; 0x2e56 <vfprintf+0x17a>
    2e68:	29 2d       	mov	r18, r9
    2e6a:	bb 24       	eor	r11, r11
    2e6c:	c6 01       	movw	r24, r12
    2e6e:	04 96       	adiw	r24, 0x04	; 4
    2e70:	9d 87       	std	Y+13, r25	; 0x0d
    2e72:	8c 87       	std	Y+12, r24	; 0x0c
    2e74:	f6 01       	movw	r30, r12
    2e76:	60 81       	ld	r22, Z
    2e78:	71 81       	ldd	r23, Z+1	; 0x01
    2e7a:	82 81       	ldd	r24, Z+2	; 0x02
    2e7c:	93 81       	ldd	r25, Z+3	; 0x03
    2e7e:	ae 01       	movw	r20, r28
    2e80:	4f 5f       	subi	r20, 0xFF	; 255
    2e82:	5f 4f       	sbci	r21, 0xFF	; 255
    2e84:	0b 2d       	mov	r16, r11
    2e86:	bd d2       	rcall	.+1402   	; 0x3402 <__ftoa_engine>
    2e88:	6c 01       	movw	r12, r24
    2e8a:	09 81       	ldd	r16, Y+1	; 0x01
    2e8c:	20 2e       	mov	r2, r16
    2e8e:	33 24       	eor	r3, r3
    2e90:	00 ff       	sbrs	r16, 0
    2e92:	04 c0       	rjmp	.+8      	; 0x2e9c <vfprintf+0x1c0>
    2e94:	03 fd       	sbrc	r16, 3
    2e96:	02 c0       	rjmp	.+4      	; 0x2e9c <vfprintf+0x1c0>
    2e98:	1d e2       	ldi	r17, 0x2D	; 45
    2e9a:	09 c0       	rjmp	.+18     	; 0x2eae <vfprintf+0x1d2>
    2e9c:	f1 fe       	sbrs	r15, 1
    2e9e:	02 c0       	rjmp	.+4      	; 0x2ea4 <vfprintf+0x1c8>
    2ea0:	1b e2       	ldi	r17, 0x2B	; 43
    2ea2:	05 c0       	rjmp	.+10     	; 0x2eae <vfprintf+0x1d2>
    2ea4:	f2 fc       	sbrc	r15, 2
    2ea6:	02 c0       	rjmp	.+4      	; 0x2eac <vfprintf+0x1d0>
    2ea8:	10 e0       	ldi	r17, 0x00	; 0
    2eaa:	01 c0       	rjmp	.+2      	; 0x2eae <vfprintf+0x1d2>
    2eac:	10 e2       	ldi	r17, 0x20	; 32
    2eae:	c1 01       	movw	r24, r2
    2eb0:	8c 70       	andi	r24, 0x0C	; 12
    2eb2:	90 70       	andi	r25, 0x00	; 0
    2eb4:	89 2b       	or	r24, r25
    2eb6:	a1 f1       	breq	.+104    	; 0x2f20 <vfprintf+0x244>
    2eb8:	11 23       	and	r17, r17
    2eba:	11 f4       	brne	.+4      	; 0x2ec0 <vfprintf+0x1e4>
    2ebc:	83 e0       	ldi	r24, 0x03	; 3
    2ebe:	01 c0       	rjmp	.+2      	; 0x2ec2 <vfprintf+0x1e6>
    2ec0:	84 e0       	ldi	r24, 0x04	; 4
    2ec2:	88 15       	cp	r24, r8
    2ec4:	10 f0       	brcs	.+4      	; 0x2eca <vfprintf+0x1ee>
    2ec6:	88 24       	eor	r8, r8
    2ec8:	09 c0       	rjmp	.+18     	; 0x2edc <vfprintf+0x200>
    2eca:	88 1a       	sub	r8, r24
    2ecc:	f3 fc       	sbrc	r15, 3
    2ece:	06 c0       	rjmp	.+12     	; 0x2edc <vfprintf+0x200>
    2ed0:	80 e2       	ldi	r24, 0x20	; 32
    2ed2:	90 e0       	ldi	r25, 0x00	; 0
    2ed4:	b3 01       	movw	r22, r6
    2ed6:	10 d4       	rcall	.+2080   	; 0x36f8 <fputc>
    2ed8:	8a 94       	dec	r8
    2eda:	d1 f7       	brne	.-12     	; 0x2ed0 <vfprintf+0x1f4>
    2edc:	11 23       	and	r17, r17
    2ede:	21 f0       	breq	.+8      	; 0x2ee8 <vfprintf+0x20c>
    2ee0:	81 2f       	mov	r24, r17
    2ee2:	90 e0       	ldi	r25, 0x00	; 0
    2ee4:	b3 01       	movw	r22, r6
    2ee6:	08 d4       	rcall	.+2064   	; 0x36f8 <fputc>
    2ee8:	23 fe       	sbrs	r2, 3
    2eea:	03 c0       	rjmp	.+6      	; 0x2ef2 <vfprintf+0x216>
    2eec:	0c ec       	ldi	r16, 0xCC	; 204
    2eee:	10 e0       	ldi	r17, 0x00	; 0
    2ef0:	0d c0       	rjmp	.+26     	; 0x2f0c <vfprintf+0x230>
    2ef2:	00 ed       	ldi	r16, 0xD0	; 208
    2ef4:	10 e0       	ldi	r17, 0x00	; 0
    2ef6:	0a c0       	rjmp	.+20     	; 0x2f0c <vfprintf+0x230>
    2ef8:	e1 14       	cp	r14, r1
    2efa:	f1 04       	cpc	r15, r1
    2efc:	09 f0       	breq	.+2      	; 0x2f00 <vfprintf+0x224>
    2efe:	80 52       	subi	r24, 0x20	; 32
    2f00:	90 e0       	ldi	r25, 0x00	; 0
    2f02:	b3 01       	movw	r22, r6
    2f04:	f9 d3       	rcall	.+2034   	; 0x36f8 <fputc>
    2f06:	0f 5f       	subi	r16, 0xFF	; 255
    2f08:	1f 4f       	sbci	r17, 0xFF	; 255
    2f0a:	05 c0       	rjmp	.+10     	; 0x2f16 <vfprintf+0x23a>
    2f0c:	ef 2c       	mov	r14, r15
    2f0e:	ff 24       	eor	r15, r15
    2f10:	f0 e1       	ldi	r31, 0x10	; 16
    2f12:	ef 22       	and	r14, r31
    2f14:	ff 24       	eor	r15, r15
    2f16:	f8 01       	movw	r30, r16
    2f18:	84 91       	lpm	r24, Z+
    2f1a:	88 23       	and	r24, r24
    2f1c:	69 f7       	brne	.-38     	; 0x2ef8 <vfprintf+0x21c>
    2f1e:	08 c1       	rjmp	.+528    	; 0x3130 <vfprintf+0x454>
    2f20:	f7 fe       	sbrs	r15, 7
    2f22:	12 c0       	rjmp	.+36     	; 0x2f48 <vfprintf+0x26c>
    2f24:	bc 0c       	add	r11, r12
    2f26:	24 fe       	sbrs	r2, 4
    2f28:	04 c0       	rjmp	.+8      	; 0x2f32 <vfprintf+0x256>
    2f2a:	8a 81       	ldd	r24, Y+2	; 0x02
    2f2c:	81 33       	cpi	r24, 0x31	; 49
    2f2e:	09 f4       	brne	.+2      	; 0x2f32 <vfprintf+0x256>
    2f30:	ba 94       	dec	r11
    2f32:	1b 14       	cp	r1, r11
    2f34:	1c f0       	brlt	.+6      	; 0x2f3c <vfprintf+0x260>
    2f36:	bb 24       	eor	r11, r11
    2f38:	b3 94       	inc	r11
    2f3a:	2d c0       	rjmp	.+90     	; 0x2f96 <vfprintf+0x2ba>
    2f3c:	f8 e0       	ldi	r31, 0x08	; 8
    2f3e:	fb 15       	cp	r31, r11
    2f40:	50 f5       	brcc	.+84     	; 0x2f96 <vfprintf+0x2ba>
    2f42:	38 e0       	ldi	r19, 0x08	; 8
    2f44:	b3 2e       	mov	r11, r19
    2f46:	27 c0       	rjmp	.+78     	; 0x2f96 <vfprintf+0x2ba>
    2f48:	f6 fc       	sbrc	r15, 6
    2f4a:	25 c0       	rjmp	.+74     	; 0x2f96 <vfprintf+0x2ba>
    2f4c:	89 2d       	mov	r24, r9
    2f4e:	90 e0       	ldi	r25, 0x00	; 0
    2f50:	8c 15       	cp	r24, r12
    2f52:	9d 05       	cpc	r25, r13
    2f54:	4c f0       	brlt	.+18     	; 0x2f68 <vfprintf+0x28c>
    2f56:	2c ef       	ldi	r18, 0xFC	; 252
    2f58:	c2 16       	cp	r12, r18
    2f5a:	2f ef       	ldi	r18, 0xFF	; 255
    2f5c:	d2 06       	cpc	r13, r18
    2f5e:	24 f0       	brlt	.+8      	; 0x2f68 <vfprintf+0x28c>
    2f60:	30 e8       	ldi	r19, 0x80	; 128
    2f62:	f3 2a       	or	r15, r19
    2f64:	01 c0       	rjmp	.+2      	; 0x2f68 <vfprintf+0x28c>
    2f66:	9a 94       	dec	r9
    2f68:	99 20       	and	r9, r9
    2f6a:	49 f0       	breq	.+18     	; 0x2f7e <vfprintf+0x2a2>
    2f6c:	e2 e0       	ldi	r30, 0x02	; 2
    2f6e:	f0 e0       	ldi	r31, 0x00	; 0
    2f70:	ec 0f       	add	r30, r28
    2f72:	fd 1f       	adc	r31, r29
    2f74:	e9 0d       	add	r30, r9
    2f76:	f1 1d       	adc	r31, r1
    2f78:	80 81       	ld	r24, Z
    2f7a:	80 33       	cpi	r24, 0x30	; 48
    2f7c:	a1 f3       	breq	.-24     	; 0x2f66 <vfprintf+0x28a>
    2f7e:	f7 fe       	sbrs	r15, 7
    2f80:	0a c0       	rjmp	.+20     	; 0x2f96 <vfprintf+0x2ba>
    2f82:	b9 2c       	mov	r11, r9
    2f84:	b3 94       	inc	r11
    2f86:	89 2d       	mov	r24, r9
    2f88:	90 e0       	ldi	r25, 0x00	; 0
    2f8a:	c8 16       	cp	r12, r24
    2f8c:	d9 06       	cpc	r13, r25
    2f8e:	14 f0       	brlt	.+4      	; 0x2f94 <vfprintf+0x2b8>
    2f90:	99 24       	eor	r9, r9
    2f92:	01 c0       	rjmp	.+2      	; 0x2f96 <vfprintf+0x2ba>
    2f94:	9c 18       	sub	r9, r12
    2f96:	f7 fc       	sbrc	r15, 7
    2f98:	03 c0       	rjmp	.+6      	; 0x2fa0 <vfprintf+0x2c4>
    2f9a:	25 e0       	ldi	r18, 0x05	; 5
    2f9c:	30 e0       	ldi	r19, 0x00	; 0
    2f9e:	09 c0       	rjmp	.+18     	; 0x2fb2 <vfprintf+0x2d6>
    2fa0:	1c 14       	cp	r1, r12
    2fa2:	1d 04       	cpc	r1, r13
    2fa4:	1c f0       	brlt	.+6      	; 0x2fac <vfprintf+0x2d0>
    2fa6:	21 e0       	ldi	r18, 0x01	; 1
    2fa8:	30 e0       	ldi	r19, 0x00	; 0
    2faa:	03 c0       	rjmp	.+6      	; 0x2fb2 <vfprintf+0x2d6>
    2fac:	96 01       	movw	r18, r12
    2fae:	2f 5f       	subi	r18, 0xFF	; 255
    2fb0:	3f 4f       	sbci	r19, 0xFF	; 255
    2fb2:	11 23       	and	r17, r17
    2fb4:	11 f0       	breq	.+4      	; 0x2fba <vfprintf+0x2de>
    2fb6:	2f 5f       	subi	r18, 0xFF	; 255
    2fb8:	3f 4f       	sbci	r19, 0xFF	; 255
    2fba:	99 20       	and	r9, r9
    2fbc:	29 f0       	breq	.+10     	; 0x2fc8 <vfprintf+0x2ec>
    2fbe:	89 2d       	mov	r24, r9
    2fc0:	90 e0       	ldi	r25, 0x00	; 0
    2fc2:	01 96       	adiw	r24, 0x01	; 1
    2fc4:	28 0f       	add	r18, r24
    2fc6:	39 1f       	adc	r19, r25
    2fc8:	88 2d       	mov	r24, r8
    2fca:	90 e0       	ldi	r25, 0x00	; 0
    2fcc:	28 17       	cp	r18, r24
    2fce:	39 07       	cpc	r19, r25
    2fd0:	14 f0       	brlt	.+4      	; 0x2fd6 <vfprintf+0x2fa>
    2fd2:	88 24       	eor	r8, r8
    2fd4:	01 c0       	rjmp	.+2      	; 0x2fd8 <vfprintf+0x2fc>
    2fd6:	82 1a       	sub	r8, r18
    2fd8:	4f 2c       	mov	r4, r15
    2fda:	55 24       	eor	r5, r5
    2fdc:	c2 01       	movw	r24, r4
    2fde:	89 70       	andi	r24, 0x09	; 9
    2fe0:	90 70       	andi	r25, 0x00	; 0
    2fe2:	89 2b       	or	r24, r25
    2fe4:	31 f0       	breq	.+12     	; 0x2ff2 <vfprintf+0x316>
    2fe6:	07 c0       	rjmp	.+14     	; 0x2ff6 <vfprintf+0x31a>
    2fe8:	80 e2       	ldi	r24, 0x20	; 32
    2fea:	90 e0       	ldi	r25, 0x00	; 0
    2fec:	b3 01       	movw	r22, r6
    2fee:	84 d3       	rcall	.+1800   	; 0x36f8 <fputc>
    2ff0:	8a 94       	dec	r8
    2ff2:	88 20       	and	r8, r8
    2ff4:	c9 f7       	brne	.-14     	; 0x2fe8 <vfprintf+0x30c>
    2ff6:	11 23       	and	r17, r17
    2ff8:	21 f0       	breq	.+8      	; 0x3002 <vfprintf+0x326>
    2ffa:	81 2f       	mov	r24, r17
    2ffc:	90 e0       	ldi	r25, 0x00	; 0
    2ffe:	b3 01       	movw	r22, r6
    3000:	7b d3       	rcall	.+1782   	; 0x36f8 <fputc>
    3002:	43 fe       	sbrs	r4, 3
    3004:	06 c0       	rjmp	.+12     	; 0x3012 <vfprintf+0x336>
    3006:	07 c0       	rjmp	.+14     	; 0x3016 <vfprintf+0x33a>
    3008:	80 e3       	ldi	r24, 0x30	; 48
    300a:	90 e0       	ldi	r25, 0x00	; 0
    300c:	b3 01       	movw	r22, r6
    300e:	74 d3       	rcall	.+1768   	; 0x36f8 <fputc>
    3010:	8a 94       	dec	r8
    3012:	88 20       	and	r8, r8
    3014:	c9 f7       	brne	.-14     	; 0x3008 <vfprintf+0x32c>
    3016:	f7 fe       	sbrs	r15, 7
    3018:	44 c0       	rjmp	.+136    	; 0x30a2 <vfprintf+0x3c6>
    301a:	86 01       	movw	r16, r12
    301c:	d7 fe       	sbrs	r13, 7
    301e:	02 c0       	rjmp	.+4      	; 0x3024 <vfprintf+0x348>
    3020:	00 e0       	ldi	r16, 0x00	; 0
    3022:	10 e0       	ldi	r17, 0x00	; 0
    3024:	76 01       	movw	r14, r12
    3026:	08 94       	sec
    3028:	e1 1c       	adc	r14, r1
    302a:	f1 1c       	adc	r15, r1
    302c:	e0 1a       	sub	r14, r16
    302e:	f1 0a       	sbc	r15, r17
    3030:	41 e0       	ldi	r20, 0x01	; 1
    3032:	50 e0       	ldi	r21, 0x00	; 0
    3034:	4c 0f       	add	r20, r28
    3036:	5d 1f       	adc	r21, r29
    3038:	e4 0e       	add	r14, r20
    303a:	f5 1e       	adc	r15, r21
    303c:	26 01       	movw	r4, r12
    303e:	4b 18       	sub	r4, r11
    3040:	51 08       	sbc	r5, r1
    3042:	89 2d       	mov	r24, r9
    3044:	90 e0       	ldi	r25, 0x00	; 0
    3046:	aa 24       	eor	r10, r10
    3048:	bb 24       	eor	r11, r11
    304a:	a8 1a       	sub	r10, r24
    304c:	b9 0a       	sbc	r11, r25
    304e:	5f ef       	ldi	r21, 0xFF	; 255
    3050:	0f 3f       	cpi	r16, 0xFF	; 255
    3052:	15 07       	cpc	r17, r21
    3054:	21 f4       	brne	.+8      	; 0x305e <vfprintf+0x382>
    3056:	8e e2       	ldi	r24, 0x2E	; 46
    3058:	90 e0       	ldi	r25, 0x00	; 0
    305a:	b3 01       	movw	r22, r6
    305c:	4d d3       	rcall	.+1690   	; 0x36f8 <fputc>
    305e:	c0 16       	cp	r12, r16
    3060:	d1 06       	cpc	r13, r17
    3062:	34 f0       	brlt	.+12     	; 0x3070 <vfprintf+0x394>
    3064:	40 16       	cp	r4, r16
    3066:	51 06       	cpc	r5, r17
    3068:	1c f4       	brge	.+6      	; 0x3070 <vfprintf+0x394>
    306a:	f7 01       	movw	r30, r14
    306c:	80 81       	ld	r24, Z
    306e:	01 c0       	rjmp	.+2      	; 0x3072 <vfprintf+0x396>
    3070:	80 e3       	ldi	r24, 0x30	; 48
    3072:	01 50       	subi	r16, 0x01	; 1
    3074:	10 40       	sbci	r17, 0x00	; 0
    3076:	08 94       	sec
    3078:	e1 1c       	adc	r14, r1
    307a:	f1 1c       	adc	r15, r1
    307c:	0a 15       	cp	r16, r10
    307e:	1b 05       	cpc	r17, r11
    3080:	24 f0       	brlt	.+8      	; 0x308a <vfprintf+0x3ae>
    3082:	90 e0       	ldi	r25, 0x00	; 0
    3084:	b3 01       	movw	r22, r6
    3086:	38 d3       	rcall	.+1648   	; 0x36f8 <fputc>
    3088:	e2 cf       	rjmp	.-60     	; 0x304e <vfprintf+0x372>
    308a:	0c 15       	cp	r16, r12
    308c:	1d 05       	cpc	r17, r13
    308e:	39 f4       	brne	.+14     	; 0x309e <vfprintf+0x3c2>
    3090:	9a 81       	ldd	r25, Y+2	; 0x02
    3092:	96 33       	cpi	r25, 0x36	; 54
    3094:	18 f4       	brcc	.+6      	; 0x309c <vfprintf+0x3c0>
    3096:	95 33       	cpi	r25, 0x35	; 53
    3098:	11 f4       	brne	.+4      	; 0x309e <vfprintf+0x3c2>
    309a:	24 fe       	sbrs	r2, 4
    309c:	81 e3       	ldi	r24, 0x31	; 49
    309e:	90 e0       	ldi	r25, 0x00	; 0
    30a0:	45 c0       	rjmp	.+138    	; 0x312c <vfprintf+0x450>
    30a2:	8a 81       	ldd	r24, Y+2	; 0x02
    30a4:	81 33       	cpi	r24, 0x31	; 49
    30a6:	09 f0       	breq	.+2      	; 0x30aa <vfprintf+0x3ce>
    30a8:	0f 7e       	andi	r16, 0xEF	; 239
    30aa:	90 e0       	ldi	r25, 0x00	; 0
    30ac:	b3 01       	movw	r22, r6
    30ae:	24 d3       	rcall	.+1608   	; 0x36f8 <fputc>
    30b0:	99 20       	and	r9, r9
    30b2:	91 f0       	breq	.+36     	; 0x30d8 <vfprintf+0x3fc>
    30b4:	8e e2       	ldi	r24, 0x2E	; 46
    30b6:	90 e0       	ldi	r25, 0x00	; 0
    30b8:	b3 01       	movw	r22, r6
    30ba:	1e d3       	rcall	.+1596   	; 0x36f8 <fputc>
    30bc:	12 e0       	ldi	r17, 0x02	; 2
    30be:	e1 e0       	ldi	r30, 0x01	; 1
    30c0:	f0 e0       	ldi	r31, 0x00	; 0
    30c2:	ec 0f       	add	r30, r28
    30c4:	fd 1f       	adc	r31, r29
    30c6:	e1 0f       	add	r30, r17
    30c8:	f1 1d       	adc	r31, r1
    30ca:	1f 5f       	subi	r17, 0xFF	; 255
    30cc:	80 81       	ld	r24, Z
    30ce:	90 e0       	ldi	r25, 0x00	; 0
    30d0:	b3 01       	movw	r22, r6
    30d2:	12 d3       	rcall	.+1572   	; 0x36f8 <fputc>
    30d4:	9a 94       	dec	r9
    30d6:	99 f7       	brne	.-26     	; 0x30be <vfprintf+0x3e2>
    30d8:	44 fc       	sbrc	r4, 4
    30da:	03 c0       	rjmp	.+6      	; 0x30e2 <vfprintf+0x406>
    30dc:	85 e6       	ldi	r24, 0x65	; 101
    30de:	90 e0       	ldi	r25, 0x00	; 0
    30e0:	02 c0       	rjmp	.+4      	; 0x30e6 <vfprintf+0x40a>
    30e2:	85 e4       	ldi	r24, 0x45	; 69
    30e4:	90 e0       	ldi	r25, 0x00	; 0
    30e6:	b3 01       	movw	r22, r6
    30e8:	07 d3       	rcall	.+1550   	; 0x36f8 <fputc>
    30ea:	d7 fc       	sbrc	r13, 7
    30ec:	05 c0       	rjmp	.+10     	; 0x30f8 <vfprintf+0x41c>
    30ee:	c1 14       	cp	r12, r1
    30f0:	d1 04       	cpc	r13, r1
    30f2:	41 f4       	brne	.+16     	; 0x3104 <vfprintf+0x428>
    30f4:	04 ff       	sbrs	r16, 4
    30f6:	06 c0       	rjmp	.+12     	; 0x3104 <vfprintf+0x428>
    30f8:	d0 94       	com	r13
    30fa:	c1 94       	neg	r12
    30fc:	d1 08       	sbc	r13, r1
    30fe:	d3 94       	inc	r13
    3100:	8d e2       	ldi	r24, 0x2D	; 45
    3102:	01 c0       	rjmp	.+2      	; 0x3106 <vfprintf+0x42a>
    3104:	8b e2       	ldi	r24, 0x2B	; 43
    3106:	90 e0       	ldi	r25, 0x00	; 0
    3108:	b3 01       	movw	r22, r6
    310a:	f6 d2       	rcall	.+1516   	; 0x36f8 <fputc>
    310c:	80 e3       	ldi	r24, 0x30	; 48
    310e:	05 c0       	rjmp	.+10     	; 0x311a <vfprintf+0x43e>
    3110:	8f 5f       	subi	r24, 0xFF	; 255
    3112:	26 ef       	ldi	r18, 0xF6	; 246
    3114:	3f ef       	ldi	r19, 0xFF	; 255
    3116:	c2 0e       	add	r12, r18
    3118:	d3 1e       	adc	r13, r19
    311a:	3a e0       	ldi	r19, 0x0A	; 10
    311c:	c3 16       	cp	r12, r19
    311e:	d1 04       	cpc	r13, r1
    3120:	bc f7       	brge	.-18     	; 0x3110 <vfprintf+0x434>
    3122:	90 e0       	ldi	r25, 0x00	; 0
    3124:	b3 01       	movw	r22, r6
    3126:	e8 d2       	rcall	.+1488   	; 0x36f8 <fputc>
    3128:	c6 01       	movw	r24, r12
    312a:	c0 96       	adiw	r24, 0x30	; 48
    312c:	b3 01       	movw	r22, r6
    312e:	e4 d2       	rcall	.+1480   	; 0x36f8 <fputc>
    3130:	cc 84       	ldd	r12, Y+12	; 0x0c
    3132:	dd 84       	ldd	r13, Y+13	; 0x0d
    3134:	46 c1       	rjmp	.+652    	; 0x33c2 <vfprintf+0x6e6>
    3136:	93 36       	cpi	r25, 0x63	; 99
    3138:	31 f0       	breq	.+12     	; 0x3146 <vfprintf+0x46a>
    313a:	93 37       	cpi	r25, 0x73	; 115
    313c:	99 f0       	breq	.+38     	; 0x3164 <vfprintf+0x488>
    313e:	93 35       	cpi	r25, 0x53	; 83
    3140:	09 f0       	breq	.+2      	; 0x3144 <vfprintf+0x468>
    3142:	55 c0       	rjmp	.+170    	; 0x31ee <vfprintf+0x512>
    3144:	22 c0       	rjmp	.+68     	; 0x318a <vfprintf+0x4ae>
    3146:	f6 01       	movw	r30, r12
    3148:	80 81       	ld	r24, Z
    314a:	89 83       	std	Y+1, r24	; 0x01
    314c:	5e 01       	movw	r10, r28
    314e:	08 94       	sec
    3150:	a1 1c       	adc	r10, r1
    3152:	b1 1c       	adc	r11, r1
    3154:	22 e0       	ldi	r18, 0x02	; 2
    3156:	30 e0       	ldi	r19, 0x00	; 0
    3158:	c2 0e       	add	r12, r18
    315a:	d3 1e       	adc	r13, r19
    315c:	21 e0       	ldi	r18, 0x01	; 1
    315e:	e2 2e       	mov	r14, r18
    3160:	f1 2c       	mov	r15, r1
    3162:	11 c0       	rjmp	.+34     	; 0x3186 <vfprintf+0x4aa>
    3164:	f6 01       	movw	r30, r12
    3166:	a0 80       	ld	r10, Z
    3168:	b1 80       	ldd	r11, Z+1	; 0x01
    316a:	16 fd       	sbrc	r17, 6
    316c:	03 c0       	rjmp	.+6      	; 0x3174 <vfprintf+0x498>
    316e:	6f ef       	ldi	r22, 0xFF	; 255
    3170:	7f ef       	ldi	r23, 0xFF	; 255
    3172:	02 c0       	rjmp	.+4      	; 0x3178 <vfprintf+0x49c>
    3174:	69 2d       	mov	r22, r9
    3176:	70 e0       	ldi	r23, 0x00	; 0
    3178:	22 e0       	ldi	r18, 0x02	; 2
    317a:	30 e0       	ldi	r19, 0x00	; 0
    317c:	c2 0e       	add	r12, r18
    317e:	d3 1e       	adc	r13, r19
    3180:	c5 01       	movw	r24, r10
    3182:	22 d2       	rcall	.+1092   	; 0x35c8 <strnlen>
    3184:	7c 01       	movw	r14, r24
    3186:	1f 77       	andi	r17, 0x7F	; 127
    3188:	12 c0       	rjmp	.+36     	; 0x31ae <vfprintf+0x4d2>
    318a:	f6 01       	movw	r30, r12
    318c:	a0 80       	ld	r10, Z
    318e:	b1 80       	ldd	r11, Z+1	; 0x01
    3190:	16 fd       	sbrc	r17, 6
    3192:	03 c0       	rjmp	.+6      	; 0x319a <vfprintf+0x4be>
    3194:	6f ef       	ldi	r22, 0xFF	; 255
    3196:	7f ef       	ldi	r23, 0xFF	; 255
    3198:	02 c0       	rjmp	.+4      	; 0x319e <vfprintf+0x4c2>
    319a:	69 2d       	mov	r22, r9
    319c:	70 e0       	ldi	r23, 0x00	; 0
    319e:	22 e0       	ldi	r18, 0x02	; 2
    31a0:	30 e0       	ldi	r19, 0x00	; 0
    31a2:	c2 0e       	add	r12, r18
    31a4:	d3 1e       	adc	r13, r19
    31a6:	c5 01       	movw	r24, r10
    31a8:	04 d2       	rcall	.+1032   	; 0x35b2 <strnlen_P>
    31aa:	7c 01       	movw	r14, r24
    31ac:	10 68       	ori	r17, 0x80	; 128
    31ae:	13 ff       	sbrs	r17, 3
    31b0:	06 c0       	rjmp	.+12     	; 0x31be <vfprintf+0x4e2>
    31b2:	19 c0       	rjmp	.+50     	; 0x31e6 <vfprintf+0x50a>
    31b4:	80 e2       	ldi	r24, 0x20	; 32
    31b6:	90 e0       	ldi	r25, 0x00	; 0
    31b8:	b3 01       	movw	r22, r6
    31ba:	9e d2       	rcall	.+1340   	; 0x36f8 <fputc>
    31bc:	8a 94       	dec	r8
    31be:	88 2d       	mov	r24, r8
    31c0:	90 e0       	ldi	r25, 0x00	; 0
    31c2:	e8 16       	cp	r14, r24
    31c4:	f9 06       	cpc	r15, r25
    31c6:	b0 f3       	brcs	.-20     	; 0x31b4 <vfprintf+0x4d8>
    31c8:	0e c0       	rjmp	.+28     	; 0x31e6 <vfprintf+0x50a>
    31ca:	f5 01       	movw	r30, r10
    31cc:	17 fd       	sbrc	r17, 7
    31ce:	85 91       	lpm	r24, Z+
    31d0:	17 ff       	sbrs	r17, 7
    31d2:	81 91       	ld	r24, Z+
    31d4:	5f 01       	movw	r10, r30
    31d6:	90 e0       	ldi	r25, 0x00	; 0
    31d8:	b3 01       	movw	r22, r6
    31da:	8e d2       	rcall	.+1308   	; 0x36f8 <fputc>
    31dc:	81 10       	cpse	r8, r1
    31de:	8a 94       	dec	r8
    31e0:	08 94       	sec
    31e2:	e1 08       	sbc	r14, r1
    31e4:	f1 08       	sbc	r15, r1
    31e6:	e1 14       	cp	r14, r1
    31e8:	f1 04       	cpc	r15, r1
    31ea:	79 f7       	brne	.-34     	; 0x31ca <vfprintf+0x4ee>
    31ec:	ea c0       	rjmp	.+468    	; 0x33c2 <vfprintf+0x6e6>
    31ee:	94 36       	cpi	r25, 0x64	; 100
    31f0:	11 f0       	breq	.+4      	; 0x31f6 <vfprintf+0x51a>
    31f2:	99 36       	cpi	r25, 0x69	; 105
    31f4:	81 f5       	brne	.+96     	; 0x3256 <vfprintf+0x57a>
    31f6:	17 ff       	sbrs	r17, 7
    31f8:	08 c0       	rjmp	.+16     	; 0x320a <vfprintf+0x52e>
    31fa:	f6 01       	movw	r30, r12
    31fc:	20 81       	ld	r18, Z
    31fe:	31 81       	ldd	r19, Z+1	; 0x01
    3200:	42 81       	ldd	r20, Z+2	; 0x02
    3202:	53 81       	ldd	r21, Z+3	; 0x03
    3204:	84 e0       	ldi	r24, 0x04	; 4
    3206:	90 e0       	ldi	r25, 0x00	; 0
    3208:	0a c0       	rjmp	.+20     	; 0x321e <vfprintf+0x542>
    320a:	f6 01       	movw	r30, r12
    320c:	80 81       	ld	r24, Z
    320e:	91 81       	ldd	r25, Z+1	; 0x01
    3210:	9c 01       	movw	r18, r24
    3212:	44 27       	eor	r20, r20
    3214:	37 fd       	sbrc	r19, 7
    3216:	40 95       	com	r20
    3218:	54 2f       	mov	r21, r20
    321a:	82 e0       	ldi	r24, 0x02	; 2
    321c:	90 e0       	ldi	r25, 0x00	; 0
    321e:	c8 0e       	add	r12, r24
    3220:	d9 1e       	adc	r13, r25
    3222:	9f e6       	ldi	r25, 0x6F	; 111
    3224:	f9 2e       	mov	r15, r25
    3226:	f1 22       	and	r15, r17
    3228:	57 ff       	sbrs	r21, 7
    322a:	09 c0       	rjmp	.+18     	; 0x323e <vfprintf+0x562>
    322c:	50 95       	com	r21
    322e:	40 95       	com	r20
    3230:	30 95       	com	r19
    3232:	21 95       	neg	r18
    3234:	3f 4f       	sbci	r19, 0xFF	; 255
    3236:	4f 4f       	sbci	r20, 0xFF	; 255
    3238:	5f 4f       	sbci	r21, 0xFF	; 255
    323a:	90 e8       	ldi	r25, 0x80	; 128
    323c:	f9 2a       	or	r15, r25
    323e:	ca 01       	movw	r24, r20
    3240:	b9 01       	movw	r22, r18
    3242:	ae 01       	movw	r20, r28
    3244:	4f 5f       	subi	r20, 0xFF	; 255
    3246:	5f 4f       	sbci	r21, 0xFF	; 255
    3248:	2a e0       	ldi	r18, 0x0A	; 10
    324a:	30 e0       	ldi	r19, 0x00	; 0
    324c:	0a d3       	rcall	.+1556   	; 0x3862 <__ultoa_invert>
    324e:	e8 2e       	mov	r14, r24
    3250:	e8 89       	ldd	r30, Y+16	; 0x10
    3252:	ee 1a       	sub	r14, r30
    3254:	40 c0       	rjmp	.+128    	; 0x32d6 <vfprintf+0x5fa>
    3256:	95 37       	cpi	r25, 0x75	; 117
    3258:	21 f4       	brne	.+8      	; 0x3262 <vfprintf+0x586>
    325a:	1f 7e       	andi	r17, 0xEF	; 239
    325c:	2a e0       	ldi	r18, 0x0A	; 10
    325e:	30 e0       	ldi	r19, 0x00	; 0
    3260:	1c c0       	rjmp	.+56     	; 0x329a <vfprintf+0x5be>
    3262:	19 7f       	andi	r17, 0xF9	; 249
    3264:	9f 36       	cpi	r25, 0x6F	; 111
    3266:	61 f0       	breq	.+24     	; 0x3280 <vfprintf+0x5a4>
    3268:	90 37       	cpi	r25, 0x70	; 112
    326a:	20 f4       	brcc	.+8      	; 0x3274 <vfprintf+0x598>
    326c:	98 35       	cpi	r25, 0x58	; 88
    326e:	09 f0       	breq	.+2      	; 0x3272 <vfprintf+0x596>
    3270:	ab c0       	rjmp	.+342    	; 0x33c8 <vfprintf+0x6ec>
    3272:	0f c0       	rjmp	.+30     	; 0x3292 <vfprintf+0x5b6>
    3274:	90 37       	cpi	r25, 0x70	; 112
    3276:	39 f0       	breq	.+14     	; 0x3286 <vfprintf+0x5aa>
    3278:	98 37       	cpi	r25, 0x78	; 120
    327a:	09 f0       	breq	.+2      	; 0x327e <vfprintf+0x5a2>
    327c:	a5 c0       	rjmp	.+330    	; 0x33c8 <vfprintf+0x6ec>
    327e:	04 c0       	rjmp	.+8      	; 0x3288 <vfprintf+0x5ac>
    3280:	28 e0       	ldi	r18, 0x08	; 8
    3282:	30 e0       	ldi	r19, 0x00	; 0
    3284:	0a c0       	rjmp	.+20     	; 0x329a <vfprintf+0x5be>
    3286:	10 61       	ori	r17, 0x10	; 16
    3288:	14 fd       	sbrc	r17, 4
    328a:	14 60       	ori	r17, 0x04	; 4
    328c:	20 e1       	ldi	r18, 0x10	; 16
    328e:	30 e0       	ldi	r19, 0x00	; 0
    3290:	04 c0       	rjmp	.+8      	; 0x329a <vfprintf+0x5be>
    3292:	14 fd       	sbrc	r17, 4
    3294:	16 60       	ori	r17, 0x06	; 6
    3296:	20 e1       	ldi	r18, 0x10	; 16
    3298:	32 e0       	ldi	r19, 0x02	; 2
    329a:	17 ff       	sbrs	r17, 7
    329c:	08 c0       	rjmp	.+16     	; 0x32ae <vfprintf+0x5d2>
    329e:	f6 01       	movw	r30, r12
    32a0:	60 81       	ld	r22, Z
    32a2:	71 81       	ldd	r23, Z+1	; 0x01
    32a4:	82 81       	ldd	r24, Z+2	; 0x02
    32a6:	93 81       	ldd	r25, Z+3	; 0x03
    32a8:	44 e0       	ldi	r20, 0x04	; 4
    32aa:	50 e0       	ldi	r21, 0x00	; 0
    32ac:	08 c0       	rjmp	.+16     	; 0x32be <vfprintf+0x5e2>
    32ae:	f6 01       	movw	r30, r12
    32b0:	80 81       	ld	r24, Z
    32b2:	91 81       	ldd	r25, Z+1	; 0x01
    32b4:	bc 01       	movw	r22, r24
    32b6:	80 e0       	ldi	r24, 0x00	; 0
    32b8:	90 e0       	ldi	r25, 0x00	; 0
    32ba:	42 e0       	ldi	r20, 0x02	; 2
    32bc:	50 e0       	ldi	r21, 0x00	; 0
    32be:	c4 0e       	add	r12, r20
    32c0:	d5 1e       	adc	r13, r21
    32c2:	ae 01       	movw	r20, r28
    32c4:	4f 5f       	subi	r20, 0xFF	; 255
    32c6:	5f 4f       	sbci	r21, 0xFF	; 255
    32c8:	cc d2       	rcall	.+1432   	; 0x3862 <__ultoa_invert>
    32ca:	e8 2e       	mov	r14, r24
    32cc:	58 89       	ldd	r21, Y+16	; 0x10
    32ce:	e5 1a       	sub	r14, r21
    32d0:	8f e7       	ldi	r24, 0x7F	; 127
    32d2:	f8 2e       	mov	r15, r24
    32d4:	f1 22       	and	r15, r17
    32d6:	f6 fe       	sbrs	r15, 6
    32d8:	0b c0       	rjmp	.+22     	; 0x32f0 <vfprintf+0x614>
    32da:	8e ef       	ldi	r24, 0xFE	; 254
    32dc:	f8 22       	and	r15, r24
    32de:	e9 14       	cp	r14, r9
    32e0:	38 f4       	brcc	.+14     	; 0x32f0 <vfprintf+0x614>
    32e2:	f4 fe       	sbrs	r15, 4
    32e4:	07 c0       	rjmp	.+14     	; 0x32f4 <vfprintf+0x618>
    32e6:	f2 fc       	sbrc	r15, 2
    32e8:	05 c0       	rjmp	.+10     	; 0x32f4 <vfprintf+0x618>
    32ea:	9f ee       	ldi	r25, 0xEF	; 239
    32ec:	f9 22       	and	r15, r25
    32ee:	02 c0       	rjmp	.+4      	; 0x32f4 <vfprintf+0x618>
    32f0:	1e 2d       	mov	r17, r14
    32f2:	01 c0       	rjmp	.+2      	; 0x32f6 <vfprintf+0x61a>
    32f4:	19 2d       	mov	r17, r9
    32f6:	f4 fe       	sbrs	r15, 4
    32f8:	0d c0       	rjmp	.+26     	; 0x3314 <vfprintf+0x638>
    32fa:	fe 01       	movw	r30, r28
    32fc:	ee 0d       	add	r30, r14
    32fe:	f1 1d       	adc	r31, r1
    3300:	80 81       	ld	r24, Z
    3302:	80 33       	cpi	r24, 0x30	; 48
    3304:	19 f4       	brne	.+6      	; 0x330c <vfprintf+0x630>
    3306:	e9 ee       	ldi	r30, 0xE9	; 233
    3308:	fe 22       	and	r15, r30
    330a:	08 c0       	rjmp	.+16     	; 0x331c <vfprintf+0x640>
    330c:	1f 5f       	subi	r17, 0xFF	; 255
    330e:	f2 fe       	sbrs	r15, 2
    3310:	05 c0       	rjmp	.+10     	; 0x331c <vfprintf+0x640>
    3312:	03 c0       	rjmp	.+6      	; 0x331a <vfprintf+0x63e>
    3314:	8f 2d       	mov	r24, r15
    3316:	86 78       	andi	r24, 0x86	; 134
    3318:	09 f0       	breq	.+2      	; 0x331c <vfprintf+0x640>
    331a:	1f 5f       	subi	r17, 0xFF	; 255
    331c:	0f 2d       	mov	r16, r15
    331e:	f3 fc       	sbrc	r15, 3
    3320:	13 c0       	rjmp	.+38     	; 0x3348 <vfprintf+0x66c>
    3322:	f0 fe       	sbrs	r15, 0
    3324:	0e c0       	rjmp	.+28     	; 0x3342 <vfprintf+0x666>
    3326:	18 15       	cp	r17, r8
    3328:	10 f0       	brcs	.+4      	; 0x332e <vfprintf+0x652>
    332a:	9e 2c       	mov	r9, r14
    332c:	0a c0       	rjmp	.+20     	; 0x3342 <vfprintf+0x666>
    332e:	9e 2c       	mov	r9, r14
    3330:	98 0c       	add	r9, r8
    3332:	91 1a       	sub	r9, r17
    3334:	18 2d       	mov	r17, r8
    3336:	05 c0       	rjmp	.+10     	; 0x3342 <vfprintf+0x666>
    3338:	80 e2       	ldi	r24, 0x20	; 32
    333a:	90 e0       	ldi	r25, 0x00	; 0
    333c:	b3 01       	movw	r22, r6
    333e:	dc d1       	rcall	.+952    	; 0x36f8 <fputc>
    3340:	1f 5f       	subi	r17, 0xFF	; 255
    3342:	18 15       	cp	r17, r8
    3344:	c8 f3       	brcs	.-14     	; 0x3338 <vfprintf+0x65c>
    3346:	04 c0       	rjmp	.+8      	; 0x3350 <vfprintf+0x674>
    3348:	18 15       	cp	r17, r8
    334a:	10 f4       	brcc	.+4      	; 0x3350 <vfprintf+0x674>
    334c:	81 1a       	sub	r8, r17
    334e:	01 c0       	rjmp	.+2      	; 0x3352 <vfprintf+0x676>
    3350:	88 24       	eor	r8, r8
    3352:	04 ff       	sbrs	r16, 4
    3354:	0e c0       	rjmp	.+28     	; 0x3372 <vfprintf+0x696>
    3356:	80 e3       	ldi	r24, 0x30	; 48
    3358:	90 e0       	ldi	r25, 0x00	; 0
    335a:	b3 01       	movw	r22, r6
    335c:	cd d1       	rcall	.+922    	; 0x36f8 <fputc>
    335e:	02 ff       	sbrs	r16, 2
    3360:	1b c0       	rjmp	.+54     	; 0x3398 <vfprintf+0x6bc>
    3362:	01 fd       	sbrc	r16, 1
    3364:	03 c0       	rjmp	.+6      	; 0x336c <vfprintf+0x690>
    3366:	88 e7       	ldi	r24, 0x78	; 120
    3368:	90 e0       	ldi	r25, 0x00	; 0
    336a:	0e c0       	rjmp	.+28     	; 0x3388 <vfprintf+0x6ac>
    336c:	88 e5       	ldi	r24, 0x58	; 88
    336e:	90 e0       	ldi	r25, 0x00	; 0
    3370:	0b c0       	rjmp	.+22     	; 0x3388 <vfprintf+0x6ac>
    3372:	80 2f       	mov	r24, r16
    3374:	86 78       	andi	r24, 0x86	; 134
    3376:	81 f0       	breq	.+32     	; 0x3398 <vfprintf+0x6bc>
    3378:	01 ff       	sbrs	r16, 1
    337a:	02 c0       	rjmp	.+4      	; 0x3380 <vfprintf+0x6a4>
    337c:	8b e2       	ldi	r24, 0x2B	; 43
    337e:	01 c0       	rjmp	.+2      	; 0x3382 <vfprintf+0x6a6>
    3380:	80 e2       	ldi	r24, 0x20	; 32
    3382:	f7 fc       	sbrc	r15, 7
    3384:	8d e2       	ldi	r24, 0x2D	; 45
    3386:	90 e0       	ldi	r25, 0x00	; 0
    3388:	b3 01       	movw	r22, r6
    338a:	b6 d1       	rcall	.+876    	; 0x36f8 <fputc>
    338c:	05 c0       	rjmp	.+10     	; 0x3398 <vfprintf+0x6bc>
    338e:	80 e3       	ldi	r24, 0x30	; 48
    3390:	90 e0       	ldi	r25, 0x00	; 0
    3392:	b3 01       	movw	r22, r6
    3394:	b1 d1       	rcall	.+866    	; 0x36f8 <fputc>
    3396:	9a 94       	dec	r9
    3398:	e9 14       	cp	r14, r9
    339a:	c8 f3       	brcs	.-14     	; 0x338e <vfprintf+0x6b2>
    339c:	ea 94       	dec	r14
    339e:	e1 e0       	ldi	r30, 0x01	; 1
    33a0:	f0 e0       	ldi	r31, 0x00	; 0
    33a2:	ec 0f       	add	r30, r28
    33a4:	fd 1f       	adc	r31, r29
    33a6:	ee 0d       	add	r30, r14
    33a8:	f1 1d       	adc	r31, r1
    33aa:	80 81       	ld	r24, Z
    33ac:	90 e0       	ldi	r25, 0x00	; 0
    33ae:	b3 01       	movw	r22, r6
    33b0:	a3 d1       	rcall	.+838    	; 0x36f8 <fputc>
    33b2:	ee 20       	and	r14, r14
    33b4:	99 f7       	brne	.-26     	; 0x339c <vfprintf+0x6c0>
    33b6:	05 c0       	rjmp	.+10     	; 0x33c2 <vfprintf+0x6e6>
    33b8:	80 e2       	ldi	r24, 0x20	; 32
    33ba:	90 e0       	ldi	r25, 0x00	; 0
    33bc:	b3 01       	movw	r22, r6
    33be:	9c d1       	rcall	.+824    	; 0x36f8 <fputc>
    33c0:	8a 94       	dec	r8
    33c2:	88 20       	and	r8, r8
    33c4:	c9 f7       	brne	.-14     	; 0x33b8 <vfprintf+0x6dc>
    33c6:	b6 cc       	rjmp	.-1684   	; 0x2d34 <vfprintf+0x58>
    33c8:	f3 01       	movw	r30, r6
    33ca:	66 81       	ldd	r22, Z+6	; 0x06
    33cc:	77 81       	ldd	r23, Z+7	; 0x07
    33ce:	cb 01       	movw	r24, r22
    33d0:	61 96       	adiw	r28, 0x11	; 17
    33d2:	0f b6       	in	r0, 0x3f	; 63
    33d4:	f8 94       	cli
    33d6:	de bf       	out	0x3e, r29	; 62
    33d8:	0f be       	out	0x3f, r0	; 63
    33da:	cd bf       	out	0x3d, r28	; 61
    33dc:	cf 91       	pop	r28
    33de:	df 91       	pop	r29
    33e0:	1f 91       	pop	r17
    33e2:	0f 91       	pop	r16
    33e4:	ff 90       	pop	r15
    33e6:	ef 90       	pop	r14
    33e8:	df 90       	pop	r13
    33ea:	cf 90       	pop	r12
    33ec:	bf 90       	pop	r11
    33ee:	af 90       	pop	r10
    33f0:	9f 90       	pop	r9
    33f2:	8f 90       	pop	r8
    33f4:	7f 90       	pop	r7
    33f6:	6f 90       	pop	r6
    33f8:	5f 90       	pop	r5
    33fa:	4f 90       	pop	r4
    33fc:	3f 90       	pop	r3
    33fe:	2f 90       	pop	r2
    3400:	08 95       	ret

00003402 <__ftoa_engine>:
    3402:	28 30       	cpi	r18, 0x08	; 8
    3404:	08 f0       	brcs	.+2      	; 0x3408 <__ftoa_engine+0x6>
    3406:	27 e0       	ldi	r18, 0x07	; 7
    3408:	33 27       	eor	r19, r19
    340a:	da 01       	movw	r26, r20
    340c:	99 0f       	add	r25, r25
    340e:	31 1d       	adc	r19, r1
    3410:	87 fd       	sbrc	r24, 7
    3412:	91 60       	ori	r25, 0x01	; 1
    3414:	00 96       	adiw	r24, 0x00	; 0
    3416:	61 05       	cpc	r22, r1
    3418:	71 05       	cpc	r23, r1
    341a:	39 f4       	brne	.+14     	; 0x342a <__ftoa_engine+0x28>
    341c:	32 60       	ori	r19, 0x02	; 2
    341e:	2e 5f       	subi	r18, 0xFE	; 254
    3420:	3d 93       	st	X+, r19
    3422:	30 e3       	ldi	r19, 0x30	; 48
    3424:	2a 95       	dec	r18
    3426:	e1 f7       	brne	.-8      	; 0x3420 <__ftoa_engine+0x1e>
    3428:	08 95       	ret
    342a:	9f 3f       	cpi	r25, 0xFF	; 255
    342c:	30 f0       	brcs	.+12     	; 0x343a <__ftoa_engine+0x38>
    342e:	80 38       	cpi	r24, 0x80	; 128
    3430:	71 05       	cpc	r23, r1
    3432:	61 05       	cpc	r22, r1
    3434:	09 f0       	breq	.+2      	; 0x3438 <__ftoa_engine+0x36>
    3436:	3c 5f       	subi	r19, 0xFC	; 252
    3438:	3c 5f       	subi	r19, 0xFC	; 252
    343a:	3d 93       	st	X+, r19
    343c:	91 30       	cpi	r25, 0x01	; 1
    343e:	08 f0       	brcs	.+2      	; 0x3442 <__ftoa_engine+0x40>
    3440:	80 68       	ori	r24, 0x80	; 128
    3442:	91 1d       	adc	r25, r1
    3444:	df 93       	push	r29
    3446:	cf 93       	push	r28
    3448:	1f 93       	push	r17
    344a:	0f 93       	push	r16
    344c:	ff 92       	push	r15
    344e:	ef 92       	push	r14
    3450:	19 2f       	mov	r17, r25
    3452:	98 7f       	andi	r25, 0xF8	; 248
    3454:	96 95       	lsr	r25
    3456:	e9 2f       	mov	r30, r25
    3458:	96 95       	lsr	r25
    345a:	96 95       	lsr	r25
    345c:	e9 0f       	add	r30, r25
    345e:	ff 27       	eor	r31, r31
    3460:	e2 5d       	subi	r30, 0xD2	; 210
    3462:	fe 4f       	sbci	r31, 0xFE	; 254
    3464:	99 27       	eor	r25, r25
    3466:	33 27       	eor	r19, r19
    3468:	ee 24       	eor	r14, r14
    346a:	ff 24       	eor	r15, r15
    346c:	a7 01       	movw	r20, r14
    346e:	e7 01       	movw	r28, r14
    3470:	05 90       	lpm	r0, Z+
    3472:	08 94       	sec
    3474:	07 94       	ror	r0
    3476:	28 f4       	brcc	.+10     	; 0x3482 <__ftoa_engine+0x80>
    3478:	36 0f       	add	r19, r22
    347a:	e7 1e       	adc	r14, r23
    347c:	f8 1e       	adc	r15, r24
    347e:	49 1f       	adc	r20, r25
    3480:	51 1d       	adc	r21, r1
    3482:	66 0f       	add	r22, r22
    3484:	77 1f       	adc	r23, r23
    3486:	88 1f       	adc	r24, r24
    3488:	99 1f       	adc	r25, r25
    348a:	06 94       	lsr	r0
    348c:	a1 f7       	brne	.-24     	; 0x3476 <__ftoa_engine+0x74>
    348e:	05 90       	lpm	r0, Z+
    3490:	07 94       	ror	r0
    3492:	28 f4       	brcc	.+10     	; 0x349e <__ftoa_engine+0x9c>
    3494:	e7 0e       	add	r14, r23
    3496:	f8 1e       	adc	r15, r24
    3498:	49 1f       	adc	r20, r25
    349a:	56 1f       	adc	r21, r22
    349c:	c1 1d       	adc	r28, r1
    349e:	77 0f       	add	r23, r23
    34a0:	88 1f       	adc	r24, r24
    34a2:	99 1f       	adc	r25, r25
    34a4:	66 1f       	adc	r22, r22
    34a6:	06 94       	lsr	r0
    34a8:	a1 f7       	brne	.-24     	; 0x3492 <__ftoa_engine+0x90>
    34aa:	05 90       	lpm	r0, Z+
    34ac:	07 94       	ror	r0
    34ae:	28 f4       	brcc	.+10     	; 0x34ba <__ftoa_engine+0xb8>
    34b0:	f8 0e       	add	r15, r24
    34b2:	49 1f       	adc	r20, r25
    34b4:	56 1f       	adc	r21, r22
    34b6:	c7 1f       	adc	r28, r23
    34b8:	d1 1d       	adc	r29, r1
    34ba:	88 0f       	add	r24, r24
    34bc:	99 1f       	adc	r25, r25
    34be:	66 1f       	adc	r22, r22
    34c0:	77 1f       	adc	r23, r23
    34c2:	06 94       	lsr	r0
    34c4:	a1 f7       	brne	.-24     	; 0x34ae <__ftoa_engine+0xac>
    34c6:	05 90       	lpm	r0, Z+
    34c8:	07 94       	ror	r0
    34ca:	20 f4       	brcc	.+8      	; 0x34d4 <__ftoa_engine+0xd2>
    34cc:	49 0f       	add	r20, r25
    34ce:	56 1f       	adc	r21, r22
    34d0:	c7 1f       	adc	r28, r23
    34d2:	d8 1f       	adc	r29, r24
    34d4:	99 0f       	add	r25, r25
    34d6:	66 1f       	adc	r22, r22
    34d8:	77 1f       	adc	r23, r23
    34da:	88 1f       	adc	r24, r24
    34dc:	06 94       	lsr	r0
    34de:	a9 f7       	brne	.-22     	; 0x34ca <__ftoa_engine+0xc8>
    34e0:	84 91       	lpm	r24, Z+
    34e2:	10 95       	com	r17
    34e4:	17 70       	andi	r17, 0x07	; 7
    34e6:	41 f0       	breq	.+16     	; 0x34f8 <__ftoa_engine+0xf6>
    34e8:	d6 95       	lsr	r29
    34ea:	c7 95       	ror	r28
    34ec:	57 95       	ror	r21
    34ee:	47 95       	ror	r20
    34f0:	f7 94       	ror	r15
    34f2:	e7 94       	ror	r14
    34f4:	1a 95       	dec	r17
    34f6:	c1 f7       	brne	.-16     	; 0x34e8 <__ftoa_engine+0xe6>
    34f8:	e4 ed       	ldi	r30, 0xD4	; 212
    34fa:	f0 e0       	ldi	r31, 0x00	; 0
    34fc:	68 94       	set
    34fe:	15 90       	lpm	r1, Z+
    3500:	15 91       	lpm	r17, Z+
    3502:	35 91       	lpm	r19, Z+
    3504:	65 91       	lpm	r22, Z+
    3506:	95 91       	lpm	r25, Z+
    3508:	05 90       	lpm	r0, Z+
    350a:	7f e2       	ldi	r23, 0x2F	; 47
    350c:	73 95       	inc	r23
    350e:	e1 18       	sub	r14, r1
    3510:	f1 0a       	sbc	r15, r17
    3512:	43 0b       	sbc	r20, r19
    3514:	56 0b       	sbc	r21, r22
    3516:	c9 0b       	sbc	r28, r25
    3518:	d0 09       	sbc	r29, r0
    351a:	c0 f7       	brcc	.-16     	; 0x350c <__ftoa_engine+0x10a>
    351c:	e1 0c       	add	r14, r1
    351e:	f1 1e       	adc	r15, r17
    3520:	43 1f       	adc	r20, r19
    3522:	56 1f       	adc	r21, r22
    3524:	c9 1f       	adc	r28, r25
    3526:	d0 1d       	adc	r29, r0
    3528:	7e f4       	brtc	.+30     	; 0x3548 <__ftoa_engine+0x146>
    352a:	70 33       	cpi	r23, 0x30	; 48
    352c:	11 f4       	brne	.+4      	; 0x3532 <__ftoa_engine+0x130>
    352e:	8a 95       	dec	r24
    3530:	e6 cf       	rjmp	.-52     	; 0x34fe <__ftoa_engine+0xfc>
    3532:	e8 94       	clt
    3534:	01 50       	subi	r16, 0x01	; 1
    3536:	30 f0       	brcs	.+12     	; 0x3544 <__ftoa_engine+0x142>
    3538:	08 0f       	add	r16, r24
    353a:	0a f4       	brpl	.+2      	; 0x353e <__ftoa_engine+0x13c>
    353c:	00 27       	eor	r16, r16
    353e:	02 17       	cp	r16, r18
    3540:	08 f4       	brcc	.+2      	; 0x3544 <__ftoa_engine+0x142>
    3542:	20 2f       	mov	r18, r16
    3544:	23 95       	inc	r18
    3546:	02 2f       	mov	r16, r18
    3548:	7a 33       	cpi	r23, 0x3A	; 58
    354a:	28 f0       	brcs	.+10     	; 0x3556 <__ftoa_engine+0x154>
    354c:	79 e3       	ldi	r23, 0x39	; 57
    354e:	7d 93       	st	X+, r23
    3550:	2a 95       	dec	r18
    3552:	e9 f7       	brne	.-6      	; 0x354e <__ftoa_engine+0x14c>
    3554:	10 c0       	rjmp	.+32     	; 0x3576 <__ftoa_engine+0x174>
    3556:	7d 93       	st	X+, r23
    3558:	2a 95       	dec	r18
    355a:	89 f6       	brne	.-94     	; 0x34fe <__ftoa_engine+0xfc>
    355c:	06 94       	lsr	r0
    355e:	97 95       	ror	r25
    3560:	67 95       	ror	r22
    3562:	37 95       	ror	r19
    3564:	17 95       	ror	r17
    3566:	17 94       	ror	r1
    3568:	e1 18       	sub	r14, r1
    356a:	f1 0a       	sbc	r15, r17
    356c:	43 0b       	sbc	r20, r19
    356e:	56 0b       	sbc	r21, r22
    3570:	c9 0b       	sbc	r28, r25
    3572:	d0 09       	sbc	r29, r0
    3574:	98 f0       	brcs	.+38     	; 0x359c <__ftoa_engine+0x19a>
    3576:	23 95       	inc	r18
    3578:	7e 91       	ld	r23, -X
    357a:	73 95       	inc	r23
    357c:	7a 33       	cpi	r23, 0x3A	; 58
    357e:	08 f0       	brcs	.+2      	; 0x3582 <__ftoa_engine+0x180>
    3580:	70 e3       	ldi	r23, 0x30	; 48
    3582:	7c 93       	st	X, r23
    3584:	20 13       	cpse	r18, r16
    3586:	b8 f7       	brcc	.-18     	; 0x3576 <__ftoa_engine+0x174>
    3588:	7e 91       	ld	r23, -X
    358a:	70 61       	ori	r23, 0x10	; 16
    358c:	7d 93       	st	X+, r23
    358e:	30 f0       	brcs	.+12     	; 0x359c <__ftoa_engine+0x19a>
    3590:	83 95       	inc	r24
    3592:	71 e3       	ldi	r23, 0x31	; 49
    3594:	7d 93       	st	X+, r23
    3596:	70 e3       	ldi	r23, 0x30	; 48
    3598:	2a 95       	dec	r18
    359a:	e1 f7       	brne	.-8      	; 0x3594 <__ftoa_engine+0x192>
    359c:	11 24       	eor	r1, r1
    359e:	ef 90       	pop	r14
    35a0:	ff 90       	pop	r15
    35a2:	0f 91       	pop	r16
    35a4:	1f 91       	pop	r17
    35a6:	cf 91       	pop	r28
    35a8:	df 91       	pop	r29
    35aa:	99 27       	eor	r25, r25
    35ac:	87 fd       	sbrc	r24, 7
    35ae:	90 95       	com	r25
    35b0:	08 95       	ret

000035b2 <strnlen_P>:
    35b2:	fc 01       	movw	r30, r24
    35b4:	05 90       	lpm	r0, Z+
    35b6:	61 50       	subi	r22, 0x01	; 1
    35b8:	70 40       	sbci	r23, 0x00	; 0
    35ba:	01 10       	cpse	r0, r1
    35bc:	d8 f7       	brcc	.-10     	; 0x35b4 <strnlen_P+0x2>
    35be:	80 95       	com	r24
    35c0:	90 95       	com	r25
    35c2:	8e 0f       	add	r24, r30
    35c4:	9f 1f       	adc	r25, r31
    35c6:	08 95       	ret

000035c8 <strnlen>:
    35c8:	fc 01       	movw	r30, r24
    35ca:	61 50       	subi	r22, 0x01	; 1
    35cc:	70 40       	sbci	r23, 0x00	; 0
    35ce:	01 90       	ld	r0, Z+
    35d0:	01 10       	cpse	r0, r1
    35d2:	d8 f7       	brcc	.-10     	; 0x35ca <strnlen+0x2>
    35d4:	80 95       	com	r24
    35d6:	90 95       	com	r25
    35d8:	8e 0f       	add	r24, r30
    35da:	9f 1f       	adc	r25, r31
    35dc:	08 95       	ret

000035de <fdevopen>:
    35de:	0f 93       	push	r16
    35e0:	1f 93       	push	r17
    35e2:	cf 93       	push	r28
    35e4:	df 93       	push	r29
    35e6:	8c 01       	movw	r16, r24
    35e8:	eb 01       	movw	r28, r22
    35ea:	00 97       	sbiw	r24, 0x00	; 0
    35ec:	31 f4       	brne	.+12     	; 0x35fa <fdevopen+0x1c>
    35ee:	61 15       	cp	r22, r1
    35f0:	71 05       	cpc	r23, r1
    35f2:	19 f4       	brne	.+6      	; 0x35fa <fdevopen+0x1c>
    35f4:	20 e0       	ldi	r18, 0x00	; 0
    35f6:	30 e0       	ldi	r19, 0x00	; 0
    35f8:	37 c0       	rjmp	.+110    	; 0x3668 <fdevopen+0x8a>
    35fa:	81 e0       	ldi	r24, 0x01	; 1
    35fc:	90 e0       	ldi	r25, 0x00	; 0
    35fe:	6e e0       	ldi	r22, 0x0E	; 14
    3600:	70 e0       	ldi	r23, 0x00	; 0
    3602:	8d d1       	rcall	.+794    	; 0x391e <calloc>
    3604:	fc 01       	movw	r30, r24
    3606:	9c 01       	movw	r18, r24
    3608:	00 97       	sbiw	r24, 0x00	; 0
    360a:	71 f1       	breq	.+92     	; 0x3668 <fdevopen+0x8a>
    360c:	80 e8       	ldi	r24, 0x80	; 128
    360e:	83 83       	std	Z+3, r24	; 0x03
    3610:	20 97       	sbiw	r28, 0x00	; 0
    3612:	71 f0       	breq	.+28     	; 0x3630 <fdevopen+0x52>
    3614:	d3 87       	std	Z+11, r29	; 0x0b
    3616:	c2 87       	std	Z+10, r28	; 0x0a
    3618:	81 e8       	ldi	r24, 0x81	; 129
    361a:	83 83       	std	Z+3, r24	; 0x03
    361c:	80 91 a6 5c 	lds	r24, 0x5CA6
    3620:	90 91 a7 5c 	lds	r25, 0x5CA7
    3624:	89 2b       	or	r24, r25
    3626:	21 f4       	brne	.+8      	; 0x3630 <fdevopen+0x52>
    3628:	f0 93 a7 5c 	sts	0x5CA7, r31
    362c:	e0 93 a6 5c 	sts	0x5CA6, r30
    3630:	01 15       	cp	r16, r1
    3632:	11 05       	cpc	r17, r1
    3634:	c9 f0       	breq	.+50     	; 0x3668 <fdevopen+0x8a>
    3636:	11 87       	std	Z+9, r17	; 0x09
    3638:	00 87       	std	Z+8, r16	; 0x08
    363a:	83 81       	ldd	r24, Z+3	; 0x03
    363c:	82 60       	ori	r24, 0x02	; 2
    363e:	83 83       	std	Z+3, r24	; 0x03
    3640:	80 91 a8 5c 	lds	r24, 0x5CA8
    3644:	90 91 a9 5c 	lds	r25, 0x5CA9
    3648:	89 2b       	or	r24, r25
    364a:	71 f4       	brne	.+28     	; 0x3668 <fdevopen+0x8a>
    364c:	f0 93 a9 5c 	sts	0x5CA9, r31
    3650:	e0 93 a8 5c 	sts	0x5CA8, r30
    3654:	80 91 aa 5c 	lds	r24, 0x5CAA
    3658:	90 91 ab 5c 	lds	r25, 0x5CAB
    365c:	89 2b       	or	r24, r25
    365e:	21 f4       	brne	.+8      	; 0x3668 <fdevopen+0x8a>
    3660:	f0 93 ab 5c 	sts	0x5CAB, r31
    3664:	e0 93 aa 5c 	sts	0x5CAA, r30
    3668:	c9 01       	movw	r24, r18
    366a:	df 91       	pop	r29
    366c:	cf 91       	pop	r28
    366e:	1f 91       	pop	r17
    3670:	0f 91       	pop	r16
    3672:	08 95       	ret

00003674 <fgetc>:
    3674:	cf 93       	push	r28
    3676:	df 93       	push	r29
    3678:	ec 01       	movw	r28, r24
    367a:	4b 81       	ldd	r20, Y+3	; 0x03
    367c:	40 ff       	sbrs	r20, 0
    367e:	1a c0       	rjmp	.+52     	; 0x36b4 <fgetc+0x40>
    3680:	46 ff       	sbrs	r20, 6
    3682:	0a c0       	rjmp	.+20     	; 0x3698 <fgetc+0x24>
    3684:	4f 7b       	andi	r20, 0xBF	; 191
    3686:	4b 83       	std	Y+3, r20	; 0x03
    3688:	8e 81       	ldd	r24, Y+6	; 0x06
    368a:	9f 81       	ldd	r25, Y+7	; 0x07
    368c:	01 96       	adiw	r24, 0x01	; 1
    368e:	9f 83       	std	Y+7, r25	; 0x07
    3690:	8e 83       	std	Y+6, r24	; 0x06
    3692:	8a 81       	ldd	r24, Y+2	; 0x02
    3694:	28 2f       	mov	r18, r24
    3696:	2b c0       	rjmp	.+86     	; 0x36ee <fgetc+0x7a>
    3698:	42 ff       	sbrs	r20, 2
    369a:	13 c0       	rjmp	.+38     	; 0x36c2 <fgetc+0x4e>
    369c:	e8 81       	ld	r30, Y
    369e:	f9 81       	ldd	r31, Y+1	; 0x01
    36a0:	80 81       	ld	r24, Z
    36a2:	28 2f       	mov	r18, r24
    36a4:	33 27       	eor	r19, r19
    36a6:	27 fd       	sbrc	r18, 7
    36a8:	30 95       	com	r19
    36aa:	21 15       	cp	r18, r1
    36ac:	31 05       	cpc	r19, r1
    36ae:	29 f4       	brne	.+10     	; 0x36ba <fgetc+0x46>
    36b0:	40 62       	ori	r20, 0x20	; 32
    36b2:	4b 83       	std	Y+3, r20	; 0x03
    36b4:	2f ef       	ldi	r18, 0xFF	; 255
    36b6:	3f ef       	ldi	r19, 0xFF	; 255
    36b8:	1b c0       	rjmp	.+54     	; 0x36f0 <fgetc+0x7c>
    36ba:	31 96       	adiw	r30, 0x01	; 1
    36bc:	f9 83       	std	Y+1, r31	; 0x01
    36be:	e8 83       	st	Y, r30
    36c0:	11 c0       	rjmp	.+34     	; 0x36e4 <fgetc+0x70>
    36c2:	ea 85       	ldd	r30, Y+10	; 0x0a
    36c4:	fb 85       	ldd	r31, Y+11	; 0x0b
    36c6:	ce 01       	movw	r24, r28
    36c8:	19 95       	eicall
    36ca:	9c 01       	movw	r18, r24
    36cc:	97 ff       	sbrs	r25, 7
    36ce:	0a c0       	rjmp	.+20     	; 0x36e4 <fgetc+0x70>
    36d0:	9b 81       	ldd	r25, Y+3	; 0x03
    36d2:	2f 5f       	subi	r18, 0xFF	; 255
    36d4:	3f 4f       	sbci	r19, 0xFF	; 255
    36d6:	11 f0       	breq	.+4      	; 0x36dc <fgetc+0x68>
    36d8:	80 e2       	ldi	r24, 0x20	; 32
    36da:	01 c0       	rjmp	.+2      	; 0x36de <fgetc+0x6a>
    36dc:	80 e1       	ldi	r24, 0x10	; 16
    36de:	89 2b       	or	r24, r25
    36e0:	8b 83       	std	Y+3, r24	; 0x03
    36e2:	e8 cf       	rjmp	.-48     	; 0x36b4 <fgetc+0x40>
    36e4:	8e 81       	ldd	r24, Y+6	; 0x06
    36e6:	9f 81       	ldd	r25, Y+7	; 0x07
    36e8:	01 96       	adiw	r24, 0x01	; 1
    36ea:	9f 83       	std	Y+7, r25	; 0x07
    36ec:	8e 83       	std	Y+6, r24	; 0x06
    36ee:	30 e0       	ldi	r19, 0x00	; 0
    36f0:	c9 01       	movw	r24, r18
    36f2:	df 91       	pop	r29
    36f4:	cf 91       	pop	r28
    36f6:	08 95       	ret

000036f8 <fputc>:
    36f8:	0f 93       	push	r16
    36fa:	1f 93       	push	r17
    36fc:	cf 93       	push	r28
    36fe:	df 93       	push	r29
    3700:	8c 01       	movw	r16, r24
    3702:	eb 01       	movw	r28, r22
    3704:	8b 81       	ldd	r24, Y+3	; 0x03
    3706:	81 ff       	sbrs	r24, 1
    3708:	1b c0       	rjmp	.+54     	; 0x3740 <fputc+0x48>
    370a:	82 ff       	sbrs	r24, 2
    370c:	0d c0       	rjmp	.+26     	; 0x3728 <fputc+0x30>
    370e:	2e 81       	ldd	r18, Y+6	; 0x06
    3710:	3f 81       	ldd	r19, Y+7	; 0x07
    3712:	8c 81       	ldd	r24, Y+4	; 0x04
    3714:	9d 81       	ldd	r25, Y+5	; 0x05
    3716:	28 17       	cp	r18, r24
    3718:	39 07       	cpc	r19, r25
    371a:	64 f4       	brge	.+24     	; 0x3734 <fputc+0x3c>
    371c:	e8 81       	ld	r30, Y
    371e:	f9 81       	ldd	r31, Y+1	; 0x01
    3720:	01 93       	st	Z+, r16
    3722:	f9 83       	std	Y+1, r31	; 0x01
    3724:	e8 83       	st	Y, r30
    3726:	06 c0       	rjmp	.+12     	; 0x3734 <fputc+0x3c>
    3728:	e8 85       	ldd	r30, Y+8	; 0x08
    372a:	f9 85       	ldd	r31, Y+9	; 0x09
    372c:	80 2f       	mov	r24, r16
    372e:	19 95       	eicall
    3730:	89 2b       	or	r24, r25
    3732:	31 f4       	brne	.+12     	; 0x3740 <fputc+0x48>
    3734:	8e 81       	ldd	r24, Y+6	; 0x06
    3736:	9f 81       	ldd	r25, Y+7	; 0x07
    3738:	01 96       	adiw	r24, 0x01	; 1
    373a:	9f 83       	std	Y+7, r25	; 0x07
    373c:	8e 83       	std	Y+6, r24	; 0x06
    373e:	02 c0       	rjmp	.+4      	; 0x3744 <fputc+0x4c>
    3740:	0f ef       	ldi	r16, 0xFF	; 255
    3742:	1f ef       	ldi	r17, 0xFF	; 255
    3744:	c8 01       	movw	r24, r16
    3746:	df 91       	pop	r29
    3748:	cf 91       	pop	r28
    374a:	1f 91       	pop	r17
    374c:	0f 91       	pop	r16
    374e:	08 95       	ret

00003750 <fwrite>:
    3750:	8f 92       	push	r8
    3752:	9f 92       	push	r9
    3754:	af 92       	push	r10
    3756:	bf 92       	push	r11
    3758:	cf 92       	push	r12
    375a:	df 92       	push	r13
    375c:	ef 92       	push	r14
    375e:	ff 92       	push	r15
    3760:	0f 93       	push	r16
    3762:	1f 93       	push	r17
    3764:	cf 93       	push	r28
    3766:	df 93       	push	r29
    3768:	fc 01       	movw	r30, r24
    376a:	4b 01       	movw	r8, r22
    376c:	5a 01       	movw	r10, r20
    376e:	69 01       	movw	r12, r18
    3770:	d9 01       	movw	r26, r18
    3772:	13 96       	adiw	r26, 0x03	; 3
    3774:	8c 91       	ld	r24, X
    3776:	81 ff       	sbrs	r24, 1
    3778:	1e c0       	rjmp	.+60     	; 0x37b6 <fwrite+0x66>
    377a:	7f 01       	movw	r14, r30
    377c:	c0 e0       	ldi	r28, 0x00	; 0
    377e:	d0 e0       	ldi	r29, 0x00	; 0
    3780:	14 c0       	rjmp	.+40     	; 0x37aa <fwrite+0x5a>
    3782:	d6 01       	movw	r26, r12
    3784:	18 96       	adiw	r26, 0x08	; 8
    3786:	ed 91       	ld	r30, X+
    3788:	fc 91       	ld	r31, X
    378a:	19 97       	sbiw	r26, 0x09	; 9
    378c:	d7 01       	movw	r26, r14
    378e:	8c 91       	ld	r24, X
    3790:	b6 01       	movw	r22, r12
    3792:	19 95       	eicall
    3794:	89 2b       	or	r24, r25
    3796:	89 f4       	brne	.+34     	; 0x37ba <fwrite+0x6a>
    3798:	08 94       	sec
    379a:	e1 1c       	adc	r14, r1
    379c:	f1 1c       	adc	r15, r1
    379e:	0f 5f       	subi	r16, 0xFF	; 255
    37a0:	1f 4f       	sbci	r17, 0xFF	; 255
    37a2:	08 15       	cp	r16, r8
    37a4:	19 05       	cpc	r17, r9
    37a6:	68 f3       	brcs	.-38     	; 0x3782 <fwrite+0x32>
    37a8:	21 96       	adiw	r28, 0x01	; 1
    37aa:	ca 15       	cp	r28, r10
    37ac:	db 05       	cpc	r29, r11
    37ae:	28 f4       	brcc	.+10     	; 0x37ba <fwrite+0x6a>
    37b0:	00 e0       	ldi	r16, 0x00	; 0
    37b2:	10 e0       	ldi	r17, 0x00	; 0
    37b4:	f6 cf       	rjmp	.-20     	; 0x37a2 <fwrite+0x52>
    37b6:	c0 e0       	ldi	r28, 0x00	; 0
    37b8:	d0 e0       	ldi	r29, 0x00	; 0
    37ba:	ce 01       	movw	r24, r28
    37bc:	df 91       	pop	r29
    37be:	cf 91       	pop	r28
    37c0:	1f 91       	pop	r17
    37c2:	0f 91       	pop	r16
    37c4:	ff 90       	pop	r15
    37c6:	ef 90       	pop	r14
    37c8:	df 90       	pop	r13
    37ca:	cf 90       	pop	r12
    37cc:	bf 90       	pop	r11
    37ce:	af 90       	pop	r10
    37d0:	9f 90       	pop	r9
    37d2:	8f 90       	pop	r8
    37d4:	08 95       	ret

000037d6 <printf>:
    37d6:	df 93       	push	r29
    37d8:	cf 93       	push	r28
    37da:	cd b7       	in	r28, 0x3d	; 61
    37dc:	de b7       	in	r29, 0x3e	; 62
    37de:	fe 01       	movw	r30, r28
    37e0:	36 96       	adiw	r30, 0x06	; 6
    37e2:	61 91       	ld	r22, Z+
    37e4:	71 91       	ld	r23, Z+
    37e6:	80 91 a8 5c 	lds	r24, 0x5CA8
    37ea:	90 91 a9 5c 	lds	r25, 0x5CA9
    37ee:	af 01       	movw	r20, r30
    37f0:	75 da       	rcall	.-2838   	; 0x2cdc <vfprintf>
    37f2:	cf 91       	pop	r28
    37f4:	df 91       	pop	r29
    37f6:	08 95       	ret

000037f8 <puts>:
    37f8:	0f 93       	push	r16
    37fa:	1f 93       	push	r17
    37fc:	cf 93       	push	r28
    37fe:	df 93       	push	r29
    3800:	8c 01       	movw	r16, r24
    3802:	e0 91 a8 5c 	lds	r30, 0x5CA8
    3806:	f0 91 a9 5c 	lds	r31, 0x5CA9
    380a:	83 81       	ldd	r24, Z+3	; 0x03
    380c:	81 ff       	sbrs	r24, 1
    380e:	21 c0       	rjmp	.+66     	; 0x3852 <puts+0x5a>
    3810:	c0 e0       	ldi	r28, 0x00	; 0
    3812:	d0 e0       	ldi	r29, 0x00	; 0
    3814:	0d c0       	rjmp	.+26     	; 0x3830 <puts+0x38>
    3816:	e0 91 a8 5c 	lds	r30, 0x5CA8
    381a:	f0 91 a9 5c 	lds	r31, 0x5CA9
    381e:	20 85       	ldd	r18, Z+8	; 0x08
    3820:	31 85       	ldd	r19, Z+9	; 0x09
    3822:	bf 01       	movw	r22, r30
    3824:	f9 01       	movw	r30, r18
    3826:	19 95       	eicall
    3828:	89 2b       	or	r24, r25
    382a:	11 f0       	breq	.+4      	; 0x3830 <puts+0x38>
    382c:	cf ef       	ldi	r28, 0xFF	; 255
    382e:	df ef       	ldi	r29, 0xFF	; 255
    3830:	f8 01       	movw	r30, r16
    3832:	81 91       	ld	r24, Z+
    3834:	8f 01       	movw	r16, r30
    3836:	88 23       	and	r24, r24
    3838:	71 f7       	brne	.-36     	; 0x3816 <puts+0x1e>
    383a:	e0 91 a8 5c 	lds	r30, 0x5CA8
    383e:	f0 91 a9 5c 	lds	r31, 0x5CA9
    3842:	20 85       	ldd	r18, Z+8	; 0x08
    3844:	31 85       	ldd	r19, Z+9	; 0x09
    3846:	8a e0       	ldi	r24, 0x0A	; 10
    3848:	bf 01       	movw	r22, r30
    384a:	f9 01       	movw	r30, r18
    384c:	19 95       	eicall
    384e:	89 2b       	or	r24, r25
    3850:	11 f0       	breq	.+4      	; 0x3856 <puts+0x5e>
    3852:	cf ef       	ldi	r28, 0xFF	; 255
    3854:	df ef       	ldi	r29, 0xFF	; 255
    3856:	ce 01       	movw	r24, r28
    3858:	df 91       	pop	r29
    385a:	cf 91       	pop	r28
    385c:	1f 91       	pop	r17
    385e:	0f 91       	pop	r16
    3860:	08 95       	ret

00003862 <__ultoa_invert>:
    3862:	fa 01       	movw	r30, r20
    3864:	aa 27       	eor	r26, r26
    3866:	28 30       	cpi	r18, 0x08	; 8
    3868:	51 f1       	breq	.+84     	; 0x38be <__ultoa_invert+0x5c>
    386a:	20 31       	cpi	r18, 0x10	; 16
    386c:	81 f1       	breq	.+96     	; 0x38ce <__ultoa_invert+0x6c>
    386e:	e8 94       	clt
    3870:	6f 93       	push	r22
    3872:	6e 7f       	andi	r22, 0xFE	; 254
    3874:	6e 5f       	subi	r22, 0xFE	; 254
    3876:	7f 4f       	sbci	r23, 0xFF	; 255
    3878:	8f 4f       	sbci	r24, 0xFF	; 255
    387a:	9f 4f       	sbci	r25, 0xFF	; 255
    387c:	af 4f       	sbci	r26, 0xFF	; 255
    387e:	b1 e0       	ldi	r27, 0x01	; 1
    3880:	3e d0       	rcall	.+124    	; 0x38fe <__ultoa_invert+0x9c>
    3882:	b4 e0       	ldi	r27, 0x04	; 4
    3884:	3c d0       	rcall	.+120    	; 0x38fe <__ultoa_invert+0x9c>
    3886:	67 0f       	add	r22, r23
    3888:	78 1f       	adc	r23, r24
    388a:	89 1f       	adc	r24, r25
    388c:	9a 1f       	adc	r25, r26
    388e:	a1 1d       	adc	r26, r1
    3890:	68 0f       	add	r22, r24
    3892:	79 1f       	adc	r23, r25
    3894:	8a 1f       	adc	r24, r26
    3896:	91 1d       	adc	r25, r1
    3898:	a1 1d       	adc	r26, r1
    389a:	6a 0f       	add	r22, r26
    389c:	71 1d       	adc	r23, r1
    389e:	81 1d       	adc	r24, r1
    38a0:	91 1d       	adc	r25, r1
    38a2:	a1 1d       	adc	r26, r1
    38a4:	20 d0       	rcall	.+64     	; 0x38e6 <__ultoa_invert+0x84>
    38a6:	09 f4       	brne	.+2      	; 0x38aa <__ultoa_invert+0x48>
    38a8:	68 94       	set
    38aa:	3f 91       	pop	r19
    38ac:	2a e0       	ldi	r18, 0x0A	; 10
    38ae:	26 9f       	mul	r18, r22
    38b0:	11 24       	eor	r1, r1
    38b2:	30 19       	sub	r19, r0
    38b4:	30 5d       	subi	r19, 0xD0	; 208
    38b6:	31 93       	st	Z+, r19
    38b8:	de f6       	brtc	.-74     	; 0x3870 <__ultoa_invert+0xe>
    38ba:	cf 01       	movw	r24, r30
    38bc:	08 95       	ret
    38be:	46 2f       	mov	r20, r22
    38c0:	47 70       	andi	r20, 0x07	; 7
    38c2:	40 5d       	subi	r20, 0xD0	; 208
    38c4:	41 93       	st	Z+, r20
    38c6:	b3 e0       	ldi	r27, 0x03	; 3
    38c8:	0f d0       	rcall	.+30     	; 0x38e8 <__ultoa_invert+0x86>
    38ca:	c9 f7       	brne	.-14     	; 0x38be <__ultoa_invert+0x5c>
    38cc:	f6 cf       	rjmp	.-20     	; 0x38ba <__ultoa_invert+0x58>
    38ce:	46 2f       	mov	r20, r22
    38d0:	4f 70       	andi	r20, 0x0F	; 15
    38d2:	40 5d       	subi	r20, 0xD0	; 208
    38d4:	4a 33       	cpi	r20, 0x3A	; 58
    38d6:	18 f0       	brcs	.+6      	; 0x38de <__ultoa_invert+0x7c>
    38d8:	49 5d       	subi	r20, 0xD9	; 217
    38da:	31 fd       	sbrc	r19, 1
    38dc:	40 52       	subi	r20, 0x20	; 32
    38de:	41 93       	st	Z+, r20
    38e0:	02 d0       	rcall	.+4      	; 0x38e6 <__ultoa_invert+0x84>
    38e2:	a9 f7       	brne	.-22     	; 0x38ce <__ultoa_invert+0x6c>
    38e4:	ea cf       	rjmp	.-44     	; 0x38ba <__ultoa_invert+0x58>
    38e6:	b4 e0       	ldi	r27, 0x04	; 4
    38e8:	a6 95       	lsr	r26
    38ea:	97 95       	ror	r25
    38ec:	87 95       	ror	r24
    38ee:	77 95       	ror	r23
    38f0:	67 95       	ror	r22
    38f2:	ba 95       	dec	r27
    38f4:	c9 f7       	brne	.-14     	; 0x38e8 <__ultoa_invert+0x86>
    38f6:	00 97       	sbiw	r24, 0x00	; 0
    38f8:	61 05       	cpc	r22, r1
    38fa:	71 05       	cpc	r23, r1
    38fc:	08 95       	ret
    38fe:	9b 01       	movw	r18, r22
    3900:	ac 01       	movw	r20, r24
    3902:	0a 2e       	mov	r0, r26
    3904:	06 94       	lsr	r0
    3906:	57 95       	ror	r21
    3908:	47 95       	ror	r20
    390a:	37 95       	ror	r19
    390c:	27 95       	ror	r18
    390e:	ba 95       	dec	r27
    3910:	c9 f7       	brne	.-14     	; 0x3904 <__ultoa_invert+0xa2>
    3912:	62 0f       	add	r22, r18
    3914:	73 1f       	adc	r23, r19
    3916:	84 1f       	adc	r24, r20
    3918:	95 1f       	adc	r25, r21
    391a:	a0 1d       	adc	r26, r0
    391c:	08 95       	ret

0000391e <calloc>:
    391e:	0f 93       	push	r16
    3920:	1f 93       	push	r17
    3922:	cf 93       	push	r28
    3924:	df 93       	push	r29
    3926:	68 9f       	mul	r22, r24
    3928:	80 01       	movw	r16, r0
    392a:	69 9f       	mul	r22, r25
    392c:	10 0d       	add	r17, r0
    392e:	78 9f       	mul	r23, r24
    3930:	10 0d       	add	r17, r0
    3932:	11 24       	eor	r1, r1
    3934:	c8 01       	movw	r24, r16
    3936:	0d d0       	rcall	.+26     	; 0x3952 <malloc>
    3938:	ec 01       	movw	r28, r24
    393a:	00 97       	sbiw	r24, 0x00	; 0
    393c:	21 f0       	breq	.+8      	; 0x3946 <calloc+0x28>
    393e:	60 e0       	ldi	r22, 0x00	; 0
    3940:	70 e0       	ldi	r23, 0x00	; 0
    3942:	a8 01       	movw	r20, r16
    3944:	0b d1       	rcall	.+534    	; 0x3b5c <memset>
    3946:	ce 01       	movw	r24, r28
    3948:	df 91       	pop	r29
    394a:	cf 91       	pop	r28
    394c:	1f 91       	pop	r17
    394e:	0f 91       	pop	r16
    3950:	08 95       	ret

00003952 <malloc>:
    3952:	cf 93       	push	r28
    3954:	df 93       	push	r29
    3956:	bc 01       	movw	r22, r24
    3958:	82 30       	cpi	r24, 0x02	; 2
    395a:	91 05       	cpc	r25, r1
    395c:	10 f4       	brcc	.+4      	; 0x3962 <malloc+0x10>
    395e:	62 e0       	ldi	r22, 0x02	; 2
    3960:	70 e0       	ldi	r23, 0x00	; 0
    3962:	a0 91 ae 5c 	lds	r26, 0x5CAE
    3966:	b0 91 af 5c 	lds	r27, 0x5CAF
    396a:	ed 01       	movw	r28, r26
    396c:	e0 e0       	ldi	r30, 0x00	; 0
    396e:	f0 e0       	ldi	r31, 0x00	; 0
    3970:	40 e0       	ldi	r20, 0x00	; 0
    3972:	50 e0       	ldi	r21, 0x00	; 0
    3974:	21 c0       	rjmp	.+66     	; 0x39b8 <malloc+0x66>
    3976:	88 81       	ld	r24, Y
    3978:	99 81       	ldd	r25, Y+1	; 0x01
    397a:	86 17       	cp	r24, r22
    397c:	97 07       	cpc	r25, r23
    397e:	69 f4       	brne	.+26     	; 0x399a <malloc+0x48>
    3980:	8a 81       	ldd	r24, Y+2	; 0x02
    3982:	9b 81       	ldd	r25, Y+3	; 0x03
    3984:	30 97       	sbiw	r30, 0x00	; 0
    3986:	19 f0       	breq	.+6      	; 0x398e <malloc+0x3c>
    3988:	93 83       	std	Z+3, r25	; 0x03
    398a:	82 83       	std	Z+2, r24	; 0x02
    398c:	04 c0       	rjmp	.+8      	; 0x3996 <malloc+0x44>
    398e:	90 93 af 5c 	sts	0x5CAF, r25
    3992:	80 93 ae 5c 	sts	0x5CAE, r24
    3996:	fe 01       	movw	r30, r28
    3998:	34 c0       	rjmp	.+104    	; 0x3a02 <malloc+0xb0>
    399a:	68 17       	cp	r22, r24
    399c:	79 07       	cpc	r23, r25
    399e:	38 f4       	brcc	.+14     	; 0x39ae <malloc+0x5c>
    39a0:	41 15       	cp	r20, r1
    39a2:	51 05       	cpc	r21, r1
    39a4:	19 f0       	breq	.+6      	; 0x39ac <malloc+0x5a>
    39a6:	84 17       	cp	r24, r20
    39a8:	95 07       	cpc	r25, r21
    39aa:	08 f4       	brcc	.+2      	; 0x39ae <malloc+0x5c>
    39ac:	ac 01       	movw	r20, r24
    39ae:	fe 01       	movw	r30, r28
    39b0:	8a 81       	ldd	r24, Y+2	; 0x02
    39b2:	9b 81       	ldd	r25, Y+3	; 0x03
    39b4:	9c 01       	movw	r18, r24
    39b6:	e9 01       	movw	r28, r18
    39b8:	20 97       	sbiw	r28, 0x00	; 0
    39ba:	e9 f6       	brne	.-70     	; 0x3976 <malloc+0x24>
    39bc:	41 15       	cp	r20, r1
    39be:	51 05       	cpc	r21, r1
    39c0:	a9 f1       	breq	.+106    	; 0x3a2c <malloc+0xda>
    39c2:	ca 01       	movw	r24, r20
    39c4:	86 1b       	sub	r24, r22
    39c6:	97 0b       	sbc	r25, r23
    39c8:	04 97       	sbiw	r24, 0x04	; 4
    39ca:	08 f4       	brcc	.+2      	; 0x39ce <malloc+0x7c>
    39cc:	ba 01       	movw	r22, r20
    39ce:	e0 e0       	ldi	r30, 0x00	; 0
    39d0:	f0 e0       	ldi	r31, 0x00	; 0
    39d2:	2a c0       	rjmp	.+84     	; 0x3a28 <malloc+0xd6>
    39d4:	8d 91       	ld	r24, X+
    39d6:	9c 91       	ld	r25, X
    39d8:	11 97       	sbiw	r26, 0x01	; 1
    39da:	84 17       	cp	r24, r20
    39dc:	95 07       	cpc	r25, r21
    39de:	f9 f4       	brne	.+62     	; 0x3a1e <malloc+0xcc>
    39e0:	64 17       	cp	r22, r20
    39e2:	75 07       	cpc	r23, r21
    39e4:	81 f4       	brne	.+32     	; 0x3a06 <malloc+0xb4>
    39e6:	12 96       	adiw	r26, 0x02	; 2
    39e8:	8d 91       	ld	r24, X+
    39ea:	9c 91       	ld	r25, X
    39ec:	13 97       	sbiw	r26, 0x03	; 3
    39ee:	30 97       	sbiw	r30, 0x00	; 0
    39f0:	19 f0       	breq	.+6      	; 0x39f8 <malloc+0xa6>
    39f2:	93 83       	std	Z+3, r25	; 0x03
    39f4:	82 83       	std	Z+2, r24	; 0x02
    39f6:	04 c0       	rjmp	.+8      	; 0x3a00 <malloc+0xae>
    39f8:	90 93 af 5c 	sts	0x5CAF, r25
    39fc:	80 93 ae 5c 	sts	0x5CAE, r24
    3a00:	fd 01       	movw	r30, r26
    3a02:	32 96       	adiw	r30, 0x02	; 2
    3a04:	4f c0       	rjmp	.+158    	; 0x3aa4 <malloc+0x152>
    3a06:	ca 01       	movw	r24, r20
    3a08:	86 1b       	sub	r24, r22
    3a0a:	97 0b       	sbc	r25, r23
    3a0c:	fd 01       	movw	r30, r26
    3a0e:	e8 0f       	add	r30, r24
    3a10:	f9 1f       	adc	r31, r25
    3a12:	61 93       	st	Z+, r22
    3a14:	71 93       	st	Z+, r23
    3a16:	02 97       	sbiw	r24, 0x02	; 2
    3a18:	8d 93       	st	X+, r24
    3a1a:	9c 93       	st	X, r25
    3a1c:	43 c0       	rjmp	.+134    	; 0x3aa4 <malloc+0x152>
    3a1e:	fd 01       	movw	r30, r26
    3a20:	82 81       	ldd	r24, Z+2	; 0x02
    3a22:	93 81       	ldd	r25, Z+3	; 0x03
    3a24:	9c 01       	movw	r18, r24
    3a26:	d9 01       	movw	r26, r18
    3a28:	10 97       	sbiw	r26, 0x00	; 0
    3a2a:	a1 f6       	brne	.-88     	; 0x39d4 <malloc+0x82>
    3a2c:	80 91 ac 5c 	lds	r24, 0x5CAC
    3a30:	90 91 ad 5c 	lds	r25, 0x5CAD
    3a34:	89 2b       	or	r24, r25
    3a36:	41 f4       	brne	.+16     	; 0x3a48 <malloc+0xf6>
    3a38:	80 91 b6 05 	lds	r24, 0x05B6
    3a3c:	90 91 b7 05 	lds	r25, 0x05B7
    3a40:	90 93 ad 5c 	sts	0x5CAD, r25
    3a44:	80 93 ac 5c 	sts	0x5CAC, r24
    3a48:	40 91 b8 05 	lds	r20, 0x05B8
    3a4c:	50 91 b9 05 	lds	r21, 0x05B9
    3a50:	41 15       	cp	r20, r1
    3a52:	51 05       	cpc	r21, r1
    3a54:	41 f4       	brne	.+16     	; 0x3a66 <malloc+0x114>
    3a56:	4d b7       	in	r20, 0x3d	; 61
    3a58:	5e b7       	in	r21, 0x3e	; 62
    3a5a:	80 91 b4 05 	lds	r24, 0x05B4
    3a5e:	90 91 b5 05 	lds	r25, 0x05B5
    3a62:	48 1b       	sub	r20, r24
    3a64:	59 0b       	sbc	r21, r25
    3a66:	20 91 ac 5c 	lds	r18, 0x5CAC
    3a6a:	30 91 ad 5c 	lds	r19, 0x5CAD
    3a6e:	24 17       	cp	r18, r20
    3a70:	35 07       	cpc	r19, r21
    3a72:	b0 f4       	brcc	.+44     	; 0x3aa0 <malloc+0x14e>
    3a74:	ca 01       	movw	r24, r20
    3a76:	82 1b       	sub	r24, r18
    3a78:	93 0b       	sbc	r25, r19
    3a7a:	86 17       	cp	r24, r22
    3a7c:	97 07       	cpc	r25, r23
    3a7e:	80 f0       	brcs	.+32     	; 0x3aa0 <malloc+0x14e>
    3a80:	ab 01       	movw	r20, r22
    3a82:	4e 5f       	subi	r20, 0xFE	; 254
    3a84:	5f 4f       	sbci	r21, 0xFF	; 255
    3a86:	84 17       	cp	r24, r20
    3a88:	95 07       	cpc	r25, r21
    3a8a:	50 f0       	brcs	.+20     	; 0x3aa0 <malloc+0x14e>
    3a8c:	42 0f       	add	r20, r18
    3a8e:	53 1f       	adc	r21, r19
    3a90:	50 93 ad 5c 	sts	0x5CAD, r21
    3a94:	40 93 ac 5c 	sts	0x5CAC, r20
    3a98:	f9 01       	movw	r30, r18
    3a9a:	61 93       	st	Z+, r22
    3a9c:	71 93       	st	Z+, r23
    3a9e:	02 c0       	rjmp	.+4      	; 0x3aa4 <malloc+0x152>
    3aa0:	e0 e0       	ldi	r30, 0x00	; 0
    3aa2:	f0 e0       	ldi	r31, 0x00	; 0
    3aa4:	cf 01       	movw	r24, r30
    3aa6:	df 91       	pop	r29
    3aa8:	cf 91       	pop	r28
    3aaa:	08 95       	ret

00003aac <free>:
    3aac:	cf 93       	push	r28
    3aae:	df 93       	push	r29
    3ab0:	00 97       	sbiw	r24, 0x00	; 0
    3ab2:	09 f4       	brne	.+2      	; 0x3ab6 <free+0xa>
    3ab4:	50 c0       	rjmp	.+160    	; 0x3b56 <free+0xaa>
    3ab6:	ec 01       	movw	r28, r24
    3ab8:	22 97       	sbiw	r28, 0x02	; 2
    3aba:	1b 82       	std	Y+3, r1	; 0x03
    3abc:	1a 82       	std	Y+2, r1	; 0x02
    3abe:	a0 91 ae 5c 	lds	r26, 0x5CAE
    3ac2:	b0 91 af 5c 	lds	r27, 0x5CAF
    3ac6:	10 97       	sbiw	r26, 0x00	; 0
    3ac8:	09 f1       	breq	.+66     	; 0x3b0c <free+0x60>
    3aca:	40 e0       	ldi	r20, 0x00	; 0
    3acc:	50 e0       	ldi	r21, 0x00	; 0
    3ace:	ac 17       	cp	r26, r28
    3ad0:	bd 07       	cpc	r27, r29
    3ad2:	08 f1       	brcs	.+66     	; 0x3b16 <free+0x6a>
    3ad4:	bb 83       	std	Y+3, r27	; 0x03
    3ad6:	aa 83       	std	Y+2, r26	; 0x02
    3ad8:	fe 01       	movw	r30, r28
    3ada:	21 91       	ld	r18, Z+
    3adc:	31 91       	ld	r19, Z+
    3ade:	e2 0f       	add	r30, r18
    3ae0:	f3 1f       	adc	r31, r19
    3ae2:	ae 17       	cp	r26, r30
    3ae4:	bf 07       	cpc	r27, r31
    3ae6:	79 f4       	brne	.+30     	; 0x3b06 <free+0x5a>
    3ae8:	8d 91       	ld	r24, X+
    3aea:	9c 91       	ld	r25, X
    3aec:	11 97       	sbiw	r26, 0x01	; 1
    3aee:	28 0f       	add	r18, r24
    3af0:	39 1f       	adc	r19, r25
    3af2:	2e 5f       	subi	r18, 0xFE	; 254
    3af4:	3f 4f       	sbci	r19, 0xFF	; 255
    3af6:	39 83       	std	Y+1, r19	; 0x01
    3af8:	28 83       	st	Y, r18
    3afa:	12 96       	adiw	r26, 0x02	; 2
    3afc:	8d 91       	ld	r24, X+
    3afe:	9c 91       	ld	r25, X
    3b00:	13 97       	sbiw	r26, 0x03	; 3
    3b02:	9b 83       	std	Y+3, r25	; 0x03
    3b04:	8a 83       	std	Y+2, r24	; 0x02
    3b06:	41 15       	cp	r20, r1
    3b08:	51 05       	cpc	r21, r1
    3b0a:	71 f4       	brne	.+28     	; 0x3b28 <free+0x7c>
    3b0c:	d0 93 af 5c 	sts	0x5CAF, r29
    3b10:	c0 93 ae 5c 	sts	0x5CAE, r28
    3b14:	20 c0       	rjmp	.+64     	; 0x3b56 <free+0xaa>
    3b16:	12 96       	adiw	r26, 0x02	; 2
    3b18:	8d 91       	ld	r24, X+
    3b1a:	9c 91       	ld	r25, X
    3b1c:	13 97       	sbiw	r26, 0x03	; 3
    3b1e:	ad 01       	movw	r20, r26
    3b20:	00 97       	sbiw	r24, 0x00	; 0
    3b22:	11 f0       	breq	.+4      	; 0x3b28 <free+0x7c>
    3b24:	dc 01       	movw	r26, r24
    3b26:	d3 cf       	rjmp	.-90     	; 0x3ace <free+0x22>
    3b28:	fa 01       	movw	r30, r20
    3b2a:	d3 83       	std	Z+3, r29	; 0x03
    3b2c:	c2 83       	std	Z+2, r28	; 0x02
    3b2e:	21 91       	ld	r18, Z+
    3b30:	31 91       	ld	r19, Z+
    3b32:	e2 0f       	add	r30, r18
    3b34:	f3 1f       	adc	r31, r19
    3b36:	ce 17       	cp	r28, r30
    3b38:	df 07       	cpc	r29, r31
    3b3a:	69 f4       	brne	.+26     	; 0x3b56 <free+0xaa>
    3b3c:	88 81       	ld	r24, Y
    3b3e:	99 81       	ldd	r25, Y+1	; 0x01
    3b40:	28 0f       	add	r18, r24
    3b42:	39 1f       	adc	r19, r25
    3b44:	2e 5f       	subi	r18, 0xFE	; 254
    3b46:	3f 4f       	sbci	r19, 0xFF	; 255
    3b48:	fa 01       	movw	r30, r20
    3b4a:	31 83       	std	Z+1, r19	; 0x01
    3b4c:	20 83       	st	Z, r18
    3b4e:	8a 81       	ldd	r24, Y+2	; 0x02
    3b50:	9b 81       	ldd	r25, Y+3	; 0x03
    3b52:	93 83       	std	Z+3, r25	; 0x03
    3b54:	82 83       	std	Z+2, r24	; 0x02
    3b56:	df 91       	pop	r29
    3b58:	cf 91       	pop	r28
    3b5a:	08 95       	ret

00003b5c <memset>:
    3b5c:	dc 01       	movw	r26, r24
    3b5e:	01 c0       	rjmp	.+2      	; 0x3b62 <memset+0x6>
    3b60:	6d 93       	st	X+, r22
    3b62:	41 50       	subi	r20, 0x01	; 1
    3b64:	50 40       	sbci	r21, 0x00	; 0
    3b66:	e0 f7       	brcc	.-8      	; 0x3b60 <memset+0x4>
    3b68:	08 95       	ret

00003b6a <_exit>:
    3b6a:	f8 94       	cli

00003b6c <__stop_program>:
    3b6c:	ff cf       	rjmp	.-2      	; 0x3b6c <__stop_program>
